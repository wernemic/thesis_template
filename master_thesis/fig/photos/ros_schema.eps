%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 2494 1398
%%HiResBoundingBox: 0.10 0.00 2493.80 1398.00
%%Creator: (Zamzar)
%%LanguageLevel: 2
%%CreationDate: D:20230516121250Z00'00'
%%Pages: 1
%%Copyright: (Zamzar)
%%EndComments
%%BeginProlog
/DSC_OPDFREAD true def
/SetPageSize false def
/EPS2Write true def
currentdict/DSC_OPDFREAD known{
currentdict/DSC_OPDFREAD get
}{
false
}ifelse
10 dict begin
/DSC_OPDFREAD exch def
/this currentdict def
/y 720 def
/ebuf 200 string def
/prnt{
36//this/y get moveto//ebuf cvs show
//this/y 2 copy get 12 sub put
}bind def
/newline{
36//this/y get moveto
//this/y 2 copy get 12 sub put
}bind def
errordict/handleerror
{systemdict begin
$error begin
newerror
{(%%[ Error handled by opdfread.ps : )print errorname//ebuf cvs print(; OffendingCommand: )
print/command load//ebuf cvs print( ]%%)= flush
/newerror false store vmstatus pop pop 0 ne
{grestoreall
}if
errorname(VMerror)ne
{showpage
}if
initgraphics
0 720 moveto
errorname(VMerror)eq
{//this/ehsave known
{clear//this/ehsave get restore 2 vmreclaim
}if
vmstatus exch pop exch pop
}
/Courier 12 selectfont
{
(ERROR: )//prnt exec errorname//prnt exec
(OFFENDING COMMAND: )//prnt exec
/command load//prnt exec
$error/ostack known{
(%%[STACK:)=
(STACK:)//prnt exec
$error/ostack get aload length{
//newline exec
dup mark eq{
(-mark-)dup = show
}{
dup type/nametype eq{
dup xcheck not{
(/)show
(/)print
}if
}if
dup =//ebuf cvs show
}ifelse
}repeat
}if
}ifelse
(%%]%)=
//systemdict/showpage get exec
quit
}if
end
end
}bind readonly put
end
50 dict begin
/DefaultSwitch
{
dup where{
pop pop
}{
false def
}ifelse
}bind def
/=string 256 string def
/=only{
//=string cvs print
}bind def
/HexDigits(0123456789ABCDEF)readonly def
/PrintHex
{8{
dup -28 bitshift 15 and//HexDigits exch 1 getinterval//=only exec
4 bitshift
}repeat
pop
}bind def
/PDFR_DEBUG DefaultSwitch
/PDFR_DUMP DefaultSwitch
/PDFR_STREAM DefaultSwitch
/TTFDEBUG DefaultSwitch
/RotatePages DefaultSwitch
/FitPages DefaultSwitch
/CenterPages DefaultSwitch
/SetPageSize DefaultSwitch
/error
{
counttomark 1 sub -1 0{
index dup type/arraytype eq{==}{=only}ifelse
}for
()=
cleartomark
....Undefined
}bind def
//SetPageSize{
//RotatePages//FitPages or//CenterPages or{
mark(/RotatePages, /FitPages and CenterPages are not allowed with /SetPageSize)//error exec
}if
}
{
//FitPages//CenterPages and{
mark(CenterPages is not allowed with /FitPages)//error exec
}if
}
ifelse
/knownget
{
2 copy known{
get true
}{
pop pop false
}ifelse
}bind def
/IsUpper
{dup(A)0 get ge exch(Z)0 get le and
}bind def
/cpa2g{
dup length array
0 1 2 index length 1 sub{
dup 3 index exch get cp2g
3 copy put pop pop
}for
exch pop
}bind def
/cpd2g{
dup length dict exch{
cp2g 2 index 3 1 roll put
}forall
}bind def
/cps2g{
dup length string copy
}bind def
/cp2gprocs
<</arraytype//cpa2g/dicttype//cpd2g/packedarraytype//cpa2g/stringtype//cps2g >>
def
/cp2g{
dup gcheck not{
dup//cp2gprocs 1 index type
2 copy known{
get currentglobal 3 1 roll true setglobal exec exch setglobal
1 index wcheck not{readonly}if
1 index xcheck{cvx}if
exch pop
}{
pop pop
}ifelse
}if
}bind def
/BlockBuffer 65535 string def
/PDFReader currentdict def
/ObjectRegistryMaxLength 50000 def
/ObjectRegistry 10 dict def
ObjectRegistry
begin
0 ObjectRegistryMaxLength dict def
end
/CurrentObject null def
/DoneDocumentStructure false def
/GraphicState 20 dict begin
/InitialTextMatrix matrix def
/InitialMatrix matrix currentmatrix def
currentdict end def
/TempMatrix matrix def
/GraphicStateStack 20 array def
/GraphicStateStackPointer 0 def
/InitialTextMatrixStack 20 array def
/InitialTextMatrixStackPointer 0 def
/PDFColorSpaces 50 dict def
/InstalledFonts 50 dict def
/MacRomanEncodingInverse null def
currentglobal false setglobal
userdict/PDFR_InitialGS gstate put
userdict/PDFR_Patterns 50 dict put
userdict/FuncDataReader 10 dict put
setglobal
/InitialExtGState 20 dict begin
/BG2 currentblackgeneration cp2g def
/UCR2 currentundercolorremoval cp2g def
/TR2 currentglobal false setglobal[currentcolortransfer]exch setglobal cp2g def
/HT currenthalftone cp2g def
currentdict end readonly def
/InitialGraphicState 20 dict begin
/FontSize 0 def
/CharacterSpacing 0 def
/TextLeading 0 def
/TextRenderingMode 0 def
/WordSpacing 0 def
currentdict end readonly def
/SimpleColorSpaceNames 15 dict begin
/DeviceGray true def
/DeviceRGB true def
/DeviceCMYK true def
currentdict end readonly def
/1_24_bitshift_1_sub 1 24 bitshift 1 sub def
/ReadFontProcs 10 dict def
/GetObject
{
dup ObjectRegistryMaxLength idiv
//PDFReader/ObjectRegistry get exch knownget{
exch knownget
}{
pop false
}ifelse
}bind def
/PutObject
{
1 index ObjectRegistryMaxLength idiv
//PDFReader/ObjectRegistry get 1 index knownget{
exch pop
3 1 roll put
}{
//PDFReader/ObjectRegistry get dup
begin
1 index ObjectRegistryMaxLength dict def
end
exch get
3 1 roll put
}ifelse
}bind def
/Register
{
1 index GetObject{
dup xcheck{
4 3 roll pop
//PDFR_DEBUG{
(Have a daemon for )print 2 index ==
}if
exec
}{
dup null ne{
mark(The object )4 index(is already defined : )4 index//error exec
}{
pop
}ifelse
3 2 roll
exec
}ifelse
}{
3 2 roll
exec
}ifelse
PutObject
}bind def
/IsRegistered
{
GetObject{
null ne
}{
false
}ifelse
}bind def
/GetRegistered
{
dup GetObject not{
exch mark exch(Object )exch( isn't defined before needed (1).)//error exec
}if
dup xcheck{
exch mark exch(Object )exch( isn't defined before needed (2).)//error exec
}{
dup null eq{
exch mark exch(Object )exch( isn't defined before needed (3).)//error exec
}if
exch pop
}ifelse
}bind def
/StandardFontNames<<
/Times-Roman true
/Helvetica true
/Courier true
/Symbol true
/Times-Bold true
/Helvetica-Bold true
/Courier-Bold true
/ZapfDingbats true
/Times-Italic true
/Helvetica-Oblique true
/Courier-Oblique true
/Times-BoldItalic true
/Helvetica-BoldOblique true
/Courier-BoldOblique true
>>def
/CleanAllResources
{//PDFR_DEBUG{
(CleanAllResources beg)=
}if
//PDFReader/ObjectRegistry get{
dup length 0 exch 1 exch 1 sub{
2 copy get dup xcheck{
pop pop
}{
dup null eq{
pop pop
}{
dup type/dicttype eq{/.Global known}{pop false}ifelse{
pop
}{
//PDFR_DEBUG{
(Dropping )print dup =
}if
1 index exch/DroppedObject put
}ifelse
}ifelse
}ifelse
}for
pop
}forall
FontDirectory length dict begin
FontDirectory{
pop
dup//StandardFontNames exch known not{
dup null def
}if
pop
}forall
currentdict
end{
pop
//PDFR_DEBUG{
(Undefining font )print dup =
}if
undefinefont
}forall
//PDFR_DEBUG{
(CleanAllResources end)=
}if
}bind def
/PrintReference
{
//PDFR_DEBUG{
({ )print
dup{
=only( )print
}forall
( })=
}if
}bind def
/R
{
0 ne{
exch mark exch(A referred object generation )exch( isn't 0.)//error exec
}if
[
exch//GetRegistered/exec load
]cvx
//PrintReference exec
}bind def
/IsObjRef
{
dup type/arraytype eq{
dup length 3 eq{
dup xcheck exch
dup 0 get type/integertype eq 3 2 roll and exch
dup 1 get//GetRegistered eq 3 2 roll and exch
2 get/exec load eq and
}{
pop false
}ifelse
}{
pop false
}ifelse
}bind def
/DoNothing
{
}def
/RunTypeDaemon
{
dup type/dicttype eq{
dup/Type//knownget exec{
//PDFReader/TypeDaemons get exch
//knownget exec{
exec
}if
}if
}if
}bind def
/obj
{
//PDFR_DEBUG{
(Defining )print 1 index =only( )print dup =only( obj)=
}if
0 ne{
exch mark exch(An object generation )exch( isn't 0.)//error exec
}if
}bind def
/endobj
{
//PDFR_DEBUG{
(endobj )=
}if
count 1 eq{
pop
}{
dup type/dicttype eq{
dup/.endobj_daemon//knownget exec{
//PDFR_DEBUG{(.endobj_daemon for )print 2 index =}if
exec
}if
}if
dup type/dicttype eq{dup/ImmediateExec known}{false}ifelse{
pop pop
}{
//PDFR_DEBUG{
(Storing )print 1 index =
}if
//RunTypeDaemon exec
//DoNothing 3 1 roll//Register exec
}ifelse
}ifelse
}bind def
/StoreBlock
{
//PDFR_DEBUG{
(StoreBlock )print//PDFReader/BlockCount get =only(, Length = )print dup length =
}if
dup length string copy
//PDFReader/BlockCount get exch
//PDFReader/CurrentObject get 3 1 roll
put
//PDFReader/BlockCount get 1 add
//PDFReader exch/BlockCount exch put
}bind def
/CheckLength
{dup type/integertype ne{
mark(Object length isn't an integer.)//error exec
}if
}bind def
/ResolveD
{
3 copy pop get
dup//IsObjRef exec{
//PDFR_DEBUG{
(Resolving )print//PrintReference exec
}if
exec
exch exec
}{
exch pop
}ifelse
dup 4 1 roll
put
}bind def
/ResolveA
{2 index 2 index get
dup//IsObjRef exec{
exec
exch exec
3 copy put
}{
exch pop
}ifelse
exch pop exch pop
}bind def
/StoreStream
{
dup//PDFReader exch/CurrentObject exch put
//PDFReader/BlockCount 0 put
dup/Length//CheckLength//ResolveD exec
//PDFR_DEBUG{
(StoreStream Length = )print dup =
}if
currentfile exch()/SubFileDecode filter
{dup//BlockBuffer readstring{
//StoreBlock exec
}{
//StoreBlock exec
exit
}ifelse
}loop
pop
//PDFReader/CurrentObject null put
//PDFR_DEBUG{
(StoreStream end.)=
}if
}bind def
/MakeStreamDumper
{
//PDFR_DEBUG{
(MakeStreamDumper beg.)=
}if
currentglobal exch dup gcheck setglobal
[exch
1 dict dup/c 0 put exch
1024 string
{readstring pop
(StreamDumper )print 1 index/c get =string cvs print( )print
dup length =string cvs print( <)print dup print(>\n)print
dup length
3 2 roll
dup/c get
3 2 roll
add/c exch put
}/exec load
]
cvx 0()/SubFileDecode filter
exch setglobal
//PDFR_DEBUG{
(MakeStreamDumper end.)=
}if
}bind def
/ShortFilterNames 15 dict begin
/AHx/ASCIIHexDecode def
/A85/ASCII85Decode def
/LZW/LZWDecode def
/Fl/FlateDecode def
/RL/RunLengthDecode def
/CCF/CCITTFaxDecode def
/DCT/DCTDecode def
currentdict end readonly def
/AppendFilters
{
//PDFR_DEBUG{
(AppendFilters beg.)=
}if
dup 3 1 roll
/Filter//knownget exec{
dup type/nametype eq{
dup//ShortFilterNames exch//knownget exec{
exch pop
}if
2 index/DecodeParms//knownget exec{
exch
}if
filter
}{
dup 0 exch 1 exch length 1 sub{
2 copy get
dup//ShortFilterNames exch//knownget exec{
exch pop
}if
3 1 roll
4 index/DecodeParms//knownget exec{
exch get
}{
pop null
}ifelse
dup null eq{
pop 3 1 roll filter exch
}{
3 1 roll
4 1 roll filter exch
}ifelse
}for
pop
}ifelse
//PDFR_DEBUG//PDFR_DUMP and{
//MakeStreamDumper exec
}if
}if
exch pop
//PDFR_DEBUG{
(AppendFilters end.)=
}if
}bind def
/ExecuteStream
{
dup//PDFReader exch/CurrentObject exch put
dup/Length//CheckLength//ResolveD exec
//PDFR_DEBUG{
(ExecuteStream id = )print 2 index =only( Length = )print dup =
}if
//PDFReader/InitialGraphicState get
//PDFReader/GraphicState get copy pop
//PDFReader/Operators get begin
currentfile exch()/SubFileDecode filter
1 index//AppendFilters exec
cvx mark exch
exec
counttomark 0 ne{
mark(Data left on ostack after an immediate stream execution.)//error exec
}if
cleartomark
end
//PDFR_DEBUG{
(ExecuteStream end.)=
}if
//PDFReader/CurrentObject null put
dup/IsPage known{
dup/Context get/NumCopies//knownget exec{
1 sub{
copypage
}repeat
}if
EPS2Write not{showpage}if
}if
}bind def
/stream
{
//PDFR_DEBUG{
1 index =only( stream)=
}if
1 index GetObject{
dup xcheck{
exec
1 index null PutObject
}{
pop
}ifelse
}if
dup/ImmediateExec known{
dup/GlobalExec//knownget exec{
currentglobal 4 1 roll
setglobal
//ExecuteStream exec
3 2 roll setglobal
}{
//ExecuteStream exec
}ifelse
}{
//StoreStream exec
}ifelse
dup/.CleanResources//knownget exec{
/All eq{
//CleanAllResources exec
}if
}if
}bind def
/HookFont
{
//PDFR_DEBUG{
(Loaded the font )print dup/FontName get =
}if
{
dup/FontFileType get dup/Type1 eq exch/MMType1 eq or{
dup/FontName get
//PDFReader/RemoveFontNamePrefix get exec
findfont
exit
}if
dup/FontFileType get/TrueType eq{
//PDFReader/MakeType42 get exec
//PDFR_DEBUG{
(Font dict <<)=
dup{
1 index/sfnts eq{
exch pop
(/sfnts [)print
{
(-string\()print length//=only exec(\)- )=
}forall
(])=
}{
exch//=only exec( )print ==
}ifelse
}forall
(>>)=
}if
dup/FontName get exch definefont
exit
}if
mark(FontHook has no proc for )2 index/FontFileType get//error exec
}loop
/Font exch put
}bind def
/endstream
{
}bind def
/xref
{
//PDFR_DEBUG{
(xref)=
//PDFR_DUMP{
//PDFReader/ObjectRegistry get ==
}if
}if
end
count 0 ne{
mark(Excessive data on estack at the end of the interpretation.)//error exec
}if
currentfile 1(%%EOF)/SubFileDecode filter
flushfile
cleardictstack
}bind def
/ResolveDict
{dup{
pop 1 index exch
//DoNothing//ResolveD exec
pop
}forall
pop
}bind def
/SetupPageView
{
//PDFR_DEBUG{
(SetupPageView beg)=
}if
//DSC_OPDFREAD not{
//GraphicState/InitialMatrix get setmatrix
}if
/MediaBox get aload pop
3 index neg 3 index neg translate
3 -1 roll sub 3 1 roll exch sub exch
userdict/.HWMargins//knownget exec{
aload pop
}{
currentpagedevice/.HWMargins//knownget exec{
aload pop
}{
0 0 0 0
}ifelse
}ifelse
currentpagedevice/PageSize get aload pop
3 -1 roll sub 3 1 roll exch sub exch
exch 3 index sub exch 3 index sub
//SetPageSize{
//PDFR_DEBUG{
(Setting page size to )print 1 index//=only exec( )print dup =
}if
pop pop 3 index 3 index 2 copy
currentglobal false setglobal 3 1 roll
currentpagedevice dup/PageSize known{
/PageSize get aload pop
}{
0 0
}ifelse
round cvi 2 index round cvi eq
exch round cvi 3 index round cvi eq and
{
//PDFR_DEBUG{(PageSize matches request)== flush}if
pop pop
}{
/MediaRequested where{
//PDFR_DEBUG{(MediaRequested is true, check against new request)== flush}if
/MediaRequested get aload pop
round cvi 2 index round cvi eq
exch round cvi 3 index round cvi eq and
{
//PDFR_DEBUG{(MediaRequested same as current request, ignore)== flush}if
pop pop false
}{
//PDFR_DEBUG{(MediaRequested different to current request)== flush}if
true
}ifelse
}{
//PDFR_DEBUG{(No MediaRequested yet)== flush}if
true
}ifelse
{
//PDFR_DEBUG{(Setting pagesize)== flush}if
2 array astore
dup/MediaRequested exch def
<< exch/PageSize exch >>setpagedevice
}if
}ifelse
userdict/PDFR_InitialGS gstate put
setglobal
}if
//RotatePages{
2 copy gt 6 index 6 index gt ne{
1 index 5 index le 1 index 5 index le and not
}{
false
}ifelse
}{
false
}ifelse
{//CenterPages{
//PDFR_DEBUG{
(Rotating page, and then centering it)==
}if
90 rotate
0 5 index neg translate
5 index 1 index exch sub 2 div
2 index 6 index sub 2 div neg
translate
}{
//FitPages{
1 index 5 index div 1 index 7 index div
2 copy gt{
exch
}if
pop dup scale
}if
90 rotate
0 5 index neg translate
}ifelse
}{
//CenterPages{
//PDFR_DEBUG{
(Ccentering page)==
}if
1 index 6 index sub 2 div
1 index 6 index sub 2 div
translate
}{
//FitPages{
1 index 6 index div 1 index 6 index div
2 copy gt{
exch
}if
pop dup scale
}if
}ifelse
}ifelse
pop pop
translate
pop pop
//PDFR_DEBUG{
(SetupPageView end)=
}if
}bind def
/PageContentsDaemon
{
//PDFR_DEBUG{
(Executing PageContentsDaemon for )print 2 index =
}if
1 index exch/Context exch put
dup/ImmediateExec true put
dup/IsPage true put
SetPageSize{dup/Context get//SetupPageView exec}if
}bind def
/FontFileDaemon
{
//PDFR_DEBUG{
(Executing FontFileDaemon for )print 2 index =
}if
dup/FontFileType get
2 index exch
dup//ReadFontProcs exch//knownget exec{
exch pop exec
}{
mark(FontFile reader for )2 index( isn't implemented yet.)//error exec
}ifelse
//PDFR_DEBUG{
(FontFileDaemon end)=
}if
pop
}bind def
/FontDescriptorDaemon
{
//PDFR_DEBUG{
(Executing FontDescriptorDaemon for )print 2 index =
}if
2 copy/FontResource exch put
/Subtype get 1 index exch/FontFileType exch put
}bind def
/UnPDFEscape{
dup dup length string cvs
dup(#)search{
{
pop
(16#--)2 index 0 2 getinterval
1 index 3 2 getinterval copy pop
cvi
0 exch put
0
1 index 2 1 index length 2 sub getinterval
3 copy putinterval
length
3 copy exch put
getinterval
(#)search not{
pop exit
}if
}loop
(\0)search pop exch pop exch pop
cvn
exch pop
}{
pop pop
}ifelse
}bind def
/TypeDaemons<<
/Page
{//PDFR_DEBUG{
(Recognized a page.)=
}if
dup/Contents//knownget exec{
0 get//DoNothing exch
[
3 index//PageContentsDaemon/exec load
]cvx
//Register exec
}{
(fixme: page with no Contents won't be printed.)=
}ifelse
}bind
/FontDescriptor
{//PDFR_DEBUG{
(Recognized a font descriptor.)=
}if
dup/FontName//knownget exec{
1 index/FontName 3 -1 roll//UnPDFEscape exec put
}if
dup dup/FontFile known{/FontFile}{/FontFile2}ifelse
//knownget exec{
0 get//DoNothing exch
[
3 index//FontFileDaemon/exec load
]cvx
//Register exec
}{
(Font descriptor )print 1 index =only( has no FontFile.)=
}ifelse
}bind
/Font
{//PDFR_DEBUG{
(Recognized a font resource.)=
}if
dup/BaseFont//knownget exec{
//UnPDFEscape exec 2 copy/BaseFont exch put
//PDFReader/RemoveFontNamePrefix get exec
currentglobal exch
dup/Font resourcestatus{
pop pop
//PDFReader/GetInstalledFont get exec pop
}{
pop
}ifelse
setglobal
}if
dup/FontDescriptor//knownget exec{
0 get
dup//IsRegistered exec{
//PDFR_DEBUG{
(already registered )print dup =
}if
pop
}{
//DoNothing exch
[
3 index//FontDescriptorDaemon/exec load
]cvx
//Register exec
}ifelse
}if
}bind
>>def
/MakeStreamReader
{dup
[
exch
//PDFR_DEBUG{
(Stream proc )
/print load
//PDFR_STREAM{
(<)
/print load
}if
}if
1 dict dup/i -1 put
/dup load
/i
/get load
1
/add load
/dup load
3
1
/roll load
/i
/exch load
/put load
//knownget
/exec load
/not load
{()}
/if load
//PDFR_DEBUG{
//PDFR_STREAM{
/dup load
/print load
(>)
/print load
}if
( end of stream proc.\n)
/print load
}if
]cvx
//PDFR_DEBUG{
(Stream reader )print dup ==
}if
0()/SubFileDecode filter
exch//AppendFilters exec
}bind def
/RunDelayedStream
{
//GraphicState/InitialTextMatrix get
//InitialTextMatrixStack//PDFReader/InitialTextMatrixStackPointer get
2 copy get null eq{
2 copy currentglobal true setglobal matrix exch setglobal put
}if
get copy pop
//PDFReader/InitialTextMatrixStackPointer 2 copy get 1 add put
//MakeStreamReader exec
mark exch
cvx exec
counttomark 0 ne{
mark(Data left on ostack after a delayed stream execution.)//error exec
}if
cleartomark
//PDFReader/InitialTextMatrixStackPointer 2 copy get 1 sub put
//InitialTextMatrixStack//PDFReader/InitialTextMatrixStackPointer get get
//GraphicState/InitialTextMatrix get
copy pop
}bind def
//ReadFontProcs begin
/Type1
{//PDFR_DEBUG{
(ReadFontProcs.Type1)=
}if
dup/.endobj_daemon[4 index//HookFont/exec load]cvx put
dup/ImmediateExec true put
/GlobalExec true put
}bind def
/MMType1//Type1 def
/TrueType
{//PDFR_DEBUG{
(ReadFontProcs.TrueType)=
}if
dup/.endobj_daemon[4 index//HookFont/exec load]cvx put
pop
}bind def
end
/.opdloadttfontdict 50 dict def
.opdloadttfontdict begin
/maxstring 65400 def
end
/.InsertionSort
{
/CompareProc exch def
/Array exch def
1 1 Array length 1 sub
{
/Ix exch def
/Value1 Array Ix get def
/Jx Ix 1 sub def
{
Jx 0 lt{
exit
}if
/Value2 Array Jx get def
Value1 Value2 CompareProc{
exit
}if
Array Jx 1 add Value2 put
/Jx Jx 1 sub def
}loop
Array Jx 1 add Value1 put
}for
Array
}bind def
/putu16{
3 copy -8 bitshift put
exch 1 add exch 16#ff and put
}bind def
/putu32{
3 copy -16 bitshift putu16
exch 2 add exch 16#ffff and putu16
}bind def
/.readtable{
dup dup 1 and add string
dup 0 4 -1 roll getinterval
3 -1 roll exch
dup()ne{readstring}if pop pop
}bind def
/.readbigtable{
dup maxstring lt{
.readtable
}{
currentuserparams/VMReclaim get -2 vmreclaim
[4 2 roll{
dup maxstring le{exit}if
1 index maxstring string readstring pop 3 1 roll maxstring sub
}loop .readtable]
exch vmreclaim
}ifelse
}bind def
/ReadTTF
{
.opdloadttfontdict begin
/TTFontFile exch def
/TableDir TTFontFile 12 string readstring pop def
/tables TTFontFile TableDir 4 getu16 16 mul string readstring pop def
/tabarray tables length 16 idiv array def
TableDir 0 4 getinterval(ttcf)eq{
QUIET not{(Can't handle TrueType font Collections.)=}if
/.loadttfonttables cvx/invalidfont signalerror
}{
0 16 tables length 1 sub{
dup
tables exch 16 getinterval
exch 16 div cvi exch
tabarray 3 1 roll put
}for
}ifelse
tabarray{exch 8 getu32 exch 8 getu32 gt}.InsertionSort pop
/Read TableDir length tables length add def
/tabs[
tabarray{
dup 8 getu32
Read sub
dup 0 gt{
dup string TTFontFile exch readstring pop pop
Read add/Read exch def
}{
pop
}ifelse
12 getu32
dup Read add
/Read exch def
TTFontFile exch .readbigtable
}forall
]def
end
}bind def
/GetLocaType
{
0 1 tabarray length 1 sub{
dup tabarray exch get
0 4 getinterval(head)eq{
tabs exch get
50 gets16
/LocaType exch def
exit
}{
pop
}ifelse
}for
}bind def
/GetNumGlyphs
{
0 1 tabarray length 1 sub{
dup tabarray exch get
0 4 getinterval(maxp)eq{
tabs exch get
4 getu16
/NumGlyphs exch def
exit
}{
pop
}ifelse
}for
}bind def
/StringToLoca
{
/LocaIndex exch def
/StringOffset 0 def
{
dup length StringOffset gt{
dup
LocaType 1 eq{
StringOffset getu32
LocaArray LocaIndex 3 -1 roll put
/LocaIndex LocaIndex 1 add def
/StringOffset StringOffset 4 add
def
}{
StringOffset getu16 2 mul
LocaArray length LocaIndex gt{
LocaArray LocaIndex 3 -1 roll put
}{
pop
}ifelse
/LocaIndex LocaIndex 1 add def
/StringOffset StringOffset 2 add
def
}ifelse
}{
pop
LocaIndex
exit
}ifelse
}loop
}bind def
/GetSortedLoca
{
NumGlyphs 1 add array/LocaArray exch def
0 1 tabarray length 1 sub{
dup tabarray exch get
0 4 getinterval(loca)eq{
tabs exch get
exit
}{
pop
}ifelse
}for
dup type/stringtype eq{
0 StringToLoca pop
}{
0 exch
{
exch StringToLoca
}forall
pop
}ifelse
LocaArray{gt}.InsertionSort pop
}bind def
/GetWorkingString
{
WorkString 0
GlyfArray GlyfStringIndex get
putinterval
/WorkBytes GlyfArray GlyfStringIndex get length def
/GlyfStringIndex GlyfStringIndex 1 add def
}bind def
/GetWorkingBytes
{
/BytesToRead exch def
WorkString 0 BytesToRead getinterval
dup length string copy
WorkString BytesToRead WorkBytes BytesToRead sub getinterval
dup length string copy
WorkString 0 3 -1 roll putinterval
/WorkBytes WorkBytes BytesToRead sub def
}bind def
/GetGlyfBytes
{
/ToRead exch def
WorkBytes 0 eq{
GetWorkingString
}if
WorkBytes ToRead ge{
ToRead string dup 0
ToRead GetWorkingBytes putinterval
}{
ToRead string
dup
0
WorkString 0 WorkBytes getinterval
putinterval
dup
WorkBytes
ToRead WorkBytes sub
GetWorkingString
GetWorkingBytes
putinterval
}ifelse
}bind def
/SplitGlyf
{
/GlyfArray exch def
/DestArray GlyfArray length 2 mul array def
/DestArrayIndex 0 def
/LastLoca 0 def
/NextLocaIndex 0 def
/LastLocaIndex 0 def
/GlyfStringIndex 0 def
/WorkString maxstring string def
/WorkBytes 0 def
{
LocaArray NextLocaIndex get
LastLoca sub maxstring gt
{
LocaArray LastLocaIndex get LastLoca sub
GetGlyfBytes
DestArray DestArrayIndex 3 -1 roll put
/DestArrayIndex DestArrayIndex 1 add def
LocaArray LastLocaIndex get/LastLoca exch def
}{
/LastLocaIndex NextLocaIndex def
/NextLocaIndex NextLocaIndex 1 add def
NextLocaIndex NumGlyphs gt
{
WorkBytes
GlyfStringIndex GlyfArray length lt{
GlyfArray GlyfStringIndex get length
add string dup
0
WorkString 0 WorkBytes getinterval
putinterval
dup
WorkBytes
GetWorkingString
WorkString 0 WorkBytes getinterval
putinterval
}{
pop
WorkString 0 WorkBytes getinterval
}ifelse
dup length string copy
DestArray DestArrayIndex 3 -1 roll put
exit
}if
}ifelse
}loop
DestArray
}bind def
/ProcessTTData
{
.opdloadttfontdict begin
0 1 tabarray length 1 sub{
/ix exch def
tabarray ix get
12 getu32 dup maxstring le{
dup 4 mod 0 ne{
4 div cvi 1 add 4 mul string/newstring exch def
/oldstring tabs ix get def
newstring 0 oldstring putinterval
0 1 newstring length oldstring length sub 1 sub{
newstring exch oldstring length add 0 put
}for
tabs ix newstring put
}{
pop
}ifelse
}{
dup 4 mod 0 ne{
dup maxstring idiv maxstring mul sub
4 idiv 1 add 4 mul string/newstring exch def
tabs ix get
dup length 1 sub dup/iy exch def get/oldstring exch def
newstring 0 oldstring putinterval
0 1 newstring length oldstring length sub 1 sub{
newstring exch oldstring length add 0 put
}for
tabs ix get iy newstring put
}{
pop
}ifelse
}ifelse
}for
0 1 tabarray length 1 sub{
dup tabarray exch get
dup 12 getu32 maxstring gt{
0 4 getinterval dup(glyf)eq{
pop
GetLocaType
GetNumGlyphs
GetSortedLoca
dup tabs exch get
SplitGlyf
tabs 3 1 roll put
}{
(Warning, table )print print( > 64Kb\n)print
pop
}ifelse
}{
pop
pop
}ifelse
}for
end
}bind def
/Makesfnts
{
.opdloadttfontdict begin
0
tabs{
dup type/stringtype eq{
pop
1 add
}{
{
type/stringtype eq{
1 add
}if
}forall
}ifelse
}forall
1 add
/TTOffset
TableDir length
tabarray length 16 mul add
def
0
tabarray{
exch dup 1 add
3 1 roll
dup
tabs exch get
dup type/stringtype eq{
length
2 index exch
TTOffset
dup 3 1 roll add
/TTOffset exch def
8 exch putu32
exch tabarray 3 1 roll
put
}{
0 exch
{
dup type/stringtype eq{
length add
}{
pop
}ifelse
}forall
2 index exch
TTOffset
dup 3 1 roll add
/TTOffset exch def
8 exch putu32
exch tabarray 3 1 roll
put
}ifelse
}forall
pop
array
dup 0
TableDir length
tables length add
string
dup 0 TableDir putinterval
dup 12 tables putinterval
put
dup
/ix 1 def
tabs{
dup type/stringtype eq{
ix exch
put dup
/ix ix 1 add def
}{
{
dup type/stringtype eq{
ix exch put dup
/ix ix 1 add def
}{
pop
}ifelse
}forall
}ifelse
}forall
pop
end
}bind def
/MakeType42
{
//PDFR_DEBUG{
(MakeType42 beg)=
}if
10 dict begin
/FontName 1 index/FontName get def
/FontType 42 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox 1 index/FontBBox get def
dup/FontResource get
dup/Encoding known{
//PDFReader/ObtainEncoding get exec
/Encoding get
}{
pop null
}ifelse
/PDFEncoding exch def
/CharStrings 2 index//PDFReader/MakeTTCharStrings get exec def
/sfnts 2 index//MakeStreamReader exec
ReadTTF
ProcessTTData
Makesfnts
def
/Encoding StandardEncoding def
/PaintType 0 def
currentdict end
//PDFR_DEBUG{
(MakeType42 end)=
}if
}bind def
/GetInstalledFont
{
dup//InstalledFonts exch knownget{
exch pop
}{
dup findfont dup 3 1 roll
//InstalledFonts 3 1 roll put
}ifelse
}bind def
/RemoveFontNamePrefix
{//=string cvs true
0 1 5{
2 index exch get//IsUpper exec not{
pop false exit
}if
}for
{(+)search{
pop pop
}if
}if
cvn
}bind def
/CheckFont
{dup/Type get/Font ne{
mark(Resource )3 index( must have /Type/Font .)//error exec
}if
}bind def
/CheckEncoding
{dup type/nametype ne{
dup/Type get/Encoding ne{
mark(Resource )3 index( must have /Type/Encoding .)//error exec
}if
}if
}bind def
/ObtainEncoding
{dup/Encoding known{
dup dup/Encoding//CheckEncoding//ResolveD exec
dup type dup/arraytype eq exch/packedarraytype eq or{
pop pop
}{
dup type/nametype eq{
/Encoding findresource
}{
dup/BaseEncoding//knownget exec not{
/StandardEncoding
}if
/Encoding findresource
exch
/Differences//knownget exec{
exch dup length array copy exch
0 exch
{
dup type/integertype eq{
exch pop
}{
3 copy put pop
1 add
}ifelse
}forall
pop
}if
}ifelse
/Encoding exch put
}ifelse
}{
dup/Encoding/StandardEncoding/Encoding findresource put
}ifelse
}bind def
/ObtainMetrics
{dup/Widths//knownget exec{
1 index/Encoding get
256 dict
3 index/Subtype get/TrueType eq{
1000
}{
1
}ifelse
4 index/MissingWidth//knownget exec not{
0
}if
5 index/FirstChar//knownget exec not{
0
}if
6 5 roll
dup 0 exch 1 exch length 1 sub{
2 copy get
exch 3 index add
7 index exch get
dup dup null ne exch/.notdef ne and{
6 index 3 1 roll exch
6 index div
3 copy pop//knownget exec{
0 eq
}{
true
}ifelse
{put
}{
pop pop pop
}ifelse
}{
pop pop
}ifelse
}for
pop pop pop pop exch pop
1 index exch/Metrics exch put
}{
dup/MissingWidth//knownget exec{
256 dict
2 index/Encoding get{
dup null ne{
3 copy 3 2 roll put
}if
pop
}forall
exch pop
1 index exch/Metrics exch put
}if
}ifelse
}bind def
/NotDef
{
FontMatrix aload pop pop pop exch pop exch pop
1 exch div exch
1 exch div exch
1 index 0 setcharwidth
0 setlinewidth
0 0 moveto
2 copy rlineto
1 index 0 rlineto
neg exch neg exch rlineto
closepath stroke
}bind def
/SaveResourcesToStack
{
[
//PDFReader/OldResources known{
//PDFReader/OldResources get
}{
null
}ifelse
//PDFReader/CurrentObject get/Context get/Resources get
]
//PDFReader/OldResources 3 -1 roll put
}bind def
/RestoreResourcesFromStack
{
//PDFReader/OldResources get dup
0 get//PDFReader/OldResources 3 -1 roll put
1 get//PDFReader/CurrentObject get/Context get/Resources 3 -1 roll put
}bind def
/BuildChar
{//PDFR_DEBUG{
(BuildChar )print dup//=only exec( )print
}if
exch begin
Encoding exch get
//PDFR_DEBUG{
dup =
}if
dup null eq{
pop//NotDef exec
}
{
CharProcs exch//knownget exec
{
currentfont/Font get/Resources//knownget exec{
exec
SaveResourcesToStack
//PDFReader/CurrentObject get/Context get
/Resources 3 -1 roll put
//RunDelayedStream exec
RestoreResourcesFromStack
}{
//RunDelayedStream exec
}ifelse
}
{
//NotDef exec
}ifelse
}ifelse
end
}bind def
/printdict
{(<<)=
{exch = ==}forall
(>>)=
}bind def
/printfont
{
dup{
exch dup =
dup/Encoding eq{
pop =
}{
dup/FontInfo eq exch/Private eq or{
//printdict exec
}{
==
}ifelse
}ifelse
}forall
}bind def
/ScaleMetrics
{1 index{
2 index div
3 index
3 1 roll put
}forall
pop
}bind def
/ResolveAndSetFontAux
{exch dup
//PDFReader/CurrentObject get/Context get/Resources get
/Font//DoNothing//ResolveD exec
exch//CheckFont//ResolveD exec
dup/Font//knownget exec{
exch pop exch pop
}{
{
dup/Subtype get dup dup/Type1 eq exch/TrueType eq or exch/MMType1 eq or{
exch pop
dup/BaseFont get
//RemoveFontNamePrefix exec
//PDFR_DEBUG{
(Font )print dup =
}if
1 index/FontDescriptor known{
//PDFR_DEBUG{
(Font from a font descriptor.)=
}if
1 index
/FontDescriptor//DoNothing//ResolveD exec
/Font//knownget exec{
exch pop
}{
//PDFR_DEBUG{
(Font descriptor has no Font resolved.)=
}if
//GetInstalledFont exec
}ifelse
}{
//GetInstalledFont exec
}ifelse
exch
dup/Encoding known not{
1 index/Encoding get 1 index exch/Encoding exch put
}if
//ObtainEncoding exec
//ObtainMetrics exec
exch
dup length dict copy
dup 2 index/Encoding get
/Encoding exch put
1 index/Metrics//knownget exec{
2 index/Subtype get/TrueType ne{
1 index/FontMatrix get 0 get
dup 0 eq{
pop
1 index/FontMatrix get 1 get
dup 0 eq{pop 1}if
}if
0.001 div
//ScaleMetrics exec
}{
1 index/sfnts known not{
1 index/FontMatrix get 0 get
dup 0 eq{
pop
1 index/FontMatrix get 1 get
dup 0 eq{pop 1}if
}if
//ScaleMetrics exec
}if
}ifelse
1 index exch/Metrics exch put
}if
1 index/BaseFont get
exch
dup/FID undef
dup/UniqueID undef
definefont
dup 3 1 roll
/Font exch put
exit
}if
dup/Subtype get/Type3 eq{
//ObtainEncoding exec
2 copy exch/FontName exch put
dup/CharProcs get//ResolveDict exec
dup/FontType 3 put
dup/BuildChar//BuildChar put
dup dup/Font exch put
dup 3 1 roll
definefont
2 copy ne{
2 copy/Font exch put
}if
exch pop
exit
}if
dup/Subtype get/Type0 eq{
}if
dup/Subtype get/CIDFontType0 eq{
}if
dup/Subtype get/CIDFontType2 eq{
}if
mark(Unknown font type )2 index/Subtype get//error exec
}loop
}ifelse
exch scalefont setfont
}bind def
/ResolveAndSetFont
{
//ResolveAndSetFontAux exec
}bind def
/.knownget
{2 copy known{
get true
}{
pop pop false
}ifelse
}bind def
/.min
{2 copy lt{
exch
}if
pop
}bind def
/.max
{2 copy gt{
exch
}if
pop
}bind def
/.dicttomark
{>>
}bind def
/getu16{
2 copy get 8 bitshift 3 1 roll 1 add get add
}bind def
/gets16{
getu16 16#8000 xor 16#8000 sub
}bind def
/getu32{
2 copy getu16 16 bitshift 3 1 roll 2 add getu16 add
}bind def
/gets32{
2 copy gets16 16 bitshift 3 1 roll 2 add getu16 add
}bind def
/cmapformats mark
0{
6 256 getinterval{}forall 256 packedarray
}bind
2{
/sHK_sz 2 def
/sH_sz 8 def
dup 2 getu16/cmapf2_tblen exch def
dup 4 getu16/cmapf2_lang exch def
dup 6 256 sHK_sz mul getinterval/sHKs exch def
0
0 1 255{
sHKs exch
2 mul getu16
1 index
1 index
lt{exch}if pop
}for
/sH_len exch def
dup 6 256 sHK_sz mul add
cmapf2_tblen 1 index sub getinterval
/sH_gIA exch def
/cmapf2_glyph_array 65535 array def
/.cmapf2_putGID{
/cmapf2_ch cmapf2_ch_hi 8 bitshift cmapf2_ch_lo add def
firstCode cmapf2_ch_lo le
cmapf2_ch_lo firstCode entryCount add lt
and{
sH_offset idRangeOffset add
cmapf2_ch_lo firstCode sub 2 mul
add 6 add
sH_gIA exch getu16
dup 0 gt{
idDelta add
cmapf2_glyph_array exch cmapf2_ch exch put
}{
pop
}ifelse
}{
}ifelse
}def
16#00 1 16#ff{
/cmapf2_ch_hi exch def
sHKs cmapf2_ch_hi sHK_sz mul getu16
/sH_offset exch def
sH_gIA sH_offset sH_sz getinterval
dup 0 getu16/firstCode exch def
dup 2 getu16/entryCount exch def
dup 4 gets16/idDelta exch def
dup 6 getu16/idRangeOffset exch def
pop
sH_offset 0 eq{
/cmapf2_ch_lo cmapf2_ch_hi def
/cmapf2_ch_hi 0 def
.cmapf2_putGID
}{
16#00 1 16#ff{
/cmapf2_ch_lo exch def
.cmapf2_putGID
}for
}ifelse
}for
pop
0 1 cmapf2_glyph_array length 1 sub{
dup cmapf2_glyph_array exch get
null eq{cmapf2_glyph_array exch 0 put}{pop}ifelse
}for
cmapf2_glyph_array
}bind
4{
/etab exch def
/nseg2 etab 6 getu16 def
14/endc etab 2 index nseg2 getinterval def
2 add
nseg2 add/startc etab 2 index nseg2 getinterval def
nseg2 add/iddelta etab 2 index nseg2 getinterval def
nseg2 add/idroff etab 2 index nseg2 getinterval def
pop
/firstcode startc 0 getu16 16#ff00 and dup 16#f000 ne{pop 0}if def
/lastcode firstcode def
/striptopbyte false def
/putglyph{
glyphs code 3 -1 roll put/code code 1 add def
}bind def
/numcodes 0 def/glyphs 0 0 2 nseg2 3 sub{
/i2 exch def
/scode startc i2 getu16 def
/ecode endc i2 getu16 def
ecode lastcode gt{
/lastcode ecode def
}if
}for pop
firstcode 16#f000 ge lastcode firstcode sub 255 le and{
lastcode 255 and
/striptopbyte true def
}{
lastcode
}ifelse
1 add
array def
glyphs length 1024 ge{
.array1024z 0 1024 glyphs length 1023 sub{glyphs exch 2 index putinterval}for
glyphs dup length 1024 sub 3 -1 roll
putinterval
}{
0 1 glyphs length 1 sub{glyphs exch 0 put}for
}ifelse
/numcodes 0 def/code 0 def
0 2 nseg2 3 sub{
/i2 exch def
/scode startc i2 getu16 def
/ecode endc i2 getu16 def
numcodes scode firstcode sub
exch sub 0 .max dup/code exch code exch add def
ecode scode sub 1 add add numcodes add/numcodes exch def
/delta iddelta i2 gets16 def
TTFDEBUG{
(scode=)print scode =only
( ecode=)print ecode =only
( delta=)print delta =only
( droff=)print idroff i2 getu16 =
}if
idroff i2 getu16 dup 0 eq{
pop scode delta add 65535 and 1 ecode delta add 65535 and
striptopbyte{
/code scode 255 and def
}{
/code scode def
}ifelse
{putglyph}for
}{
/gloff exch 14 nseg2 3 mul add 2 add i2 add add def
striptopbyte{
/code scode 255 and def
}{
/code scode def
}ifelse
0 1 ecode scode sub{
2 mul gloff add etab exch getu16
dup 0 ne{delta add 65535 and}if putglyph
}for
}ifelse
}for glyphs/glyphs null def
}bind
6{
dup 6 getu16/firstcode exch def dup 8 getu16/ng exch def
firstcode ng add array
0 1 firstcode 1 sub{2 copy 0 put pop}for
dup firstcode ng getinterval
0 1 ng 1 sub{
dup 2 mul 10 add 4 index exch getu16 3 copy put pop pop
}for pop exch pop
}bind
.dicttomark readonly def
/cmaparray{
dup 0 getu16 cmapformats exch .knownget{
TTFDEBUG{
(cmap: format )print 1 index 0 getu16 = flush
}if exec
}{
(Can't handle format )print 0 getu16 = flush
0 1 255{}for 256 packedarray
}ifelse
TTFDEBUG{
(cmap: length=)print dup length = dup ==
}if
}bind def
/postremap mark
/Cdot/Cdotaccent
/Edot/Edotaccent
/Eoverdot/Edotaccent
/Gdot/Gdotaccent
/Ldot/Ldotaccent
/Zdot/Zdotaccent
/cdot/cdotaccent
/edot/edotaccent
/eoverdot/edotaccent
/gdot/gdotaccent
/ldot/ldotaccent
/zdot/zdotaccent
.dicttomark readonly def
/get_from_stringarray
{1 index type/stringtype eq{
get
}{
exch{
2 copy length ge{
length sub
}{
exch get exit
}ifelse
}forall
}ifelse
}bind def
/getinterval_from_stringarray
{
2 index type/stringtype eq{
getinterval
}{
string exch 0
4 3 roll{
dup length
dup 4 index lt{
3 index exch sub
exch pop 3 1 roll exch pop
}{
dup 3 1 roll
4 index sub
5 index length 4 index sub
2 copy gt{exch}if pop
dup 3 1 roll
5 index exch getinterval
5 index 4 index 3 index
getinterval
copy pop
exch pop add exch pop 0 exch
dup 3 index length ge{exit}if
}ifelse
}forall
pop pop
}ifelse
}bind def
/string_array_size
{dup type/stringtype eq{
length
}{
0 exch{length add}forall
}ifelse
}bind def
/postformats mark
16#00010000{
pop MacGlyphEncoding
}
16#00020000{
dup dup type/arraytype eq{0 get}if length 36 lt{
TTFDEBUG{(post format 2.0 invalid.)= flush}if
pop[]
}{
/postglyphs exch def
/post_first postglyphs dup type/arraytype eq{0 get}if def
post_first 32 getu16/numglyphs exch def
/glyphnames numglyphs 2 mul 34 add def
/postpos glyphnames def
/total_length postglyphs//string_array_size exec def
numglyphs array 0 1 numglyphs 1 sub{
postpos total_length ge{
1 numglyphs 1 sub{1 index exch/.notdef put}for
exit
}if
postglyphs postpos//get_from_stringarray exec
postglyphs postpos 1 add 2 index//getinterval_from_stringarray exec cvn
exch postpos add 1 add/postpos exch def
2 index 3 1 roll
put
}for
/postnames exch def
numglyphs array 0 1 numglyphs 1 sub{
dup 2 mul 34 add postglyphs exch 2//getinterval_from_stringarray exec
dup 0 get 8 bitshift exch 1 get add dup 258 lt{
MacGlyphEncoding exch get
}{
dup 32768 ge{
pop/.notdef
}{
258 sub dup postnames length ge{
TTFDEBUG{(   *** warning: glyph index past end of 'post' table)= flush}if
pop
exit
}if
postnames exch get
postremap 1 index .knownget{exch pop}if
}ifelse
}ifelse
2 index 3 1 roll put
}for
}
ifelse
}bind
16#00030000{
pop[]
}bind
.dicttomark readonly def
/first_post_string
{
post dup type/arraytype eq{0 get}if
}bind def
/.getpost{
/glyphencoding post null eq{
TTFDEBUG{(post missing)= flush}if[]
}{
postformats first_post_string 0 getu32 .knownget{
TTFDEBUG{
(post: format )print
first_post_string
dup 0 getu16 =only(,)print 2 getu16 = flush
}if
post exch exec
}{
TTFDEBUG{(post: unknown format )print post 0 getu32 = flush}if[]
}ifelse
}ifelse def
}bind def
/MacRomanEncoding[
StandardEncoding 0 39 getinterval aload pop
/quotesingle
StandardEncoding 40 56 getinterval aload pop
/grave
StandardEncoding 97 31 getinterval aload pop
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave
/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde
/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef
/florin/.notdef/.notdef/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright
/quoteleft/quoteright/divide/.notdef
/ydieresis/Ydieresis/fraction/currency
/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase
/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex
/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
]/Encoding defineresource pop
/TTParser<<
/Pos 0
/post null
>>def
/readu8
{read not{
mark(Insufficient data in the stream.)//error exec
}if
}bind def
/readu16
{dup//readu8 exec 8 bitshift exch//readu8 exec or
}bind def
/reads16
{//readu16 exec 16#8000 xor 16#8000 sub
}bind def
/readu32
{dup//readu16 exec 16 bitshift exch//readu16 exec or
}bind def
/reads32
{dup//reads16 exec 16 bitshift exch//readu16 exec or
}bind def
/SkipToPosition
{dup//TTParser/Pos get
exch//TTParser exch/Pos exch put
sub
//PDFR_DEBUG{
(Skipping )print dup//=only exec( bytes.)=
}if
dup 0 eq{
pop pop
}{
dup 3 1 roll
()/SubFileDecode filter
exch
{1 index//BlockBuffer readstring pop length
dup 0 eq{pop exch pop exit}if
sub
}loop
0 ne{
mark(Insufficient data in the stream for SkipToPosition.)//error exec
}if
}ifelse
}bind def
/TagBuffer 4 string def
/ParseTTTableDirectory
{//PDFR_DEBUG{
(ParseTTTableDirectory beg)=
}if
15 dict begin
dup//readu32 exec 16#00010000 ne{
mark(Unknown True Type version.)//error exec
}if
dup//readu16 exec/NumTables exch def
dup//readu16 exec/SearchRange exch def
dup//readu16 exec/EntrySelector exch def
dup//readu16 exec/RangeShift exch def
//PDFR_DEBUG{
(NumTables = )print NumTables =
}if
NumTables{
dup//TagBuffer readstring not{
mark(Could not read TT tag.)//error exec
}if
cvn
[2 index//readu32 exec pop
2 index//readu32 exec
3 index//readu32 exec
]
//PDFR_DEBUG{
2 copy exch//=only exec( )print ==
}if
def
}repeat
pop
//TTParser/Pos 12 NumTables 16 mul add put
currentdict end
//PDFR_DEBUG{
(ParseTTTableDirectory end)=
}if
}bind def
/ParseTTcmap
{//PDFR_DEBUG{
(ParseTTcmap beg)=
}if
/cmap get aload pop
3 1 roll
7 dict begin
//PDFR_DEBUG{
(Current position = )print//TTParser/Pos get =
(cmap position = )print dup =
}if
1 index exch//SkipToPosition exec
//TTParser/Pos get/TablePos exch def
dup//readu16 exec pop
dup//readu16 exec/NumEncodings exch def
//PDFR_DEBUG{
(NumEncodings = )print NumEncodings =
}if
null
NumEncodings{
1 index//readu32 exec
2 index//readu32 exec
3 array dup 3 2 roll 0 exch put
2 index null ne{
dup 0 get 3 index 0 get sub
3 index exch 1 exch put
}if
dup 4 3 roll pop 3 1 roll
def
}repeat
dup 0 get
4 3 roll exch sub
1 exch put
//PDFR_DEBUG{
currentdict{
exch dup type/integertype eq{
//PrintHex exec( )print ==
}{
pop pop
}ifelse
}forall
}if
4 NumEncodings 8 mul add/HeaderLength exch def
//TTParser/Pos//TTParser/Pos get HeaderLength add put
0
NumEncodings{
16#7FFFFFF null
currentdict{
1 index type/integertype eq{
exch pop dup 0 get
dup 5 index gt{
dup 4 index lt{
4 1 roll
exch pop exch pop
}{
pop pop
}ifelse
}{
pop pop
}ifelse
}{
pop pop
}ifelse
}forall
//PDFR_DEBUG{
(Obtaining subtable for )print dup ==
}if
3 2 roll pop
3 copy pop
TablePos add//SkipToPosition exec
3 copy exch pop 1 get
//TTParser/Pos//TTParser/Pos get 3 index add put
string
readstring not{
mark(Can't read a cmap subtable.)//error exec
}if
2 exch put
}repeat
pop pop
currentdict end
//PDFR_DEBUG{
(ParseTTcmap end)=
}if
}bind def
/GetTTEncoding
{//PDFR_DEBUG{
(GetTTEncoding beg)=
}if
get
exch pop
2 get
10 dict begin
/TTFDEBUG//PDFR_DEBUG def
//cmaparray exec
end
//PDFR_DEBUG{
(GetTTEncoding end)=
dup ==
}if
}bind def
/InverseEncoding
{
256 dict begin
dup length 1 sub -1 0{
2 copy get
exch
1 index currentdict exch//knownget exec{
dup type/arraytype eq{
aload length 1 add array astore
}{
2 array astore
}ifelse
}if
def
}for
pop
currentdict end
}bind def
/GetMacRomanEncodingInverse
{//PDFReader/MacRomanEncodingInverse get
dup null eq{
pop
MacRomanEncoding//InverseEncoding exec
dup//PDFReader exch/MacRomanEncodingInverse exch put
}if
}bind def
/PutCharStringSingle
{
dup 3 index length lt{
2 index exch get
dup 0 ne{
def
}{
pop pop
}ifelse
}{
pop pop
}ifelse
}bind def
/PutCharString
{1 index type/nametype ne{
mark(Bad charstring name)//error exec
}if
dup type/arraytype eq{
{
3 copy//PutCharStringSingle exec
pop pop
}forall
pop
}{
//PutCharStringSingle exec
}ifelse
}bind def
/ComposeCharStrings
{
//PDFR_DEBUG{
(ComposeCharStrings beg)=
}if
1 index length 1 add dict begin
/.notdef 0 def
exch
//TTParser/post get
dup null ne{
exch
1 index length 1 sub -1 0{
dup 3 index exch get exch
dup 0 eq 2 index/.notdef eq or{
pop pop
}{
def
}ifelse
}for
}if
exch pop exch
{
//PutCharString exec
}forall
pop
currentdict end
//PDFR_DEBUG{
(ComposeCharStrings end)=
}if
}bind def
/ParseTTpost
{
//PDFR_DEBUG{
(ParseTTpost beg)=
}if
/post get aload pop
3 1 roll
//PDFR_DEBUG{
(Current position = )print//TTParser/Pos get =
(post position = )print dup =
}if
1 index exch//SkipToPosition exec
//TTParser/Pos//TTParser/Pos get 4 index add put
exch dup 65535 le{
string
readstring not{
mark(Insufficient data in the stream for ParseTTpost.)//error exec
}if
}{
[3 1 roll
dup 16384 div floor cvi
exch 1 index 16384 mul
sub exch
1 sub 0 1 3 -1 roll
{
1 add index
16384 string readstring not{
mark(Insufficient data in the stream for ParseTTpost.)//error exec
}if
}for
counttomark -2 roll
string readstring not{
mark(Insufficient data in the stream for ParseTTpost.)//error exec
}if
]
}ifelse
1 dict begin
/post exch def
//.getpost exec
//TTParser/post glyphencoding put
//PDFR_DEBUG{
(ParseTTpost end)=
glyphencoding ==
}if
end
}bind def
/MakeTTCharStrings
{//MakeStreamReader exec
dup dup//ParseTTTableDirectory exec
//TTParser/post null put
dup/post//knownget exec{
0 get
1 index/cmap get 0 get
lt{
2 copy//ParseTTpost exec
//ParseTTcmap exec
}{
2 copy//ParseTTcmap exec
3 1 roll
//ParseTTpost exec
}ifelse
}{
//ParseTTcmap exec
}ifelse
{
dup 16#00030001 known{
//PDFR_DEBUG{
(Using the TT cmap encoding for Windows Unicode.)=
}if
16#00030001//GetTTEncoding exec
AdobeGlyphList//ComposeCharStrings exec
exit
}if
dup 16#00010000 known{
//PDFR_DEBUG{
(Using the TT cmap encoding for Macintosh Roman.)=
}if
16#00010000//GetTTEncoding exec
PDFEncoding dup null eq{
pop//GetMacRomanEncodingInverse exec
}{
//InverseEncoding exec
}ifelse
//ComposeCharStrings exec
exit
}if
dup 16#00030000 known{
//PDFR_DEBUG{
(Using the TT cmap encoding 3.0 - not sure why Ghostscript writes it since old versions.)=
}if
16#00030000//GetTTEncoding exec
PDFEncoding dup null eq{
pop//GetMacRomanEncodingInverse exec
}{
//InverseEncoding exec
}ifelse
//ComposeCharStrings exec
exit
}if
mark(True Type cmap has no useful encodings.)//error exec
}loop
//PDFR_DEBUG{
(CharStrings <<)=
dup{
exch
dup type/nametype eq{
//=only exec
}{
==
}ifelse
( )print ==
}forall
(>>)=
}if
}bind def
/ScaleVal
{
aload pop
1 index sub
3 2 roll mul add
}bind def
/ScaleArg
{
aload pop
1 index sub
3 1 roll
sub exch div
}bind def
/ScaleArgN
{
dup length 2 sub -2 0{
2
2 index 3 1 roll getinterval
3 2 roll
exch//ScaleArg exec
1 index length 2 idiv 1 add 1 roll
}for
pop
}bind def
/ComputeFunction_10
{
//PDFR_DEBUG{
(ComputeFunction_10 beg )print 1 index//=only exec( stack=)print count =
}if
exch
dup 1 eq{
pop dup length 1 sub get
}{
1 index length 1 sub mul
dup dup floor sub
dup 0 eq{
pop cvi get
}{
3 1 roll floor cvi
2 getinterval
aload pop
2 index mul 3 2 roll 1 exch sub 3 2 roll mul add
}ifelse
}ifelse
//PDFR_DEBUG{
(ComputeFunction_10 end )print dup//=only exec( stack=)print count =
}if
}bind def
/ComputeFunction_n0
{
//PDFR_DEBUG{
(ComputeFunction_n0 beg N=)print dup//=only exec( stack=)print count =
}if
dup 0 eq{
pop
}{
dup 2 add -1 roll
dup 3 index length 1 sub ge{
pop 1 sub
exch dup length 1 sub get exch
//PDFReader/ComputeFunction_n0 get exec
}{
dup floor cvi dup
4 index exch get
3 index dup
5 add copy
6 2 roll
pop pop pop pop
1 sub
//PDFReader/ComputeFunction_n0 get exec
3 2 roll pop
exch
4 3 roll exch
4 add 2 roll 1 add
3 2 roll exch get
exch 1 sub
//PDFReader/ComputeFunction_n0 get exec
1 index mul
3 1 roll
1 exch sub mul add
}ifelse
}ifelse
//PDFR_DEBUG{
(ComputeFunction_n0 end )print dup//=only exec( stack=)print count =
}if
}bind def
/FunctionToProc_x01
{
dup/Domain get exch
dup/Data get 0 get exch
/Size get length
[4 1 roll
//PDFR_DEBUG{
{(function beg, stack =)print count//=only exec(\n)print}/exec load
5 2 roll
}if
dup 1 gt{
{mark exch
3 add 2 roll
//ScaleArgN exec
counttomark dup
3 add -2 roll
pop exch
//ComputeFunction_n0 exec
}/exec load
}{
pop
3 1/roll load//ScaleArg/exec load
/exch load
//ComputeFunction_10/exec load
}ifelse
//PDFR_DEBUG{
(function end, stack =)/print load/count load//=only/exec load(\n)/print load
}if
]cvx
//PDFR_DEBUG{
(Made a procedure for the 1-result function :)=
dup ==
}if
}bind def
/FunctionProcDebugBeg
{(FunctionProcDebugBeg )print count =
}bind def
/FunctionProcDebugEnd
{(FunctionProcDebugEnd )print count =
}bind def
/FunctionToProc_x0n
{
PDFR_DEBUG{
(FunctionToProc_x0n beg m=)print dup =
}if
1 index/Size get length exch
dup 7 mul 2 add array
PDFR_DEBUG{
dup 0//FunctionProcDebugBeg put
}{
dup 0//DoNothing put
}ifelse
dup 1/exec load put
dup 2 5 index/Domain get put
2 index 1 eq{
dup 3//ScaleArg put
}{
dup 3//ScaleArgN put
}ifelse
dup 4/exec load put
1 index 1 sub 0 exch 1 exch{
dup 7 mul 5 add
1 index 4 index 1 sub ne{
dup 3 index exch 6 index put 1 add
dup 3 index exch/copy load put 1 add
}if
[
6 index/Data get 3 index get
6 index 1 eq{
//ComputeFunction_10/exec load
}{
6 index
//ComputeFunction_n0/exec load
}ifelse
]cvx
3 index exch 2 index exch put 1 add
2 index 1 index/exec load put 1 add
1 index 4 index 1 sub ne{
2 index 1 index 6 index 1 add put 1 add
2 index 1 index 1 put 1 add
2 index 1 index/roll load put
}if
pop pop
}for
PDFR_DEBUG{
dup dup length 2 sub//FunctionProcDebugEnd put
}{
dup dup length 2 sub//DoNothing put
}ifelse
dup dup length 1 sub/exec load put
cvx exch pop exch pop exch pop
//PDFR_DEBUG{
(Made a procedure for the n-argument function :)=
dup ==
}if
PDFR_DEBUG{
(FunctionToProc_x0n end)=
}if
}bind def
/MakeTableRec
{
0
exec
}bind def
/MakeTable
{//PDFR_DEBUG{
(MakeTable beg )print count =
}if
1 index/Size get exch
1 sub dup
3 1 roll
get
array
1 index 0 eq{
exch pop exch pop
}{
dup length 1 sub -1 0{
3 index 3 index//MakeTableRec exec
2 index 3 1 roll put
}for
exch pop exch pop
}ifelse
//PDFR_DEBUG{
(MakeTable end )print count =
}if
}bind def
//MakeTableRec 0//MakeTable put
/StoreSample
{
1 sub
dup 0 eq{
pop
}{
-1 1{
I exch get get
}for
}ifelse
I 0 get 3 2 roll put
}bind def
/ReadSample32
{
4{
File read not{
mark(Insufficient data for function.)//error exec
}if
}repeat
pop
3 1 roll exch
256 mul add 256 mul add
//1_24_bitshift_1_sub div
}bind def
/ReadSample
{
Buffer BitsLeft BitsPerSample
{2 copy ge{
exit
}if
3 1 roll
8 add 3 1 roll
256 mul File read not{
mark(Insufficient data for function.)//error exec
}if
add
3 1 roll
}loop
sub dup
2 index exch
neg bitshift
2 copy exch bitshift
4 3 roll exch sub
/Buffer exch def
exch/BitsLeft exch def
Div div
}bind def
/ReadSamplesRec
{0
exec
}bind def
/ReadSamples
{
//PDFR_DEBUG{
(ReadSamples beg )print count =
}if
dup 1 eq{
pop
0 1 Size 0 get 1 sub{
I exch 0 exch put
0 1 M 1 sub{
dup Range exch 2 mul 2 getinterval
//PDFR_DEBUG{
(Will read a sample ... )print
}if
BitsPerSample 32 eq{//ReadSample32}{//ReadSample}ifelse
exec exch//ScaleVal exec
//PDFR_DEBUG{
(value=)print dup =
}if
exch Table exch get
Size length//StoreSample exec
}for
}for
}{
1 sub
dup Size exch get 0 exch 1 exch 1 sub{
I exch 2 index exch put
dup//ReadSamplesRec exec
}for
pop
}ifelse
//PDFR_DEBUG{
(ReadSamples end )print count =
}if
}bind def
//ReadSamplesRec 0//ReadSamples put
/StreamToArray
{//PDFR_DEBUG{
(StreamToArray beg )print count =
}if
userdict/FuncDataReader get begin
dup/BitsPerSample get/BitsPerSample exch def
dup/Size get length/N exch def
dup/Range get length 2 idiv/M exch def
1 BitsPerSample bitshift 1 sub/Div exch def
/BitsLeft 0 def
/Buffer 0 def
dup/Size get/Size exch def
dup/Range get/Range exch def
/File 1 index//MakeStreamReader exec def
/I[N{0}repeat]def
M array
dup length 1 sub -1 0{
2 index N//MakeTable exec
2 index 3 1 roll put
}for
/Table exch def
N//ReadSamples exec
PDFR_DEBUG{
(Table = )print Table ==
}if
/Data Table put
end
//PDFR_DEBUG{
(StreamToArray end )print count =
}if
}bind def
/FunctionToProc10
{
PDFR_DEBUG{
(FunctionToProc10 beg, Range = )print dup/Range get ==
}if
dup/Order//knownget exec{
1 ne{
(Underimplemented function Type 0 Order 3.)=
}if
}if
dup//StreamToArray exec
dup/Range get length dup 2 eq{
pop//FunctionToProc_x01 exec
}{
2 idiv//FunctionToProc_x0n exec
}ifelse
PDFR_DEBUG{
(FunctionToProc10 end)=
}if
}bind def
/FunctionToProc12
{begin
currentdict/C0//knownget exec{length 1 eq}{true}ifelse{
N
currentdict/C0//knownget exec{
0 get
}{
0
}ifelse
currentdict/C1//knownget exec{
0 get
}{
1
}ifelse
1 index sub
[4 1 roll
{
4 2 roll
exp mul add
}aload pop
]cvx
}{
[
0 1 C0 length 1 sub{
N
C0 2 index get
C1 3 index get
4 3 roll pop
1 index sub
[/dup load
5 2 roll
{
4 2 roll
exp mul add
exch
}aload pop
]cvx
/exec load
}for
/pop load
]cvx
}ifelse
end
//PDFR_DEBUG{
(FunctionType2Proc : )print dup ==
}if
}bind def
/FunctionToProc14
{//MakeStreamReader exec cvx exec
//PDFR_DEBUG{
(FunctionType4Proc : )print dup ==
}if
}bind def
/FunctionToProc1
{
dup/FunctionType get
{dup 0 eq{
pop//FunctionToProc10 exec exit
}if
dup 2 eq{
pop//FunctionToProc12 exec exit
}if
dup 4 eq{
pop//FunctionToProc14 exec exit
}if
mark exch(Function type )exch( isn't implemented yet.)//error exec
}loop
}bind def
/FunctionToProc20
{
PDFR_DEBUG{
(FunctionToProc20, Range = )print dup/Range get ==
}if
dup/Order//knownget exec{
1 ne{
(Underimplemented function Type 0 Order 3.)=
}if
}if
dup//StreamToArray exec
dup/Range get length dup 2 eq{
pop//FunctionToProc_x01 exec
}{
2 idiv//FunctionToProc_x0n exec
}ifelse
}bind def
/FunctionToProc
{//PDFR_DEBUG{
(FunctionToProc beg )print count =
}if
dup type/dicttype eq{
dup/Domain get length 2 idiv
{
dup 1 eq{
pop//FunctionToProc1 exec exit
}if
dup 2 eq{
pop//FunctionToProc20 exec exit
}if
mark(Functions with many arguments aren't implemented yet.)//error exec
}loop
}{
//PDFR_DEBUG{(Not a function dict, assume already a procedure.)print}if
}ifelse
//PDFR_DEBUG{
(FunctionToProc end )print count =
}if
}bind def
/spotfunctions mark
/Round{
abs exch abs 2 copy add 1 le{
dup mul exch dup mul add 1 exch sub
}{
1 sub dup mul exch 1 sub dup mul add 1 sub
}ifelse
}
/Diamond{
abs exch abs 2 copy add .75 le{
dup mul exch dup mul add 1 exch sub
}{
2 copy add 1.23 le{
.85 mul add 1 exch sub
}{
1 sub dup mul exch 1 sub dup mul add 1 sub
}ifelse
}ifelse
}
/Ellipse{
abs exch abs 2 copy 3 mul exch 4 mul add 3 sub dup 0 lt{
pop dup mul exch .75 div dup mul add 4 div 1 exch sub
}{
dup 1 gt{
pop 1 exch sub dup mul exch 1 exch sub
.75 div dup mul add 4 div 1 sub
}{
.5 exch sub exch pop exch pop
}ifelse
}ifelse
}
/EllipseA{dup mul .9 mul exch dup mul add 1 exch sub}
/InvertedEllipseA{dup mul .9 mul exch dup mul add 1 sub}
/EllipseB{dup 5 mul 8 div mul exch dup mul exch add sqrt 1 exch sub}
/EllipseC{dup mul .9 mul exch dup mul add 1 exch sub}
/InvertedEllipseC{dup mul .9 mul exch dup mul add 1 sub}
/Line{exch pop abs neg}
/LineX{pop}
/LineY{exch pop}
/Square{abs exch abs 2 copy lt{exch}if pop neg}
/Cross{abs exch abs 2 copy gt{exch}if pop neg}
/Rhomboid{abs exch abs 0.9 mul add 2 div}
/DoubleDot{2{360 mul sin 2 div exch}repeat add}
/InvertedDoubleDot{2{360 mul sin 2 div exch}repeat add neg}
/SimpleDot{dup mul exch dup mul add 1 exch sub}
/InvertedSimpleDot{dup mul exch dup mul add 1 sub}
/CosineDot{180 mul cos exch 180 mul cos add 2 div}
/Double{exch 2 div exch 2{360 mul sin 2 div exch}repeat add}
/InvertedDouble{
exch 2 div exch 2{360 mul sin 2 div exch}repeat add neg
}
.dicttomark readonly def
/CheckColorSpace
{
dup type/arraytype ne{
mark(Resource )3 index( must be an array.)//error exec
}if
}bind def
/SubstitutePDFColorSpaceRec
{0
exec
}bind def
/SubstitutePDFColorSpace
{
{
dup 0 get/Pattern eq{
dup length 1 gt{
dup dup 1//CheckColorSpace//ResolveA exec
dup type/nametype ne{
//SubstitutePDFColorSpaceRec exec
}if
1 exch put
}if
exit
}if
dup 0 get/Indexed eq{
exit
}if
dup 0 get/Separation eq{
dup dup 2//CheckColorSpace//ResolveA exec
dup type/nametype ne{
//SubstitutePDFColorSpaceRec exec
}if
2 exch put
exit
}if
dup 0 get/CalGray eq{
1 get
dup/Gamma//knownget exec{
[exch[exch/exp load]cvx dup dup]
1 index exch/DecodeLMN exch put
}if
[exch/CIEBasedA exch]
exit
}if
dup 0 get/CalRGB eq{
1 get
dup/Matrix//knownget exec{
1 index exch/MatrixLMN exch put
}if
dup/Gamma//knownget exec{
aload pop
[exch/exp load]cvx
3 1 roll
[exch/exp load]cvx
3 1 roll
[exch/exp load]cvx
3 1 roll
3 array astore
1 index exch/DecodeLMN exch put
}if
[exch/CIEBasedABC exch]
exit
}if
dup 0 get/Lab eq{
1 get
begin
currentdict/Range//knownget exec{aload pop}{-100 100 -100 100}ifelse
0 100 6 2 roll 6 array astore
/RangeABC exch def
/DecodeABC[{16 add 116 div}bind{500 div}bind{200 div}bind]def
/MatrixABC[1 1 1 1 0 0 0 0 -1]def
{dup 6 29 div ge{dup dup mul mul}{4 29 div sub 108 841 div mul}ifelse}
/DecodeLMN[
[3 index aload pop WhitePoint 0 get/mul load]cvx
[4 index aload pop WhitePoint 1 get/mul load]cvx
[5 index aload pop WhitePoint 2 get/mul load]cvx
]def pop
//PDFR_DEBUG{
(Constructed from Lab <<)=
currentdict{exch = ==}forall
(>>)=
}if
[/CIEBasedABC currentdict]
end
exit
pop
}if
dup 0 get/CIEBasedA eq{exit}if
dup 0 get/CIEBasedABC eq{exit}if
mark exch(Unimplemented color space )exch//error exec
}loop
}bind def
//SubstitutePDFColorSpaceRec 0//SubstitutePDFColorSpace put
/ResolveArrayElement
{2 copy get
dup type dup/arraytype eq exch
/packedarraytype eq or{
dup length 1 ge exch xcheck and{
2 copy get
dup 0 get type/integertype eq
1 index 1 get type dup/arraytype
eq exch
/packedarraytype eq or
and{
exec
2 index 4 1 roll put
}{
pop pop
}ifelse
}{
pop
}ifelse
}{
pop pop
}ifelse
}bind def
/ResolveColorSpaceArrayRec
{0
exec
}bind def
/SetColorSpaceSafe
{
PDFR_DEBUG{
(SetColorSpaceSafe beg)=
}if
currentcolorspace dup type/arraytype eq{
1 index type/arraytype eq{
dup length 2 index length eq{
false exch
dup length 0 exch 1 exch 1 sub{
dup
4 index exch get exch
2 index exch get
ne{
exch pop true exch exit
}if
}for
pop
{
setcolorspace
}{
pop
}ifelse
}{
pop setcolorspace
}ifelse
}{
pop setcolorspace
}ifelse
}{
pop setcolorspace
}ifelse
PDFR_DEBUG{
(SetColorSpaceSafe end)=
}if
}bind def
/ResolveColorSpaceArray
{
//PDFR_DEBUG{
(ResolveColorSpaceArray beg )print dup ==
}if
dup 0 get/Indexed eq{
1//ResolveArrayElement exec
dup dup 1 get
dup type/arraytype eq{
//SubstitutePDFColorSpace exec
//ResolveColorSpaceArrayRec exec
1 exch put
}{
pop pop
}ifelse
}if
dup 0 get/Separation eq{
dup dup 1 get UnPDFEscape 1 exch put
3//ResolveArrayElement exec
dup 3 get//FunctionToProc exec
2 copy 3 exch put
pop
}if
dup 0 get/Pattern eq{
dup length 1 gt{
dup 1 get dup type/arraytype eq{
ResolveColorSpaceArray
1 index 1 3 -1 roll put
}{
pop
}ifelse
}if
}if
PDFR_DEBUG{
(Construcrted color space :)=
dup ==
}if
//PDFR_DEBUG{
(ResolveColorSpaceArray end )print dup ==
}if
}bind def
//ResolveColorSpaceArrayRec 0//ResolveColorSpaceArray put
/ResolveColorSpace
{
//PDFR_DEBUG{
(ResolveColorSpace beg )print dup =
}if
dup//SimpleColorSpaceNames exch known not{
dup//PDFColorSpaces exch//knownget exec{
exch pop
//PDFR_DEBUG{
(ResolveColorSpace known )=
}if
}{
dup
//PDFReader/CurrentObject get/Context get/Resources get
/ColorSpace//DoNothing//ResolveD exec
exch//CheckColorSpace//ResolveD exec
dup type/arraytype eq{
//SubstitutePDFColorSpace exec
//ResolveColorSpaceArray exec
dup//PDFColorSpaces 4 2 roll put
}if
}ifelse
}if
//PDFR_DEBUG{
(ResolveColorSpace end )print dup ==
}if
}bind def
/CheckPattern
{
dup/PatternType//knownget exec{
dup 1 ne{
mark(Resource )4 index( is a shading, which can't be handled at level 2. )//error exec
}if
pop
}if
dup/Type knownget{
/Pattern ne{
mark(Resource )4 index( must have /Type/Pattern .)//error exec
}if
}if
}bind def
/PaintProc
{/Context get
//RunDelayedStream exec
}bind def
/ResolvePattern
{
dup
userdict/PDFR_Patterns get
exch//knownget exec{
exch pop
}{
dup
//PDFReader/CurrentObject get/Context get/Resources get
/Pattern//DoNothing//ResolveD exec
exch//CheckPattern//ResolveD exec
dup dup/Context exch put
dup/Resources//DoNothing//ResolveD exec pop
dup/PaintProc//PaintProc put
gsave userdict/PDFR_InitialGS get setgstate
currentglobal exch false setglobal
dup/Matrix get
makepattern
exch setglobal
grestore
dup userdict/PDFR_Patterns get
4 2 roll
put
}ifelse
}bind def
/SetColor
{//PDFR_DEBUG{
(SetColor beg)=
}if
currentcolorspace dup type/nametype eq{
pop setcolor
}{
0 get/Pattern eq{
//ResolvePattern exec setpattern
}{
setcolor
}ifelse
}ifelse
//PDFR_DEBUG{
(SetColor end)=
}if
}bind def
/ImageKeys 15 dict begin
/BPC/BitsPerComponent def
/CS/ColorSpace def
/D/Decode def
/DP/DecodeParms def
/F/Filter def
/H/Height def
/IM/ImageMask def
/I/Interpolate def
/W/Width def
currentdict end readonly def
/ImageValues 15 dict begin
/G/DeviceGray def
/RGB/DeviceRGB def
/CMYK/DeviceCMYK def
/I/Indexed def
/AHx/ASCIIHexDecode def
/A85/ASCII85Decode def
/LZW/LZWDecode def
/Fl/FlateDecode def
/RL/RunLengthDecode def
/CCF/CCITTFaxDecode def
/DCT/DCTDecode def
currentdict end readonly def
/GetColorSpaceRange
{2 index/ColorSpace get
dup type/arraytype eq{
1 get
}if
exch//knownget exec{
exch pop
}if
}bind def
/DecodeArrays 15 dict begin
/DeviceGray{[0 1]}def
/DeviceRGB{[0 1 0 1 0 1]}def
/DeviceCMYK{[0 1 0 1 0 1 0 1]}def
/Indexed{
dup/BitsPerComponent get 1 exch bitshift 1 sub[exch 0 exch]
}def
/Separation{[0 1]}def
/CIEBasedA{[0 1]/RangeA//GetColorSpaceRange exec}def
/CIEBasedABC{[0 1 0 1 0 1]/RangeABC//GetColorSpaceRange exec}def
currentdict end readonly def
/Substitute
{1 index//knownget exec{
exch pop
}if
}bind def
/DebugImagePrinting
{
//PDFR_DEBUG{
(Image :)=
dup{exch//=only exec( )print ==
}forall
}if
}bind def
/CompleteImage
{
dup/ColorSpace known{
dup/ColorSpace//CheckColorSpace//ResolveD exec pop
}if
dup/Decode known not{
dup/ColorSpace//knownget exec{
dup type/arraytype eq{
0 get
}if
//DecodeArrays exch get exec
}{
[0 1]
}ifelse
1 index exch/Decode exch put
}if
dup/ImageMatrix[2 index/Width get 0 0 5 index/Height get neg
0 7 index/Height get]put
//DebugImagePrinting exec
}bind def
/CompleteInlineImage
{
//PDFR_DEBUG{
(CompleteInlineImage beg)=
}if
dup/ImageType known not{
dup/ImageType 1 put
}if
dup length dict exch{
exch//ImageKeys//Substitute exec
dup/Filter eq{
exch//ImageValues//Substitute exec exch
}if
dup/ColorSpace eq{
exch
dup//ImageValues exch//knownget exec{
exch pop
}{
//ResolveColorSpace exec
}ifelse
exch
}if
exch
2 index 3 1 roll put
}forall
//CompleteImage exec
dup/DataSource 2 copy get
2 index//AppendFilters exec put
//PDFR_DEBUG{
(CompleteInlineImage end)=
}if
}bind def
/CompleteOutlineImage
{
currentglobal exch dup gcheck setglobal
//PDFR_DEBUG{
(CompleteOutlineImage beg)=
}if
dup dup//MakeStreamReader exec/DataSource exch put
dup/ImageType known not{
//CompleteImage exec
dup/ImageType 1 put
dup/ColorSpace known{
dup/ColorSpace//CheckColorSpace//ResolveD exec
dup type/arraytype eq{
//ResolveColorSpaceArray exec
//SubstitutePDFColorSpace exec
1 index exch/ColorSpace exch put
}{
pop
}ifelse
}if
}if
//PDFR_DEBUG{
(CompleteOutlineImage end)=
}if
exch setglobal
}bind def
/DoImage
{
//PDFR_DEBUG{
(DoImage beg)=
}if
gsave
dup/ColorSpace//knownget exec{setcolorspace}if
dup/ImageMask//knownget exec not{false}if
{imagemask}{image}ifelse
grestore
//PDFR_DEBUG{
(DoImage end)=
}if
}bind def
/GSave
{
gsave
//PDFReader/GraphicStateStackPointer get
dup//GraphicStateStack exch get null eq{
dup//GraphicStateStack exch//InitialGraphicState length dict put
}if
dup//GraphicStateStack exch get
//GraphicState exch copy pop
1 add//PDFReader exch/GraphicStateStackPointer exch put
}bind def
/GRestore
{
grestore
//PDFReader/GraphicStateStackPointer get
1 sub dup
//PDFReader exch/GraphicStateStackPointer exch put
//GraphicStateStack exch get
//GraphicState copy pop
}bind def
/SetFont
{dup//GraphicState exch/FontSize exch put
//ResolveAndSetFont exec
//GraphicState/FontMatrixNonHV currentfont/FontMatrix get 1 get 0 ne put
}bind def
/ShowText
{//GraphicState/TextRenderingMode get 0 eq{
//GraphicState/WordSpacing get 0
32
//GraphicState/CharacterSpacing get 0
6 5 roll
//GraphicState/FontMatrixNonHV get{
[
7 -2 roll pop
5 -2 roll pop
5 -1 roll
{
exch
pop
3 index add
exch 2 index eq{3 index add}if
4 1 roll
}
currentfont/FontMatrix get 0 get 0 ne{
1 1 index length 1 sub getinterval cvx
}if
5 index
cshow
pop pop pop]
xshow
}{
awidthshow
}ifelse
}{
//GraphicState/CharacterSpacing get 0 eq
//GraphicState/FontMatrixNonHV get not and
//GraphicState/WordSpacing get 0 eq and{
true charpath
}{
{
exch
pop 0
currentpoint 5 4 roll
( )dup 0 3 index put true charpath
5 1 roll
moveto rmoveto
//GraphicState/CharacterSpacing get 0 rmoveto
32 eq{
//GraphicState/WordSpacing get 0 rmoveto
}if
}
//GraphicState/FontMatrixNonHV get dup not exch{
pop currentfont/FontMatrix get 0 get 0 ne
}if{
1 1 index length 1 sub getinterval cvx
}if
exch cshow
}ifelse
}ifelse
}bind def
/ShowTextBeg
{//GraphicState/TextRenderingMode get 0 ne{
currentpoint newpath moveto
}if
}bind def
/ShowTextEnd
{//GraphicState/TextRenderingMode get
{dup 1 eq{
stroke exit
}if
dup 2 eq{
gsave fill grestore stroke exit
}if
dup 3 eq{
currentpoint newpath moveto
}if
dup 4 eq{
gsave fill grestore clip exit
}if
dup 5 eq{
gsave stroke grestore clip exit
}if
dup 6 eq{
gsave fill grestore gsave stroke grestore fill exit
}if
dup 7 eq{
clip exit
}if
exit
}loop
pop
}bind def
/ShowTextWithGlyphPositioning
{//ShowTextBeg exec
{dup type/stringtype eq{
//ShowText exec
}{
neg 1000 div//GraphicState/FontSize get mul 0 rmoveto
}ifelse
}forall
//ShowTextEnd exec
}bind def
/CheckFont
{dup/Type get/ExtGState ne{
mark(Resource )3 index( must have /Type/ExtGState.)//error exec
}if
}bind def
/SetTransfer
{
//PDFR_DEBUG{(SetTransfer beg )print count =}if
dup type/arraytype eq 1 index xcheck not and{
0 4 getinterval aload pop
setcolortransfer
}{
settransfer
}ifelse
//PDFR_DEBUG{(SetTransfer end )print count =}if
}bind def
/CheckExtGState
{dup/Type get/ExtGState ne{
mark(Resource )3 index( must have /Type/ExtGState.)//error exec
}if
}bind def
/CheckHalftone
{dup/HalftoneType known not{
mark(Resource )3 index( must have /HalftoneType.)//error exec
}if
}bind def
/ResolveFunction
{
//PDFR_DEBUG{(ResolveFunction beg )print dup = count =}if
2 copy get//IsObjRef exec{
2 copy//DoNothing//ResolveD exec
3 copy put pop
}if
2 copy get dup type/arraytype eq exch xcheck and not{
2 copy get
dup type/arraytype eq 1 index xcheck not and{
dup length 1 sub -1 0{
2 copy//DoNothing ResolveA
dup/Identity eq{
pop 2 copy{}put
}{
//FunctionToProc exec
3 copy put pop
}ifelse
pop
}for
}{
dup/Default eq{
}{
dup/Identity eq{
pop{}
}{dup type/nametype eq{
//spotfunctions exch get
}{
//FunctionToProc exec
}ifelse
}ifelse
}ifelse
}ifelse
3 copy put
exch pop
}{
1 index exch get
}ifelse
//PDFR_DEBUG{(ResolveFunction end )print dup == count =}if
}bind def
/ResolveFunctionSafe
{2 copy known{
//ResolveFunction exec
}if
pop
}bind def
/CreateHalftoneThresholds
{
dup/Thresholds known not{
dup/HalftoneType get 10 eq{
dup dup//MakeStreamReader exec
/Thresholds exch put
}if
dup/HalftoneType get dup 3 eq exch 6 eq or{
dup dup//MakeStreamReader exec
//BlockBuffer readstring pop
dup length
dup 0 eq{
mark(Could not read Thresholds)//error exec
}if
string copy/Thresholds exch put
dup/HalftoneType 3 put
}if
}if
}bind def
/SetExtGState
{
//PDFReader/CurrentObject get/Context get/Resources get
/ExtGState//DoNothing//ResolveD exec
exch//CheckExtGState//ResolveD exec
dup/LW//knownget exec{
setlinewidth
}if
dup/LC//knownget exec{
setlinecap
}if
dup/LJ//knownget exec{
setlinejoin
}if
dup/ML//knownget exec{
setmeterlimit
}if
dup/D//knownget exec{
setdash
}if
dup/RI//knownget exec{
mark(Unimplemented ExtGState.RI)//error exec
}if
dup/OP//knownget exec{
setoverprint
}if
dup/op//knownget exec{
setoverprint
}if
dup/OPM//knownget exec{
mark(Unimplemented ExtGState.OPM)//error exec
}if
dup/Font//knownget exec{
mark(Unimplemented ExtGState.Font)//error exec
}if
dup/BG known{
/BG//ResolveFunction exec
setblackgeneration
}if
dup/BG2 known{
/BG2//ResolveFunction exec
dup/Default eq{
//InitialExtGState/BG2 get
}if
setblackgeneration
}if
dup/UCR known{
/UCR//ResolveFunction exec
setundercolorremoval
}if
dup/UCR2 known{
/UCR2//ResolveFunction exec
dup/Default eq{
//InitialExtGState/UCR2 get
}if
setundercolorremoval
}if
dup/TR known{
/TR//ResolveFunction exec
//SetTransfer exec
}if
dup/TR2 known{
/TR2//ResolveFunction exec
dup/Default eq{
pop//InitialExtGState/TR2 get
aload pop setcolortransfer
}{
//SetTransfer exec
}ifelse
}if
dup/HT//knownget exec{
dup/Default eq{
pop//InitialExtGState/HT get
sethalftone
}{
//PDFR_DEBUG{(Ht beg)=}if
pop dup/HT//CheckHalftone//ResolveD exec
/SpotFunction//ResolveFunctionSafe exec
/TransferFunction//ResolveFunctionSafe exec
null exch
dup/HalftoneType get dup 5 eq exch dup 4 eq exch 2 eq or or{
dup{
dup//IsObjRef exec{
pop
1 index exch//CheckHalftone ResolveD
}if
dup type/dicttype eq{
dup/SpotFunction//ResolveFunctionSafe exec
/TransferFunction//ResolveFunctionSafe exec
//CreateHalftoneThresholds exec
dup/HalftoneType get 5 gt{
4 3 roll pop
dup 4 1 roll
}if
}if
pop pop
}forall
}if
//CreateHalftoneThresholds exec
//PDFR_DEBUG{
(HT:)=
dup{
1 index/Default eq{
(Default <<)=
exch pop
{exch = ==}forall
(>>)=
}{
exch = ==
}ifelse
}forall
(HT end)= flush
}if
exch dup null ne{
(Warning: Ignoring a halftone with a Level 3 component halftone Type )print dup/HalftoneType get =
pop pop
}{
pop
dup/HalftoneType get 5 gt{
(Warning: Ignoring a Level 3 halftone Type )print dup/HalftoneType get =
pop
}{
sethalftone
}ifelse
}ifelse
//PDFR_DEBUG{(HT set)= flush}if
}ifelse
}if
dup/FL//knownget exec{
setflattness
}if
dup/SM//knownget exec{
setsmoothness
}if
dup/SA//knownget exec{
setstrokeadjust
}if
dup/BM//knownget exec{
mark(Unimplemented ExtGState.BM)//error exec
}if
dup/SMask//knownget exec{
mark(Unimplemented ExtGState.SMask)//error exec
}if
dup/CA//knownget exec{
mark(Unimplemented ExtGState.CA)//error exec
}if
dup/ca//knownget exec{
mark(Unimplemented ExtGState.ca)//error exec
}if
dup/AIS//knownget exec{
mark(Unimplemented ExtGState.AIS)//error exec
}if
dup/TK//knownget exec{
mark(Unimplemented ExtGState.TK)//error exec
}if
pop
}bind def
/CheckXObject
{dup/Subtype get dup/Image ne exch dup/Form ne exch/PS ne and and{
mark(Resource )3 index( must have /Subtype /Image or /Form or /PS.)//error exec
}if
}bind def
/DoXObject
{
//PDFReader/CurrentObject get/Context get/Resources get
/XObject//DoNothing//ResolveD exec
exch//CheckXObject//ResolveD exec
dup/Subtype get
dup/Image eq{
pop
//CompleteOutlineImage exec
//DoImage exec
}{
dup/PS eq{
PDFR_DEBUG{
(Executing a PS Xobject)=
}if
pop
//RunDelayedStream exec
}{
dup/Form eq{
pop
PDFR_DEBUG{
(Executing a Form XObject)=
}if
//PDFReader/CurrentObject get exch
dup//PDFReader exch<< exch/Context exch >>/CurrentObject exch put
dup/Matrix get concat
dup/BBox get aload pop exch 3 index sub exch 2 index sub rectclip
//RunDelayedStream exec
//PDFReader exch/CurrentObject exch put
}{
mark exch(unimplemented XObject type )exch//error exec
}ifelse
}ifelse
}ifelse
}bind def
/Operators 50 dict begin
/q{//GSave exec}bind def
/Q{//GRestore exec}bind def
/cm{//TempMatrix astore concat}bind def
/i{1 .min setflat}bind def
/J/setlinecap load def
/d/setdash load def
/j/setlinejoin load def
/w/setlinewidth load def
/M/setmiterlimit load def
/gs{SetExtGState}bind def
/g/setgray load def
/rg/setrgbcolor load def
/k/setcmykcolor load def
/cs{//ResolveColorSpace exec//SetColorSpaceSafe exec
}bind def
/sc/setcolor load def
/scn{//SetColor exec}bind def
/G/setgray load def
/RG/setrgbcolor load def
/K/setcmykcolor load def
/CS//cs def
/ri{SetColorRenderingIntent}bind def
/SC/setcolor load def
/SCN{//SetColor exec}bind def
/m/moveto load def
/l/lineto load def
/c/curveto load def
/v{currentpoint 6 2 roll curveto}bind def
/y{2 copy curveto}bind def
/re{
4 2 roll moveto exch dup 0 rlineto 0 3 -1 roll rlineto neg 0 rlineto
closepath
}def
/h/closepath load def
/n/newpath load def
/S/stroke load def
/s{closepath stroke}bind def
/f/fill load def
/f*/eofill load def
/B{gsave fill grestore stroke}bind def
/b{closepath gsave fill grestore stroke}bind def
/B*{gsave eofill grestore stroke}bind def
/b*{closepath gsave eofill grestore stroke}bind def
/W/clip load def
/W*/eoclip load def
/sh{
ResolveShading
dup/Background known{
gsave
dup/ColorSpace get setcolorspace
dup/Background get aload pop setcolor
pathbbox
2 index sub exch 3 index sub exch
rectfill
grestore
}if
shfill
}bind def
/Do{//DoXObject exec}bind def
/BI{currentglobal false setglobal<<}bind def
/ID{>>
dup/DataSource currentfile
2 index/F//knownget exec{
/A85 eq{
0(~>)/SubFileDecode filter
}if
}if
put
//CompleteInlineImage exec
exch setglobal
//DoImage exec
}bind def
/EI{}bind def
/BT{gsave//GraphicState/InitialTextMatrix get currentmatrix pop}bind def
/ET{grestore}bind def
/Tc{//GraphicState exch/CharacterSpacing exch put}bind def
/TL{//GraphicState exch/TextLeading exch put}bind def
/Tr{//GraphicState exch/TextRenderingMode exch put}bind def
/Ts{
mark(Unimplemented SetTextRise)//error exec
}bind def
/Tw{//GraphicState exch/WordSpacing exch put}bind def
/Tz{
mark(Unimplemented SetHorizontalTextScaling)//error exec
}bind def
/Td{translate 0 0 moveto}bind def
/TD{dup neg//TL exec//Td exec}bind def
/Tm{//GraphicState/InitialTextMatrix get setmatrix
//TempMatrix astore concat
0 0 moveto}bind def
/T*{0//GraphicState/TextLeading get neg//Td exec}bind def
/Tj{//ShowTextBeg exec//ShowText exec//ShowTextEnd exec}bind def
/'{//T* exec//ShowText exec//ShowTextEnd exec}bind def
/"{3 2 roll//Tw exec exch//Tc exec//' exec}bind def
/TJ//ShowTextWithGlyphPositioning def
/Tf//SetFont def
/d0/setcharwidth load def
/d1/setcachedevice load def
/BDC{pop pop}bind def
/BMC{pop}bind def
/EMC{}bind def
/BX{BeginCompatibilitySection}bind def
/EX{EndCompatibilitySection}bind def
/DP{DefineMarkedContentPointWithPropertyList}bind def
/MP{DefineMarkedContentPoint}bind def
/PS{cvx exec}bind def
currentdict end def
//PDFR_STREAM{
//Operators length dict begin
//Operators{
exch dup
[exch//=only/exec load
( )/print load
8 7 roll
dup type/arraytype eq{
/exec load
}if
( )/print load
]cvx
def
}forall
currentdict end/Operators exch def
}if
/.registerencoding
{pop pop
}bind def
/.defineencoding
{def
}bind def
/.findencoding
{load
}bind def
/currentglobal where
{pop currentglobal{setglobal}true setglobal}
{{}}
ifelse
/MacRomanEncoding
StandardEncoding 0 39 getinterval aload pop
/quotesingle
StandardEncoding 40 56 getinterval aload pop
/grave
StandardEncoding 97 31 getinterval aload pop
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave
/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde
/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef
/florin/.notdef/.notdef/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright
/quoteleft/quoteright/divide/.notdef
/ydieresis/Ydieresis/fraction/currency
/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase
/perthousand/Acircumflex/Ecircumflex/Aacute
/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex
/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
256 packedarray
5 1 index .registerencoding
.defineencoding
exec
/AdobeGlyphList mark
/A 16#0041
/AE 16#00c6
/AEacute 16#01fc
/AEmacron 16#01e2
/AEsmall 16#f7e6
/Aacute 16#00c1
/Aacutesmall 16#f7e1
/Abreve 16#0102
/Abreveacute 16#1eae
/Abrevecyrillic 16#04d0
/Abrevedotbelow 16#1eb6
/Abrevegrave 16#1eb0
/Abrevehookabove 16#1eb2
/Abrevetilde 16#1eb4
/Acaron 16#01cd
/Acircle 16#24b6
/Acircumflex 16#00c2
/Acircumflexacute 16#1ea4
/Acircumflexdotbelow 16#1eac
/Acircumflexgrave 16#1ea6
/Acircumflexhookabove 16#1ea8
/Acircumflexsmall 16#f7e2
/Acircumflextilde 16#1eaa
/Acute 16#f6c9
/Acutesmall 16#f7b4
/Acyrillic 16#0410
/Adblgrave 16#0200
/Adieresis 16#00c4
/Adieresiscyrillic 16#04d2
/Adieresismacron 16#01de
/Adieresissmall 16#f7e4
/Adotbelow 16#1ea0
/Adotmacron 16#01e0
/Agrave 16#00c0
/Agravesmall 16#f7e0
/Ahookabove 16#1ea2
/Aiecyrillic 16#04d4
/Ainvertedbreve 16#0202
/Alpha 16#0391
/Alphatonos 16#0386
/Amacron 16#0100
/Amonospace 16#ff21
/Aogonek 16#0104
/Aring 16#00c5
/Aringacute 16#01fa
/Aringbelow 16#1e00
/Aringsmall 16#f7e5
/Asmall 16#f761
/Atilde 16#00c3
/Atildesmall 16#f7e3
/Aybarmenian 16#0531
/B 16#0042
/Bcircle 16#24b7
/Bdotaccent 16#1e02
/Bdotbelow 16#1e04
/Becyrillic 16#0411
/Benarmenian 16#0532
/Beta 16#0392
/Bhook 16#0181
/Blinebelow 16#1e06
/Bmonospace 16#ff22
/Brevesmall 16#f6f4
/Bsmall 16#f762
/Btopbar 16#0182
/C 16#0043
/Caarmenian 16#053e
/Cacute 16#0106
/Caron 16#f6ca
/Caronsmall 16#f6f5
/Ccaron 16#010c
/Ccedilla 16#00c7
/Ccedillaacute 16#1e08
/Ccedillasmall 16#f7e7
/Ccircle 16#24b8
/Ccircumflex 16#0108
/Cdot 16#010a
/Cdotaccent 16#010a
/Cedillasmall 16#f7b8
/Chaarmenian 16#0549
/Cheabkhasiancyrillic 16#04bc
/Checyrillic 16#0427
/Chedescenderabkhasiancyrillic 16#04be
/Chedescendercyrillic 16#04b6
/Chedieresiscyrillic 16#04f4
/Cheharmenian 16#0543
/Chekhakassiancyrillic 16#04cb
/Cheverticalstrokecyrillic 16#04b8
/Chi 16#03a7
/Chook 16#0187
/Circumflexsmall 16#f6f6
/Cmonospace 16#ff23
/Coarmenian 16#0551
/Csmall 16#f763
/D 16#0044
/DZ 16#01f1
/DZcaron 16#01c4
/Daarmenian 16#0534
/Dafrican 16#0189
/Dcaron 16#010e
/Dcedilla 16#1e10
/Dcircle 16#24b9
/Dcircumflexbelow 16#1e12
/Dcroat 16#0110
/Ddotaccent 16#1e0a
/Ddotbelow 16#1e0c
/Decyrillic 16#0414
/Deicoptic 16#03ee
/Delta 16#2206
/Deltagreek 16#0394
/Dhook 16#018a
/Dieresis 16#f6cb
/DieresisAcute 16#f6cc
/DieresisGrave 16#f6cd
/Dieresissmall 16#f7a8
/Digammagreek 16#03dc
/Djecyrillic 16#0402
/Dlinebelow 16#1e0e
/Dmonospace 16#ff24
/Dotaccentsmall 16#f6f7
/Dslash 16#0110
/Dsmall 16#f764
/Dtopbar 16#018b
/Dz 16#01f2
/Dzcaron 16#01c5
/Dzeabkhasiancyrillic 16#04e0
/Dzecyrillic 16#0405
/Dzhecyrillic 16#040f
/E 16#0045
/Eacute 16#00c9
/Eacutesmall 16#f7e9
/Ebreve 16#0114
/Ecaron 16#011a
/Ecedillabreve 16#1e1c
/Echarmenian 16#0535
/Ecircle 16#24ba
/Ecircumflex 16#00ca
/Ecircumflexacute 16#1ebe
/Ecircumflexbelow 16#1e18
/Ecircumflexdotbelow 16#1ec6
/Ecircumflexgrave 16#1ec0
/Ecircumflexhookabove 16#1ec2
/Ecircumflexsmall 16#f7ea
/Ecircumflextilde 16#1ec4
/Ecyrillic 16#0404
/Edblgrave 16#0204
/Edieresis 16#00cb
/Edieresissmall 16#f7eb
/Edot 16#0116
/Edotaccent 16#0116
/Edotbelow 16#1eb8
/Efcyrillic 16#0424
/Egrave 16#00c8
/Egravesmall 16#f7e8
/Eharmenian 16#0537
/Ehookabove 16#1eba
/Eightroman 16#2167
/Einvertedbreve 16#0206
/Eiotifiedcyrillic 16#0464
/Elcyrillic 16#041b
/Elevenroman 16#216a
/Emacron 16#0112
/Emacronacute 16#1e16
/Emacrongrave 16#1e14
/Emcyrillic 16#041c
/Emonospace 16#ff25
/Encyrillic 16#041d
/Endescendercyrillic 16#04a2
/Eng 16#014a
/Enghecyrillic 16#04a4
/Enhookcyrillic 16#04c7
/Eogonek 16#0118
/Eopen 16#0190
/Epsilon 16#0395
/Epsilontonos 16#0388
/Ercyrillic 16#0420
/Ereversed 16#018e
/Ereversedcyrillic 16#042d
/Escyrillic 16#0421
/Esdescendercyrillic 16#04aa
/Esh 16#01a9
/Esmall 16#f765
/Eta 16#0397
/Etarmenian 16#0538
/Etatonos 16#0389
/Eth 16#00d0
/Ethsmall 16#f7f0
/Etilde 16#1ebc
/Etildebelow 16#1e1a
/Euro 16#20ac
/Ezh 16#01b7
/Ezhcaron 16#01ee
/Ezhreversed 16#01b8
/F 16#0046
/Fcircle 16#24bb
/Fdotaccent 16#1e1e
/Feharmenian 16#0556
/Feicoptic 16#03e4
/Fhook 16#0191
/Fitacyrillic 16#0472
/Fiveroman 16#2164
/Fmonospace 16#ff26
/Fourroman 16#2163
/Fsmall 16#f766
/G 16#0047
/GBsquare 16#3387
/Gacute 16#01f4
/Gamma 16#0393
/Gammaafrican 16#0194
/Gangiacoptic 16#03ea
/Gbreve 16#011e
/Gcaron 16#01e6
/Gcedilla 16#0122
/Gcircle 16#24bc
/Gcircumflex 16#011c
/Gcommaaccent 16#0122
/Gdot 16#0120
/Gdotaccent 16#0120
/Gecyrillic 16#0413
/Ghadarmenian 16#0542
/Ghemiddlehookcyrillic 16#0494
/Ghestrokecyrillic 16#0492
/Gheupturncyrillic 16#0490
/Ghook 16#0193
/Gimarmenian 16#0533
/Gjecyrillic 16#0403
/Gmacron 16#1e20
/Gmonospace 16#ff27
/Grave 16#f6ce
/Gravesmall 16#f760
/Gsmall 16#f767
/Gsmallhook 16#029b
/Gstroke 16#01e4
/H 16#0048
/H18533 16#25cf
/H18543 16#25aa
/H18551 16#25ab
/H22073 16#25a1
/HPsquare 16#33cb
/Haabkhasiancyrillic 16#04a8
/Hadescendercyrillic 16#04b2
/Hardsigncyrillic 16#042a
/Hbar 16#0126
/Hbrevebelow 16#1e2a
/Hcedilla 16#1e28
/Hcircle 16#24bd
/Hcircumflex 16#0124
/Hdieresis 16#1e26
/Hdotaccent 16#1e22
/Hdotbelow 16#1e24
/Hmonospace 16#ff28
/Hoarmenian 16#0540
/Horicoptic 16#03e8
/Hsmall 16#f768
/Hungarumlaut 16#f6cf
/Hungarumlautsmall 16#f6f8
/Hzsquare 16#3390
/I 16#0049
/IAcyrillic 16#042f
/IJ 16#0132
/IUcyrillic 16#042e
/Iacute 16#00cd
/Iacutesmall 16#f7ed
/Ibreve 16#012c
/Icaron 16#01cf
/Icircle 16#24be
/Icircumflex 16#00ce
/Icircumflexsmall 16#f7ee
/Icyrillic 16#0406
/Idblgrave 16#0208
/Idieresis 16#00cf
/Idieresisacute 16#1e2e
/Idieresiscyrillic 16#04e4
/Idieresissmall 16#f7ef
/Idot 16#0130
/Idotaccent 16#0130
/Idotbelow 16#1eca
/Iebrevecyrillic 16#04d6
/Iecyrillic 16#0415
/Ifraktur 16#2111
/Igrave 16#00cc
/Igravesmall 16#f7ec
/Ihookabove 16#1ec8
/Iicyrillic 16#0418
/Iinvertedbreve 16#020a
/Iishortcyrillic 16#0419
/Imacron 16#012a
/Imacroncyrillic 16#04e2
/Imonospace 16#ff29
/Iniarmenian 16#053b
/Iocyrillic 16#0401
/Iogonek 16#012e
/Iota 16#0399
/Iotaafrican 16#0196
/Iotadieresis 16#03aa
/Iotatonos 16#038a
/Ismall 16#f769
/Istroke 16#0197
/Itilde 16#0128
/Itildebelow 16#1e2c
/Izhitsacyrillic 16#0474
/Izhitsadblgravecyrillic 16#0476
/J 16#004a
/Jaarmenian 16#0541
/Jcircle 16#24bf
/Jcircumflex 16#0134
/Jecyrillic 16#0408
/Jheharmenian 16#054b
/Jmonospace 16#ff2a
/Jsmall 16#f76a
/K 16#004b
/KBsquare 16#3385
/KKsquare 16#33cd
/Kabashkircyrillic 16#04a0
/Kacute 16#1e30
/Kacyrillic 16#041a
/Kadescendercyrillic 16#049a
/Kahookcyrillic 16#04c3
/Kappa 16#039a
/Kastrokecyrillic 16#049e
/Kaverticalstrokecyrillic 16#049c
/Kcaron 16#01e8
/Kcedilla 16#0136
/Kcircle 16#24c0
/Kcommaaccent 16#0136
/Kdotbelow 16#1e32
/Keharmenian 16#0554
/Kenarmenian 16#053f
/Khacyrillic 16#0425
/Kheicoptic 16#03e6
/Khook 16#0198
/Kjecyrillic 16#040c
/Klinebelow 16#1e34
/Kmonospace 16#ff2b
/Koppacyrillic 16#0480
/Koppagreek 16#03de
/Ksicyrillic 16#046e
/Ksmall 16#f76b
/L 16#004c
/LJ 16#01c7
/LL 16#f6bf
/Lacute 16#0139
/Lambda 16#039b
/Lcaron 16#013d
/Lcedilla 16#013b
/Lcircle 16#24c1
/Lcircumflexbelow 16#1e3c
/Lcommaaccent 16#013b
/Ldot 16#013f
/Ldotaccent 16#013f
/Ldotbelow 16#1e36
/Ldotbelowmacron 16#1e38
/Liwnarmenian 16#053c
/Lj 16#01c8
/Ljecyrillic 16#0409
/Llinebelow 16#1e3a
/Lmonospace 16#ff2c
/Lslash 16#0141
/Lslashsmall 16#f6f9
/Lsmall 16#f76c
/M 16#004d
/MBsquare 16#3386
/Macron 16#f6d0
/Macronsmall 16#f7af
/Macute 16#1e3e
/Mcircle 16#24c2
/Mdotaccent 16#1e40
/Mdotbelow 16#1e42
/Menarmenian 16#0544
/Mmonospace 16#ff2d
/Msmall 16#f76d
/Mturned 16#019c
/Mu 16#039c
/N 16#004e
/NJ 16#01ca
/Nacute 16#0143
/Ncaron 16#0147
/Ncedilla 16#0145
/Ncircle 16#24c3
/Ncircumflexbelow 16#1e4a
/Ncommaaccent 16#0145
/Ndotaccent 16#1e44
/Ndotbelow 16#1e46
/Nhookleft 16#019d
/Nineroman 16#2168
/Nj 16#01cb
/Njecyrillic 16#040a
/Nlinebelow 16#1e48
/Nmonospace 16#ff2e
/Nowarmenian 16#0546
/Nsmall 16#f76e
/Ntilde 16#00d1
/Ntildesmall 16#f7f1
/Nu 16#039d
/O 16#004f
/OE 16#0152
/OEsmall 16#f6fa
/Oacute 16#00d3
/Oacutesmall 16#f7f3
/Obarredcyrillic 16#04e8
/Obarreddieresiscyrillic 16#04ea
/Obreve 16#014e
/Ocaron 16#01d1
/Ocenteredtilde 16#019f
/Ocircle 16#24c4
/Ocircumflex 16#00d4
/Ocircumflexacute 16#1ed0
/Ocircumflexdotbelow 16#1ed8
/Ocircumflexgrave 16#1ed2
/Ocircumflexhookabove 16#1ed4
/Ocircumflexsmall 16#f7f4
/Ocircumflextilde 16#1ed6
/Ocyrillic 16#041e
/Odblacute 16#0150
/Odblgrave 16#020c
/Odieresis 16#00d6
/Odieresiscyrillic 16#04e6
/Odieresissmall 16#f7f6
/Odotbelow 16#1ecc
/Ogoneksmall 16#f6fb
/Ograve 16#00d2
/Ogravesmall 16#f7f2
/Oharmenian 16#0555
/Ohm 16#2126
/Ohookabove 16#1ece
/Ohorn 16#01a0
/Ohornacute 16#1eda
/Ohorndotbelow 16#1ee2
/Ohorngrave 16#1edc
/Ohornhookabove 16#1ede
/Ohorntilde 16#1ee0
/Ohungarumlaut 16#0150
/Oi 16#01a2
/Oinvertedbreve 16#020e
/Omacron 16#014c
/Omacronacute 16#1e52
/Omacrongrave 16#1e50
/Omega 16#2126
/Omegacyrillic 16#0460
/Omegagreek 16#03a9
/Omegaroundcyrillic 16#047a
/Omegatitlocyrillic 16#047c
/Omegatonos 16#038f
/Omicron 16#039f
/Omicrontonos 16#038c
/Omonospace 16#ff2f
/Oneroman 16#2160
/Oogonek 16#01ea
/Oogonekmacron 16#01ec
/Oopen 16#0186
/Oslash 16#00d8
/Oslashacute 16#01fe
/Oslashsmall 16#f7f8
/Osmall 16#f76f
/Ostrokeacute 16#01fe
/Otcyrillic 16#047e
/Otilde 16#00d5
/Otildeacute 16#1e4c
/Otildedieresis 16#1e4e
/Otildesmall 16#f7f5
/P 16#0050
/Pacute 16#1e54
/Pcircle 16#24c5
/Pdotaccent 16#1e56
/Pecyrillic 16#041f
/Peharmenian 16#054a
/Pemiddlehookcyrillic 16#04a6
/Phi 16#03a6
/Phook 16#01a4
/Pi 16#03a0
/Piwrarmenian 16#0553
/Pmonospace 16#ff30
/Psi 16#03a8
/Psicyrillic 16#0470
/Psmall 16#f770
/Q 16#0051
/Qcircle 16#24c6
/Qmonospace 16#ff31
/Qsmall 16#f771
/R 16#0052
/Raarmenian 16#054c
/Racute 16#0154
/Rcaron 16#0158
/Rcedilla 16#0156
/Rcircle 16#24c7
/Rcommaaccent 16#0156
/Rdblgrave 16#0210
/Rdotaccent 16#1e58
/Rdotbelow 16#1e5a
/Rdotbelowmacron 16#1e5c
/Reharmenian 16#0550
/Rfraktur 16#211c
/Rho 16#03a1
/Ringsmall 16#f6fc
/Rinvertedbreve 16#0212
/Rlinebelow 16#1e5e
/Rmonospace 16#ff32
/Rsmall 16#f772
/Rsmallinverted 16#0281
/Rsmallinvertedsuperior 16#02b6
/S 16#0053
/SF010000 16#250c
/SF020000 16#2514
/SF030000 16#2510
/SF040000 16#2518
/SF050000 16#253c
/SF060000 16#252c
/SF070000 16#2534
/SF080000 16#251c
/SF090000 16#2524
/SF100000 16#2500
/SF110000 16#2502
/SF190000 16#2561
/SF200000 16#2562
/SF210000 16#2556
/SF220000 16#2555
/SF230000 16#2563
/SF240000 16#2551
/SF250000 16#2557
/SF260000 16#255d
/SF270000 16#255c
/SF280000 16#255b
/SF360000 16#255e
/SF370000 16#255f
/SF380000 16#255a
/SF390000 16#2554
/SF400000 16#2569
/SF410000 16#2566
/SF420000 16#2560
/SF430000 16#2550
/SF440000 16#256c
/SF450000 16#2567
/SF460000 16#2568
/SF470000 16#2564
/SF480000 16#2565
/SF490000 16#2559
/SF500000 16#2558
/SF510000 16#2552
/SF520000 16#2553
/SF530000 16#256b
/SF540000 16#256a
/Sacute 16#015a
/Sacutedotaccent 16#1e64
/Sampigreek 16#03e0
/Scaron 16#0160
/Scarondotaccent 16#1e66
/Scaronsmall 16#f6fd
/Scedilla 16#015e
/Schwa 16#018f
/Schwacyrillic 16#04d8
/Schwadieresiscyrillic 16#04da
/Scircle 16#24c8
/Scircumflex 16#015c
/Scommaaccent 16#0218
/Sdotaccent 16#1e60
/Sdotbelow 16#1e62
/Sdotbelowdotaccent 16#1e68
/Seharmenian 16#054d
/Sevenroman 16#2166
/Shaarmenian 16#0547
/Shacyrillic 16#0428
/Shchacyrillic 16#0429
/Sheicoptic 16#03e2
/Shhacyrillic 16#04ba
/Shimacoptic 16#03ec
/Sigma 16#03a3
/Sixroman 16#2165
/Smonospace 16#ff33
/Softsigncyrillic 16#042c
/Ssmall 16#f773
/Stigmagreek 16#03da
/T 16#0054
/Tau 16#03a4
/Tbar 16#0166
/Tcaron 16#0164
/Tcedilla 16#0162
/Tcircle 16#24c9
/Tcircumflexbelow 16#1e70
/Tcommaaccent 16#0162
/Tdotaccent 16#1e6a
/Tdotbelow 16#1e6c
/Tecyrillic 16#0422
/Tedescendercyrillic 16#04ac
/Tenroman 16#2169
/Tetsecyrillic 16#04b4
/Theta 16#0398
/Thook 16#01ac
/Thorn 16#00de
/Thornsmall 16#f7fe
/Threeroman 16#2162
/Tildesmall 16#f6fe
/Tiwnarmenian 16#054f
/Tlinebelow 16#1e6e
/Tmonospace 16#ff34
/Toarmenian 16#0539
/Tonefive 16#01bc
/Tonesix 16#0184
/Tonetwo 16#01a7
/Tretroflexhook 16#01ae
/Tsecyrillic 16#0426
/Tshecyrillic 16#040b
/Tsmall 16#f774
/Twelveroman 16#216b
/Tworoman 16#2161
/U 16#0055
/Uacute 16#00da
/Uacutesmall 16#f7fa
/Ubreve 16#016c
/Ucaron 16#01d3
/Ucircle 16#24ca
/Ucircumflex 16#00db
/Ucircumflexbelow 16#1e76
/Ucircumflexsmall 16#f7fb
/Ucyrillic 16#0423
/Udblacute 16#0170
/Udblgrave 16#0214
/Udieresis 16#00dc
/Udieresisacute 16#01d7
/Udieresisbelow 16#1e72
/Udieresiscaron 16#01d9
/Udieresiscyrillic 16#04f0
/Udieresisgrave 16#01db
/Udieresismacron 16#01d5
/Udieresissmall 16#f7fc
/Udotbelow 16#1ee4
/Ugrave 16#00d9
/Ugravesmall 16#f7f9
/Uhookabove 16#1ee6
/Uhorn 16#01af
/Uhornacute 16#1ee8
/Uhorndotbelow 16#1ef0
/Uhorngrave 16#1eea
/Uhornhookabove 16#1eec
/Uhorntilde 16#1eee
/Uhungarumlaut 16#0170
/Uhungarumlautcyrillic 16#04f2
/Uinvertedbreve 16#0216
/Ukcyrillic 16#0478
/Umacron 16#016a
/Umacroncyrillic 16#04ee
/Umacrondieresis 16#1e7a
/Umonospace 16#ff35
/Uogonek 16#0172
/Upsilon 16#03a5
/Upsilon1 16#03d2
/Upsilonacutehooksymbolgreek 16#03d3
/Upsilonafrican 16#01b1
/Upsilondieresis 16#03ab
/Upsilondieresishooksymbolgreek 16#03d4
/Upsilonhooksymbol 16#03d2
/Upsilontonos 16#038e
/Uring 16#016e
/Ushortcyrillic 16#040e
/Usmall 16#f775
/Ustraightcyrillic 16#04ae
/Ustraightstrokecyrillic 16#04b0
/Utilde 16#0168
/Utildeacute 16#1e78
/Utildebelow 16#1e74
/V 16#0056
/Vcircle 16#24cb
/Vdotbelow 16#1e7e
/Vecyrillic 16#0412
/Vewarmenian 16#054e
/Vhook 16#01b2
/Vmonospace 16#ff36
/Voarmenian 16#0548
/Vsmall 16#f776
/Vtilde 16#1e7c
/W 16#0057
/Wacute 16#1e82
/Wcircle 16#24cc
/Wcircumflex 16#0174
/Wdieresis 16#1e84
/Wdotaccent 16#1e86
/Wdotbelow 16#1e88
/Wgrave 16#1e80
/Wmonospace 16#ff37
/Wsmall 16#f777
/X 16#0058
/Xcircle 16#24cd
/Xdieresis 16#1e8c
/Xdotaccent 16#1e8a
/Xeharmenian 16#053d
/Xi 16#039e
/Xmonospace 16#ff38
/Xsmall 16#f778
/Y 16#0059
/Yacute 16#00dd
/Yacutesmall 16#f7fd
/Yatcyrillic 16#0462
/Ycircle 16#24ce
/Ycircumflex 16#0176
/Ydieresis 16#0178
/Ydieresissmall 16#f7ff
/Ydotaccent 16#1e8e
/Ydotbelow 16#1ef4
/Yericyrillic 16#042b
/Yerudieresiscyrillic 16#04f8
/Ygrave 16#1ef2
/Yhook 16#01b3
/Yhookabove 16#1ef6
/Yiarmenian 16#0545
/Yicyrillic 16#0407
/Yiwnarmenian 16#0552
/Ymonospace 16#ff39
/Ysmall 16#f779
/Ytilde 16#1ef8
/Yusbigcyrillic 16#046a
/Yusbigiotifiedcyrillic 16#046c
/Yuslittlecyrillic 16#0466
/Yuslittleiotifiedcyrillic 16#0468
/Z 16#005a
/Zaarmenian 16#0536
/Zacute 16#0179
/Zcaron 16#017d
/Zcaronsmall 16#f6ff
/Zcircle 16#24cf
/Zcircumflex 16#1e90
/Zdot 16#017b
/Zdotaccent 16#017b
/Zdotbelow 16#1e92
/Zecyrillic 16#0417
/Zedescendercyrillic 16#0498
/Zedieresiscyrillic 16#04de
/Zeta 16#0396
/Zhearmenian 16#053a
/Zhebrevecyrillic 16#04c1
/Zhecyrillic 16#0416
/Zhedescendercyrillic 16#0496
/Zhedieresiscyrillic 16#04dc
/Zlinebelow 16#1e94
/Zmonospace 16#ff3a
/Zsmall 16#f77a
/Zstroke 16#01b5
/a 16#0061
/aabengali 16#0986
/aacute 16#00e1
/aadeva 16#0906
/aagujarati 16#0a86
/aagurmukhi 16#0a06
/aamatragurmukhi 16#0a3e
/aarusquare 16#3303
/aavowelsignbengali 16#09be
/aavowelsigndeva 16#093e
/aavowelsigngujarati 16#0abe
/abbreviationmarkarmenian 16#055f
/abbreviationsigndeva 16#0970
/abengali 16#0985
/abopomofo 16#311a
/abreve 16#0103
/abreveacute 16#1eaf
/abrevecyrillic 16#04d1
/abrevedotbelow 16#1eb7
/abrevegrave 16#1eb1
/abrevehookabove 16#1eb3
/abrevetilde 16#1eb5
/acaron 16#01ce
/acircle 16#24d0
/acircumflex 16#00e2
/acircumflexacute 16#1ea5
/acircumflexdotbelow 16#1ead
/acircumflexgrave 16#1ea7
/acircumflexhookabove 16#1ea9
/acircumflextilde 16#1eab
/acute 16#00b4
/acutebelowcmb 16#0317
/acutecmb 16#0301
/acutecomb 16#0301
/acutedeva 16#0954
/acutelowmod 16#02cf
/acutetonecmb 16#0341
/acyrillic 16#0430
/adblgrave 16#0201
/addakgurmukhi 16#0a71
/adeva 16#0905
/adieresis 16#00e4
/adieresiscyrillic 16#04d3
/adieresismacron 16#01df
/adotbelow 16#1ea1
/adotmacron 16#01e1
/ae 16#00e6
/aeacute 16#01fd
/aekorean 16#3150
/aemacron 16#01e3
/afii00208 16#2015
/afii08941 16#20a4
/afii10017 16#0410
/afii10018 16#0411
/afii10019 16#0412
/afii10020 16#0413
/afii10021 16#0414
/afii10022 16#0415
/afii10023 16#0401
/afii10024 16#0416
/afii10025 16#0417
/afii10026 16#0418
/afii10027 16#0419
/afii10028 16#041a
/afii10029 16#041b
/afii10030 16#041c
/afii10031 16#041d
/afii10032 16#041e
/afii10033 16#041f
/afii10034 16#0420
/afii10035 16#0421
/afii10036 16#0422
/afii10037 16#0423
/afii10038 16#0424
/afii10039 16#0425
/afii10040 16#0426
/afii10041 16#0427
/afii10042 16#0428
/afii10043 16#0429
/afii10044 16#042a
/afii10045 16#042b
/afii10046 16#042c
/afii10047 16#042d
/afii10048 16#042e
/afii10049 16#042f
/afii10050 16#0490
/afii10051 16#0402
/afii10052 16#0403
/afii10053 16#0404
/afii10054 16#0405
/afii10055 16#0406
/afii10056 16#0407
/afii10057 16#0408
/afii10058 16#0409
/afii10059 16#040a
/afii10060 16#040b
/afii10061 16#040c
/afii10062 16#040e
/afii10063 16#f6c4
/afii10064 16#f6c5
/afii10065 16#0430
/afii10066 16#0431
/afii10067 16#0432
/afii10068 16#0433
/afii10069 16#0434
/afii10070 16#0435
/afii10071 16#0451
/afii10072 16#0436
/afii10073 16#0437
/afii10074 16#0438
/afii10075 16#0439
/afii10076 16#043a
/afii10077 16#043b
/afii10078 16#043c
/afii10079 16#043d
/afii10080 16#043e
/afii10081 16#043f
/afii10082 16#0440
/afii10083 16#0441
/afii10084 16#0442
/afii10085 16#0443
/afii10086 16#0444
/afii10087 16#0445
/afii10088 16#0446
/afii10089 16#0447
/afii10090 16#0448
/afii10091 16#0449
/afii10092 16#044a
/afii10093 16#044b
/afii10094 16#044c
/afii10095 16#044d
/afii10096 16#044e
/afii10097 16#044f
/afii10098 16#0491
/afii10099 16#0452
/afii10100 16#0453
/afii10101 16#0454
/afii10102 16#0455
/afii10103 16#0456
/afii10104 16#0457
/afii10105 16#0458
/afii10106 16#0459
/afii10107 16#045a
/afii10108 16#045b
/afii10109 16#045c
/afii10110 16#045e
/afii10145 16#040f
/afii10146 16#0462
/afii10147 16#0472
/afii10148 16#0474
/afii10192 16#f6c6
/afii10193 16#045f
/afii10194 16#0463
/afii10195 16#0473
/afii10196 16#0475
/afii10831 16#f6c7
/afii10832 16#f6c8
/afii10846 16#04d9
/afii299 16#200e
/afii300 16#200f
/afii301 16#200d
/afii57381 16#066a
/afii57388 16#060c
/afii57392 16#0660
/afii57393 16#0661
/afii57394 16#0662
/afii57395 16#0663
/afii57396 16#0664
/afii57397 16#0665
/afii57398 16#0666
/afii57399 16#0667
/afii57400 16#0668
/afii57401 16#0669
/afii57403 16#061b
/afii57407 16#061f
/afii57409 16#0621
/afii57410 16#0622
/afii57411 16#0623
/afii57412 16#0624
/afii57413 16#0625
/afii57414 16#0626
/afii57415 16#0627
/afii57416 16#0628
/afii57417 16#0629
/afii57418 16#062a
/afii57419 16#062b
/afii57420 16#062c
/afii57421 16#062d
/afii57422 16#062e
/afii57423 16#062f
/afii57424 16#0630
/afii57425 16#0631
/afii57426 16#0632
/afii57427 16#0633
/afii57428 16#0634
/afii57429 16#0635
/afii57430 16#0636
/afii57431 16#0637
/afii57432 16#0638
/afii57433 16#0639
/afii57434 16#063a
/afii57440 16#0640
/afii57441 16#0641
/afii57442 16#0642
/afii57443 16#0643
/afii57444 16#0644
/afii57445 16#0645
/afii57446 16#0646
/afii57448 16#0648
/afii57449 16#0649
/afii57450 16#064a
/afii57451 16#064b
/afii57452 16#064c
/afii57453 16#064d
/afii57454 16#064e
/afii57455 16#064f
/afii57456 16#0650
/afii57457 16#0651
/afii57458 16#0652
/afii57470 16#0647
/afii57505 16#06a4
/afii57506 16#067e
/afii57507 16#0686
/afii57508 16#0698
/afii57509 16#06af
/afii57511 16#0679
/afii57512 16#0688
/afii57513 16#0691
/afii57514 16#06ba
/afii57519 16#06d2
/afii57534 16#06d5
/afii57636 16#20aa
/afii57645 16#05be
/afii57658 16#05c3
/afii57664 16#05d0
/afii57665 16#05d1
/afii57666 16#05d2
/afii57667 16#05d3
/afii57668 16#05d4
/afii57669 16#05d5
/afii57670 16#05d6
/afii57671 16#05d7
/afii57672 16#05d8
/afii57673 16#05d9
/afii57674 16#05da
/afii57675 16#05db
/afii57676 16#05dc
/afii57677 16#05dd
/afii57678 16#05de
/afii57679 16#05df
/afii57680 16#05e0
/afii57681 16#05e1
/afii57682 16#05e2
/afii57683 16#05e3
/afii57684 16#05e4
/afii57685 16#05e5
/afii57686 16#05e6
/afii57687 16#05e7
/afii57688 16#05e8
/afii57689 16#05e9
/afii57690 16#05ea
/afii57694 16#fb2a
/afii57695 16#fb2b
/afii57700 16#fb4b
/afii57705 16#fb1f
/afii57716 16#05f0
/afii57717 16#05f1
/afii57718 16#05f2
/afii57723 16#fb35
/afii57793 16#05b4
/afii57794 16#05b5
/afii57795 16#05b6
/afii57796 16#05bb
/afii57797 16#05b8
/afii57798 16#05b7
/afii57799 16#05b0
/afii57800 16#05b2
/afii57801 16#05b1
/afii57802 16#05b3
/afii57803 16#05c2
/afii57804 16#05c1
/afii57806 16#05b9
/afii57807 16#05bc
/afii57839 16#05bd
/afii57841 16#05bf
/afii57842 16#05c0
/afii57929 16#02bc
/afii61248 16#2105
/afii61289 16#2113
/afii61352 16#2116
/afii61573 16#202c
/afii61574 16#202d
/afii61575 16#202e
/afii61664 16#200c
/afii63167 16#066d
/afii64937 16#02bd
/agrave 16#00e0
/agujarati 16#0a85
/agurmukhi 16#0a05
/ahiragana 16#3042
/ahookabove 16#1ea3
/aibengali 16#0990
/aibopomofo 16#311e
/aideva 16#0910
/aiecyrillic 16#04d5
/aigujarati 16#0a90
/aigurmukhi 16#0a10
/aimatragurmukhi 16#0a48
/ainarabic 16#0639
/ainfinalarabic 16#feca
/aininitialarabic 16#fecb
/ainmedialarabic 16#fecc
/ainvertedbreve 16#0203
/aivowelsignbengali 16#09c8
/aivowelsigndeva 16#0948
/aivowelsigngujarati 16#0ac8
/akatakana 16#30a2
/akatakanahalfwidth 16#ff71
/akorean 16#314f
/alef 16#05d0
/alefarabic 16#0627
/alefdageshhebrew 16#fb30
/aleffinalarabic 16#fe8e
/alefhamzaabovearabic 16#0623
/alefhamzaabovefinalarabic 16#fe84
/alefhamzabelowarabic 16#0625
/alefhamzabelowfinalarabic 16#fe88
/alefhebrew 16#05d0
/aleflamedhebrew 16#fb4f
/alefmaddaabovearabic 16#0622
/alefmaddaabovefinalarabic 16#fe82
/alefmaksuraarabic 16#0649
/alefmaksurafinalarabic 16#fef0
/alefmaksurainitialarabic 16#fef3
/alefmaksuramedialarabic 16#fef4
/alefpatahhebrew 16#fb2e
/alefqamatshebrew 16#fb2f
/aleph 16#2135
/allequal 16#224c
/alpha 16#03b1
/alphatonos 16#03ac
/amacron 16#0101
/amonospace 16#ff41
/ampersand 16#0026
/ampersandmonospace 16#ff06
/ampersandsmall 16#f726
/amsquare 16#33c2
/anbopomofo 16#3122
/angbopomofo 16#3124
/angkhankhuthai 16#0e5a
/angle 16#2220
/anglebracketleft 16#3008
/anglebracketleftvertical 16#fe3f
/anglebracketright 16#3009
/anglebracketrightvertical 16#fe40
/angleleft 16#2329
/angleright 16#232a
/angstrom 16#212b
/anoteleia 16#0387
/anudattadeva 16#0952
/anusvarabengali 16#0982
/anusvaradeva 16#0902
/anusvaragujarati 16#0a82
/aogonek 16#0105
/apaatosquare 16#3300
/aparen 16#249c
/apostrophearmenian 16#055a
/apostrophemod 16#02bc
/apple 16#f8ff
/approaches 16#2250
/approxequal 16#2248
/approxequalorimage 16#2252
/approximatelyequal 16#2245
/araeaekorean 16#318e
/araeakorean 16#318d
/arc 16#2312
/arighthalfring 16#1e9a
/aring 16#00e5
/aringacute 16#01fb
/aringbelow 16#1e01
/arrowboth 16#2194
/arrowdashdown 16#21e3
/arrowdashleft 16#21e0
/arrowdashright 16#21e2
/arrowdashup 16#21e1
/arrowdblboth 16#21d4
/arrowdbldown 16#21d3
/arrowdblleft 16#21d0
/arrowdblright 16#21d2
/arrowdblup 16#21d1
/arrowdown 16#2193
/arrowdownleft 16#2199
/arrowdownright 16#2198
/arrowdownwhite 16#21e9
/arrowheaddownmod 16#02c5
/arrowheadleftmod 16#02c2
/arrowheadrightmod 16#02c3
/arrowheadupmod 16#02c4
/arrowhorizex 16#f8e7
/arrowleft 16#2190
/arrowleftdbl 16#21d0
/arrowleftdblstroke 16#21cd
/arrowleftoverright 16#21c6
/arrowleftwhite 16#21e6
/arrowright 16#2192
/arrowrightdblstroke 16#21cf
/arrowrightheavy 16#279e
/arrowrightoverleft 16#21c4
/arrowrightwhite 16#21e8
/arrowtableft 16#21e4
/arrowtabright 16#21e5
/arrowup 16#2191
/arrowupdn 16#2195
/arrowupdnbse 16#21a8
/arrowupdownbase 16#21a8
/arrowupleft 16#2196
/arrowupleftofdown 16#21c5
/arrowupright 16#2197
/arrowupwhite 16#21e7
/arrowvertex 16#f8e6
/asciicircum 16#005e
/asciicircummonospace 16#ff3e
/asciitilde 16#007e
/asciitildemonospace 16#ff5e
/ascript 16#0251
/ascriptturned 16#0252
/asmallhiragana 16#3041
/asmallkatakana 16#30a1
/asmallkatakanahalfwidth 16#ff67
/asterisk 16#002a
/asteriskaltonearabic 16#066d
/asteriskarabic 16#066d
/asteriskmath 16#2217
/asteriskmonospace 16#ff0a
/asterisksmall 16#fe61
/asterism 16#2042
/asuperior 16#f6e9
/asymptoticallyequal 16#2243
/at 16#0040
/atilde 16#00e3
/atmonospace 16#ff20
/atsmall 16#fe6b
/aturned 16#0250
/aubengali 16#0994
/aubopomofo 16#3120
/audeva 16#0914
/augujarati 16#0a94
/augurmukhi 16#0a14
/aulengthmarkbengali 16#09d7
/aumatragurmukhi 16#0a4c
/auvowelsignbengali 16#09cc
/auvowelsigndeva 16#094c
/auvowelsigngujarati 16#0acc
/avagrahadeva 16#093d
/aybarmenian 16#0561
/ayin 16#05e2
/ayinaltonehebrew 16#fb20
/ayinhebrew 16#05e2
/b 16#0062
/babengali 16#09ac
/backslash 16#005c
/backslashmonospace 16#ff3c
/badeva 16#092c
/bagujarati 16#0aac
/bagurmukhi 16#0a2c
/bahiragana 16#3070
/bahtthai 16#0e3f
/bakatakana 16#30d0
/bar 16#007c
/barmonospace 16#ff5c
/bbopomofo 16#3105
/bcircle 16#24d1
/bdotaccent 16#1e03
/bdotbelow 16#1e05
/beamedsixteenthnotes 16#266c
/because 16#2235
/becyrillic 16#0431
/beharabic 16#0628
/behfinalarabic 16#fe90
/behinitialarabic 16#fe91
/behiragana 16#3079
/behmedialarabic 16#fe92
/behmeeminitialarabic 16#fc9f
/behmeemisolatedarabic 16#fc08
/behnoonfinalarabic 16#fc6d
/bekatakana 16#30d9
/benarmenian 16#0562
/bet 16#05d1
/beta 16#03b2
/betasymbolgreek 16#03d0
/betdagesh 16#fb31
/betdageshhebrew 16#fb31
/bethebrew 16#05d1
/betrafehebrew 16#fb4c
/bhabengali 16#09ad
/bhadeva 16#092d
/bhagujarati 16#0aad
/bhagurmukhi 16#0a2d
/bhook 16#0253
/bihiragana 16#3073
/bikatakana 16#30d3
/bilabialclick 16#0298
/bindigurmukhi 16#0a02
/birusquare 16#3331
/blackcircle 16#25cf
/blackdiamond 16#25c6
/blackdownpointingtriangle 16#25bc
/blackleftpointingpointer 16#25c4
/blackleftpointingtriangle 16#25c0
/blacklenticularbracketleft 16#3010
/blacklenticularbracketleftvertical 16#fe3b
/blacklenticularbracketright 16#3011
/blacklenticularbracketrightvertical 16#fe3c
/blacklowerlefttriangle 16#25e3
/blacklowerrighttriangle 16#25e2
/blackrectangle 16#25ac
/blackrightpointingpointer 16#25ba
/blackrightpointingtriangle 16#25b6
/blacksmallsquare 16#25aa
/blacksmilingface 16#263b
/blacksquare 16#25a0
/blackstar 16#2605
/blackupperlefttriangle 16#25e4
/blackupperrighttriangle 16#25e5
/blackuppointingsmalltriangle 16#25b4
/blackuppointingtriangle 16#25b2
/blank 16#2423
/blinebelow 16#1e07
/block 16#2588
/bmonospace 16#ff42
/bobaimaithai 16#0e1a
/bohiragana 16#307c
/bokatakana 16#30dc
/bparen 16#249d
/bqsquare 16#33c3
/braceex 16#f8f4
/braceleft 16#007b
/braceleftbt 16#f8f3
/braceleftmid 16#f8f2
/braceleftmonospace 16#ff5b
/braceleftsmall 16#fe5b
/bracelefttp 16#f8f1
/braceleftvertical 16#fe37
/braceright 16#007d
/bracerightbt 16#f8fe
/bracerightmid 16#f8fd
/bracerightmonospace 16#ff5d
/bracerightsmall 16#fe5c
/bracerighttp 16#f8fc
/bracerightvertical 16#fe38
/bracketleft 16#005b
/bracketleftbt 16#f8f0
/bracketleftex 16#f8ef
/bracketleftmonospace 16#ff3b
/bracketlefttp 16#f8ee
/bracketright 16#005d
/bracketrightbt 16#f8fb
/bracketrightex 16#f8fa
/bracketrightmonospace 16#ff3d
/bracketrighttp 16#f8f9
/breve 16#02d8
/brevebelowcmb 16#032e
/brevecmb 16#0306
/breveinvertedbelowcmb 16#032f
/breveinvertedcmb 16#0311
/breveinverteddoublecmb 16#0361
/bridgebelowcmb 16#032a
/bridgeinvertedbelowcmb 16#033a
/brokenbar 16#00a6
/bstroke 16#0180
/bsuperior 16#f6ea
/btopbar 16#0183
/buhiragana 16#3076
/bukatakana 16#30d6
/bullet 16#2022
/bulletinverse 16#25d8
/bulletoperator 16#2219
/bullseye 16#25ce
/c 16#0063
/caarmenian 16#056e
/cabengali 16#099a
/cacute 16#0107
/cadeva 16#091a
/cagujarati 16#0a9a
/cagurmukhi 16#0a1a
/calsquare 16#3388
/candrabindubengali 16#0981
/candrabinducmb 16#0310
/candrabindudeva 16#0901
/candrabindugujarati 16#0a81
/capslock 16#21ea
/careof 16#2105
/caron 16#02c7
/caronbelowcmb 16#032c
/caroncmb 16#030c
/carriagereturn 16#21b5
/cbopomofo 16#3118
/ccaron 16#010d
/ccedilla 16#00e7
/ccedillaacute 16#1e09
/ccircle 16#24d2
/ccircumflex 16#0109
/ccurl 16#0255
/cdot 16#010b
/cdotaccent 16#010b
/cdsquare 16#33c5
/cedilla 16#00b8
/cedillacmb 16#0327
/cent 16#00a2
/centigrade 16#2103
/centinferior 16#f6df
/centmonospace 16#ffe0
/centoldstyle 16#f7a2
/centsuperior 16#f6e0
/chaarmenian 16#0579
/chabengali 16#099b
/chadeva 16#091b
/chagujarati 16#0a9b
/chagurmukhi 16#0a1b
/chbopomofo 16#3114
/cheabkhasiancyrillic 16#04bd
/checkmark 16#2713
/checyrillic 16#0447
/chedescenderabkhasiancyrillic 16#04bf
/chedescendercyrillic 16#04b7
/chedieresiscyrillic 16#04f5
/cheharmenian 16#0573
/chekhakassiancyrillic 16#04cc
/cheverticalstrokecyrillic 16#04b9
/chi 16#03c7
/chieuchacirclekorean 16#3277
/chieuchaparenkorean 16#3217
/chieuchcirclekorean 16#3269
/chieuchkorean 16#314a
/chieuchparenkorean 16#3209
/chochangthai 16#0e0a
/chochanthai 16#0e08
/chochingthai 16#0e09
/chochoethai 16#0e0c
/chook 16#0188
/cieucacirclekorean 16#3276
/cieucaparenkorean 16#3216
/cieuccirclekorean 16#3268
/cieuckorean 16#3148
/cieucparenkorean 16#3208
/cieucuparenkorean 16#321c
/circle 16#25cb
/circlemultiply 16#2297
/circleot 16#2299
/circleplus 16#2295
/circlepostalmark 16#3036
/circlewithlefthalfblack 16#25d0
/circlewithrighthalfblack 16#25d1
/circumflex 16#02c6
/circumflexbelowcmb 16#032d
/circumflexcmb 16#0302
/clear 16#2327
/clickalveolar 16#01c2
/clickdental 16#01c0
/clicklateral 16#01c1
/clickretroflex 16#01c3
/club 16#2663
/clubsuitblack 16#2663
/clubsuitwhite 16#2667
/cmcubedsquare 16#33a4
/cmonospace 16#ff43
/cmsquaredsquare 16#33a0
/coarmenian 16#0581
/colon 16#003a
/colonmonetary 16#20a1
/colonmonospace 16#ff1a
/colonsign 16#20a1
/colonsmall 16#fe55
/colontriangularhalfmod 16#02d1
/colontriangularmod 16#02d0
/comma 16#002c
/commaabovecmb 16#0313
/commaaboverightcmb 16#0315
/commaaccent 16#f6c3
/commaarabic 16#060c
/commaarmenian 16#055d
/commainferior 16#f6e1
/commamonospace 16#ff0c
/commareversedabovecmb 16#0314
/commareversedmod 16#02bd
/commasmall 16#fe50
/commasuperior 16#f6e2
/commaturnedabovecmb 16#0312
/commaturnedmod 16#02bb
/compass 16#263c
/congruent 16#2245
/contourintegral 16#222e
/control 16#2303
/controlACK 16#0006
/controlBEL 16#0007
/controlBS 16#0008
/controlCAN 16#0018
/controlCR 16#000d
/controlDC1 16#0011
/controlDC2 16#0012
/controlDC3 16#0013
/controlDC4 16#0014
/controlDEL 16#007f
/controlDLE 16#0010
/controlEM 16#0019
/controlENQ 16#0005
/controlEOT 16#0004
/controlESC 16#001b
/controlETB 16#0017
/controlETX 16#0003
/controlFF 16#000c
/controlFS 16#001c
/controlGS 16#001d
/controlHT 16#0009
/controlLF 16#000a
/controlNAK 16#0015
/controlRS 16#001e
/controlSI 16#000f
/controlSO 16#000e
/controlSOT 16#0002
/controlSTX 16#0001
/controlSUB 16#001a
/controlSYN 16#0016
/controlUS 16#001f
/controlVT 16#000b
/copyright 16#00a9
/copyrightsans 16#f8e9
/copyrightserif 16#f6d9
/cornerbracketleft 16#300c
/cornerbracketlefthalfwidth 16#ff62
/cornerbracketleftvertical 16#fe41
/cornerbracketright 16#300d
/cornerbracketrighthalfwidth 16#ff63
/cornerbracketrightvertical 16#fe42
/corporationsquare 16#337f
/cosquare 16#33c7
/coverkgsquare 16#33c6
/cparen 16#249e
/cruzeiro 16#20a2
/cstretched 16#0297
/curlyand 16#22cf
/curlyor 16#22ce
/currency 16#00a4
/cyrBreve 16#f6d1
/cyrFlex 16#f6d2
/cyrbreve 16#f6d4
/cyrflex 16#f6d5
/d 16#0064
/daarmenian 16#0564
/dabengali 16#09a6
/dadarabic 16#0636
/dadeva 16#0926
/dadfinalarabic 16#febe
/dadinitialarabic 16#febf
/dadmedialarabic 16#fec0
/dagesh 16#05bc
/dageshhebrew 16#05bc
/dagger 16#2020
/daggerdbl 16#2021
/dagujarati 16#0aa6
/dagurmukhi 16#0a26
/dahiragana 16#3060
/dakatakana 16#30c0
/dalarabic 16#062f
/dalet 16#05d3
/daletdagesh 16#fb33
/daletdageshhebrew 16#fb33
/dalethebrew 16#05d3
/dalfinalarabic 16#feaa
/dammaarabic 16#064f
/dammalowarabic 16#064f
/dammatanaltonearabic 16#064c
/dammatanarabic 16#064c
/danda 16#0964
/dargahebrew 16#05a7
/dargalefthebrew 16#05a7
/dasiapneumatacyrilliccmb 16#0485
/dblGrave 16#f6d3
/dblanglebracketleft 16#300a
/dblanglebracketleftvertical 16#fe3d
/dblanglebracketright 16#300b
/dblanglebracketrightvertical 16#fe3e
/dblarchinvertedbelowcmb 16#032b
/dblarrowleft 16#21d4
/dblarrowright 16#21d2
/dbldanda 16#0965
/dblgrave 16#f6d6
/dblgravecmb 16#030f
/dblintegral 16#222c
/dbllowline 16#2017
/dbllowlinecmb 16#0333
/dbloverlinecmb 16#033f
/dblprimemod 16#02ba
/dblverticalbar 16#2016
/dblverticallineabovecmb 16#030e
/dbopomofo 16#3109
/dbsquare 16#33c8
/dcaron 16#010f
/dcedilla 16#1e11
/dcircle 16#24d3
/dcircumflexbelow 16#1e13
/dcroat 16#0111
/ddabengali 16#09a1
/ddadeva 16#0921
/ddagujarati 16#0aa1
/ddagurmukhi 16#0a21
/ddalarabic 16#0688
/ddalfinalarabic 16#fb89
/dddhadeva 16#095c
/ddhabengali 16#09a2
/ddhadeva 16#0922
/ddhagujarati 16#0aa2
/ddhagurmukhi 16#0a22
/ddotaccent 16#1e0b
/ddotbelow 16#1e0d
/decimalseparatorarabic 16#066b
/decimalseparatorpersian 16#066b
/decyrillic 16#0434
/degree 16#00b0
/dehihebrew 16#05ad
/dehiragana 16#3067
/deicoptic 16#03ef
/dekatakana 16#30c7
/deleteleft 16#232b
/deleteright 16#2326
/delta 16#03b4
/deltaturned 16#018d
/denominatorminusonenumeratorbengali 16#09f8
/dezh 16#02a4
/dhabengali 16#09a7
/dhadeva 16#0927
/dhagujarati 16#0aa7
/dhagurmukhi 16#0a27
/dhook 16#0257
/dialytikatonos 16#0385
/dialytikatonoscmb 16#0344
/diamond 16#2666
/diamondsuitwhite 16#2662
/dieresis 16#00a8
/dieresisacute 16#f6d7
/dieresisbelowcmb 16#0324
/dieresiscmb 16#0308
/dieresisgrave 16#f6d8
/dieresistonos 16#0385
/dihiragana 16#3062
/dikatakana 16#30c2
/dittomark 16#3003
/divide 16#00f7
/divides 16#2223
/divisionslash 16#2215
/djecyrillic 16#0452
/dkshade 16#2593
/dlinebelow 16#1e0f
/dlsquare 16#3397
/dmacron 16#0111
/dmonospace 16#ff44
/dnblock 16#2584
/dochadathai 16#0e0e
/dodekthai 16#0e14
/dohiragana 16#3069
/dokatakana 16#30c9
/dollar 16#0024
/dollarinferior 16#f6e3
/dollarmonospace 16#ff04
/dollaroldstyle 16#f724
/dollarsmall 16#fe69
/dollarsuperior 16#f6e4
/dong 16#20ab
/dorusquare 16#3326
/dotaccent 16#02d9
/dotaccentcmb 16#0307
/dotbelowcmb 16#0323
/dotbelowcomb 16#0323
/dotkatakana 16#30fb
/dotlessi 16#0131
/dotlessj 16#f6be
/dotlessjstrokehook 16#0284
/dotmath 16#22c5
/dottedcircle 16#25cc
/doubleyodpatah 16#fb1f
/doubleyodpatahhebrew 16#fb1f
/downtackbelowcmb 16#031e
/downtackmod 16#02d5
/dparen 16#249f
/dsuperior 16#f6eb
/dtail 16#0256
/dtopbar 16#018c
/duhiragana 16#3065
/dukatakana 16#30c5
/dz 16#01f3
/dzaltone 16#02a3
/dzcaron 16#01c6
/dzcurl 16#02a5
/dzeabkhasiancyrillic 16#04e1
/dzecyrillic 16#0455
/dzhecyrillic 16#045f
/e 16#0065
/eacute 16#00e9
/earth 16#2641
/ebengali 16#098f
/ebopomofo 16#311c
/ebreve 16#0115
/ecandradeva 16#090d
/ecandragujarati 16#0a8d
/ecandravowelsigndeva 16#0945
/ecandravowelsigngujarati 16#0ac5
/ecaron 16#011b
/ecedillabreve 16#1e1d
/echarmenian 16#0565
/echyiwnarmenian 16#0587
/ecircle 16#24d4
/ecircumflex 16#00ea
/ecircumflexacute 16#1ebf
/ecircumflexbelow 16#1e19
/ecircumflexdotbelow 16#1ec7
/ecircumflexgrave 16#1ec1
/ecircumflexhookabove 16#1ec3
/ecircumflextilde 16#1ec5
/ecyrillic 16#0454
/edblgrave 16#0205
/edeva 16#090f
/edieresis 16#00eb
/edot 16#0117
/edotaccent 16#0117
/edotbelow 16#1eb9
/eegurmukhi 16#0a0f
/eematragurmukhi 16#0a47
/efcyrillic 16#0444
/egrave 16#00e8
/egujarati 16#0a8f
/eharmenian 16#0567
/ehbopomofo 16#311d
/ehiragana 16#3048
/ehookabove 16#1ebb
/eibopomofo 16#311f
/eight 16#0038
/eightarabic 16#0668
/eightbengali 16#09ee
/eightcircle 16#2467
/eightcircleinversesansserif 16#2791
/eightdeva 16#096e
/eighteencircle 16#2471
/eighteenparen 16#2485
/eighteenperiod 16#2499
/eightgujarati 16#0aee
/eightgurmukhi 16#0a6e
/eighthackarabic 16#0668
/eighthangzhou 16#3028
/eighthnotebeamed 16#266b
/eightideographicparen 16#3227
/eightinferior 16#2088
/eightmonospace 16#ff18
/eightoldstyle 16#f738
/eightparen 16#247b
/eightperiod 16#248f
/eightpersian 16#06f8
/eightroman 16#2177
/eightsuperior 16#2078
/eightthai 16#0e58
/einvertedbreve 16#0207
/eiotifiedcyrillic 16#0465
/ekatakana 16#30a8
/ekatakanahalfwidth 16#ff74
/ekonkargurmukhi 16#0a74
/ekorean 16#3154
/elcyrillic 16#043b
/element 16#2208
/elevencircle 16#246a
/elevenparen 16#247e
/elevenperiod 16#2492
/elevenroman 16#217a
/ellipsis 16#2026
/ellipsisvertical 16#22ee
/emacron 16#0113
/emacronacute 16#1e17
/emacrongrave 16#1e15
/emcyrillic 16#043c
/emdash 16#2014
/emdashvertical 16#fe31
/emonospace 16#ff45
/emphasismarkarmenian 16#055b
/emptyset 16#2205
/enbopomofo 16#3123
/encyrillic 16#043d
/endash 16#2013
/endashvertical 16#fe32
/endescendercyrillic 16#04a3
/eng 16#014b
/engbopomofo 16#3125
/enghecyrillic 16#04a5
/enhookcyrillic 16#04c8
/enspace 16#2002
/eogonek 16#0119
/eokorean 16#3153
/eopen 16#025b
/eopenclosed 16#029a
/eopenreversed 16#025c
/eopenreversedclosed 16#025e
/eopenreversedhook 16#025d
/eparen 16#24a0
/epsilon 16#03b5
/epsilontonos 16#03ad
/equal 16#003d
/equalmonospace 16#ff1d
/equalsmall 16#fe66
/equalsuperior 16#207c
/equivalence 16#2261
/erbopomofo 16#3126
/ercyrillic 16#0440
/ereversed 16#0258
/ereversedcyrillic 16#044d
/escyrillic 16#0441
/esdescendercyrillic 16#04ab
/esh 16#0283
/eshcurl 16#0286
/eshortdeva 16#090e
/eshortvowelsigndeva 16#0946
/eshreversedloop 16#01aa
/eshsquatreversed 16#0285
/esmallhiragana 16#3047
/esmallkatakana 16#30a7
/esmallkatakanahalfwidth 16#ff6a
/estimated 16#212e
/esuperior 16#f6ec
/eta 16#03b7
/etarmenian 16#0568
/etatonos 16#03ae
/eth 16#00f0
/etilde 16#1ebd
/etildebelow 16#1e1b
/etnahtafoukhhebrew 16#0591
/etnahtafoukhlefthebrew 16#0591
/etnahtahebrew 16#0591
/etnahtalefthebrew 16#0591
/eturned 16#01dd
/eukorean 16#3161
/euro 16#20ac
/evowelsignbengali 16#09c7
/evowelsigndeva 16#0947
/evowelsigngujarati 16#0ac7
/exclam 16#0021
/exclamarmenian 16#055c
/exclamdbl 16#203c
/exclamdown 16#00a1
/exclamdownsmall 16#f7a1
/exclammonospace 16#ff01
/exclamsmall 16#f721
/existential 16#2203
/ezh 16#0292
/ezhcaron 16#01ef
/ezhcurl 16#0293
/ezhreversed 16#01b9
/ezhtail 16#01ba
/f 16#0066
/fadeva 16#095e
/fagurmukhi 16#0a5e
/fahrenheit 16#2109
/fathaarabic 16#064e
/fathalowarabic 16#064e
/fathatanarabic 16#064b
/fbopomofo 16#3108
/fcircle 16#24d5
/fdotaccent 16#1e1f
/feharabic 16#0641
/feharmenian 16#0586
/fehfinalarabic 16#fed2
/fehinitialarabic 16#fed3
/fehmedialarabic 16#fed4
/feicoptic 16#03e5
/female 16#2640
/ff 16#fb00
/ffi 16#fb03
/ffl 16#fb04
/fi 16#fb01
/fifteencircle 16#246e
/fifteenparen 16#2482
/fifteenperiod 16#2496
/figuredash 16#2012
/filledbox 16#25a0
/filledrect 16#25ac
/finalkaf 16#05da
/finalkafdagesh 16#fb3a
/finalkafdageshhebrew 16#fb3a
/finalkafhebrew 16#05da
/finalmem 16#05dd
/finalmemhebrew 16#05dd
/finalnun 16#05df
/finalnunhebrew 16#05df
/finalpe 16#05e3
/finalpehebrew 16#05e3
/finaltsadi 16#05e5
/finaltsadihebrew 16#05e5
/firsttonechinese 16#02c9
/fisheye 16#25c9
/fitacyrillic 16#0473
/five 16#0035
/fivearabic 16#0665
/fivebengali 16#09eb
/fivecircle 16#2464
/fivecircleinversesansserif 16#278e
/fivedeva 16#096b
/fiveeighths 16#215d
/fivegujarati 16#0aeb
/fivegurmukhi 16#0a6b
/fivehackarabic 16#0665
/fivehangzhou 16#3025
/fiveideographicparen 16#3224
/fiveinferior 16#2085
/fivemonospace 16#ff15
/fiveoldstyle 16#f735
/fiveparen 16#2478
/fiveperiod 16#248c
/fivepersian 16#06f5
/fiveroman 16#2174
/fivesuperior 16#2075
/fivethai 16#0e55
/fl 16#fb02
/florin 16#0192
/fmonospace 16#ff46
/fmsquare 16#3399
/fofanthai 16#0e1f
/fofathai 16#0e1d
/fongmanthai 16#0e4f
/forall 16#2200
/four 16#0034
/fourarabic 16#0664
/fourbengali 16#09ea
/fourcircle 16#2463
/fourcircleinversesansserif 16#278d
/fourdeva 16#096a
/fourgujarati 16#0aea
/fourgurmukhi 16#0a6a
/fourhackarabic 16#0664
/fourhangzhou 16#3024
/fourideographicparen 16#3223
/fourinferior 16#2084
/fourmonospace 16#ff14
/fournumeratorbengali 16#09f7
/fouroldstyle 16#f734
/fourparen 16#2477
/fourperiod 16#248b
/fourpersian 16#06f4
/fourroman 16#2173
/foursuperior 16#2074
/fourteencircle 16#246d
/fourteenparen 16#2481
/fourteenperiod 16#2495
/fourthai 16#0e54
/fourthtonechinese 16#02cb
/fparen 16#24a1
/fraction 16#2044
/franc 16#20a3
/g 16#0067
/gabengali 16#0997
/gacute 16#01f5
/gadeva 16#0917
/gafarabic 16#06af
/gaffinalarabic 16#fb93
/gafinitialarabic 16#fb94
/gafmedialarabic 16#fb95
/gagujarati 16#0a97
/gagurmukhi 16#0a17
/gahiragana 16#304c
/gakatakana 16#30ac
/gamma 16#03b3
/gammalatinsmall 16#0263
/gammasuperior 16#02e0
/gangiacoptic 16#03eb
/gbopomofo 16#310d
/gbreve 16#011f
/gcaron 16#01e7
/gcedilla 16#0123
/gcircle 16#24d6
/gcircumflex 16#011d
/gcommaaccent 16#0123
/gdot 16#0121
/gdotaccent 16#0121
/gecyrillic 16#0433
/gehiragana 16#3052
/gekatakana 16#30b2
/geometricallyequal 16#2251
/gereshaccenthebrew 16#059c
/gereshhebrew 16#05f3
/gereshmuqdamhebrew 16#059d
/germandbls 16#00df
/gershayimaccenthebrew 16#059e
/gershayimhebrew 16#05f4
/getamark 16#3013
/ghabengali 16#0998
/ghadarmenian 16#0572
/ghadeva 16#0918
/ghagujarati 16#0a98
/ghagurmukhi 16#0a18
/ghainarabic 16#063a
/ghainfinalarabic 16#fece
/ghaininitialarabic 16#fecf
/ghainmedialarabic 16#fed0
/ghemiddlehookcyrillic 16#0495
/ghestrokecyrillic 16#0493
/gheupturncyrillic 16#0491
/ghhadeva 16#095a
/ghhagurmukhi 16#0a5a
/ghook 16#0260
/ghzsquare 16#3393
/gihiragana 16#304e
/gikatakana 16#30ae
/gimarmenian 16#0563
/gimel 16#05d2
/gimeldagesh 16#fb32
/gimeldageshhebrew 16#fb32
/gimelhebrew 16#05d2
/gjecyrillic 16#0453
/glottalinvertedstroke 16#01be
/glottalstop 16#0294
/glottalstopinverted 16#0296
/glottalstopmod 16#02c0
/glottalstopreversed 16#0295
/glottalstopreversedmod 16#02c1
/glottalstopreversedsuperior 16#02e4
/glottalstopstroke 16#02a1
/glottalstopstrokereversed 16#02a2
/gmacron 16#1e21
/gmonospace 16#ff47
/gohiragana 16#3054
/gokatakana 16#30b4
/gparen 16#24a2
/gpasquare 16#33ac
/gradient 16#2207
/grave 16#0060
/gravebelowcmb 16#0316
/gravecmb 16#0300
/gravecomb 16#0300
/gravedeva 16#0953
/gravelowmod 16#02ce
/gravemonospace 16#ff40
/gravetonecmb 16#0340
/greater 16#003e
/greaterequal 16#2265
/greaterequalorless 16#22db
/greatermonospace 16#ff1e
/greaterorequivalent 16#2273
/greaterorless 16#2277
/greateroverequal 16#2267
/greatersmall 16#fe65
/gscript 16#0261
/gstroke 16#01e5
/guhiragana 16#3050
/guillemotleft 16#00ab
/guillemotright 16#00bb
/guilsinglleft 16#2039
/guilsinglright 16#203a
/gukatakana 16#30b0
/guramusquare 16#3318
/gysquare 16#33c9
/h 16#0068
/haabkhasiancyrillic 16#04a9
/haaltonearabic 16#06c1
/habengali 16#09b9
/hadescendercyrillic 16#04b3
/hadeva 16#0939
/hagujarati 16#0ab9
/hagurmukhi 16#0a39
/haharabic 16#062d
/hahfinalarabic 16#fea2
/hahinitialarabic 16#fea3
/hahiragana 16#306f
/hahmedialarabic 16#fea4
/haitusquare 16#332a
/hakatakana 16#30cf
/hakatakanahalfwidth 16#ff8a
/halantgurmukhi 16#0a4d
/hamzaarabic 16#0621
/hamzalowarabic 16#0621
/hangulfiller 16#3164
/hardsigncyrillic 16#044a
/harpoonleftbarbup 16#21bc
/harpoonrightbarbup 16#21c0
/hasquare 16#33ca
/hatafpatah 16#05b2
/hatafpatah16 16#05b2
/hatafpatah23 16#05b2
/hatafpatah2f 16#05b2
/hatafpatahhebrew 16#05b2
/hatafpatahnarrowhebrew 16#05b2
/hatafpatahquarterhebrew 16#05b2
/hatafpatahwidehebrew 16#05b2
/hatafqamats 16#05b3
/hatafqamats1b 16#05b3
/hatafqamats28 16#05b3
/hatafqamats34 16#05b3
/hatafqamatshebrew 16#05b3
/hatafqamatsnarrowhebrew 16#05b3
/hatafqamatsquarterhebrew 16#05b3
/hatafqamatswidehebrew 16#05b3
/hatafsegol 16#05b1
/hatafsegol17 16#05b1
/hatafsegol24 16#05b1
/hatafsegol30 16#05b1
/hatafsegolhebrew 16#05b1
/hatafsegolnarrowhebrew 16#05b1
/hatafsegolquarterhebrew 16#05b1
/hatafsegolwidehebrew 16#05b1
/hbar 16#0127
/hbopomofo 16#310f
/hbrevebelow 16#1e2b
/hcedilla 16#1e29
/hcircle 16#24d7
/hcircumflex 16#0125
/hdieresis 16#1e27
/hdotaccent 16#1e23
/hdotbelow 16#1e25
/he 16#05d4
/heart 16#2665
/heartsuitblack 16#2665
/heartsuitwhite 16#2661
/hedagesh 16#fb34
/hedageshhebrew 16#fb34
/hehaltonearabic 16#06c1
/heharabic 16#0647
/hehebrew 16#05d4
/hehfinalaltonearabic 16#fba7
/hehfinalalttwoarabic 16#feea
/hehfinalarabic 16#feea
/hehhamzaabovefinalarabic 16#fba5
/hehhamzaaboveisolatedarabic 16#fba4
/hehinitialaltonearabic 16#fba8
/hehinitialarabic 16#feeb
/hehiragana 16#3078
/hehmedialaltonearabic 16#fba9
/hehmedialarabic 16#feec
/heiseierasquare 16#337b
/hekatakana 16#30d8
/hekatakanahalfwidth 16#ff8d
/hekutaarusquare 16#3336
/henghook 16#0267
/herutusquare 16#3339
/het 16#05d7
/hethebrew 16#05d7
/hhook 16#0266
/hhooksuperior 16#02b1
/hieuhacirclekorean 16#327b
/hieuhaparenkorean 16#321b
/hieuhcirclekorean 16#326d
/hieuhkorean 16#314e
/hieuhparenkorean 16#320d
/hihiragana 16#3072
/hikatakana 16#30d2
/hikatakanahalfwidth 16#ff8b
/hiriq 16#05b4
/hiriq14 16#05b4
/hiriq21 16#05b4
/hiriq2d 16#05b4
/hiriqhebrew 16#05b4
/hiriqnarrowhebrew 16#05b4
/hiriqquarterhebrew 16#05b4
/hiriqwidehebrew 16#05b4
/hlinebelow 16#1e96
/hmonospace 16#ff48
/hoarmenian 16#0570
/hohipthai 16#0e2b
/hohiragana 16#307b
/hokatakana 16#30db
/hokatakanahalfwidth 16#ff8e
/holam 16#05b9
/holam19 16#05b9
/holam26 16#05b9
/holam32 16#05b9
/holamhebrew 16#05b9
/holamnarrowhebrew 16#05b9
/holamquarterhebrew 16#05b9
/holamwidehebrew 16#05b9
/honokhukthai 16#0e2e
/hookabovecomb 16#0309
/hookcmb 16#0309
/hookpalatalizedbelowcmb 16#0321
/hookretroflexbelowcmb 16#0322
/hoonsquare 16#3342
/horicoptic 16#03e9
/horizontalbar 16#2015
/horncmb 16#031b
/hotsprings 16#2668
/house 16#2302
/hparen 16#24a3
/hsuperior 16#02b0
/hturned 16#0265
/huhiragana 16#3075
/huiitosquare 16#3333
/hukatakana 16#30d5
/hukatakanahalfwidth 16#ff8c
/hungarumlaut 16#02dd
/hungarumlautcmb 16#030b
/hv 16#0195
/hyphen 16#002d
/hypheninferior 16#f6e5
/hyphenmonospace 16#ff0d
/hyphensmall 16#fe63
/hyphensuperior 16#f6e6
/hyphentwo 16#2010
/i 16#0069
/iacute 16#00ed
/iacyrillic 16#044f
/ibengali 16#0987
/ibopomofo 16#3127
/ibreve 16#012d
/icaron 16#01d0
/icircle 16#24d8
/icircumflex 16#00ee
/icyrillic 16#0456
/idblgrave 16#0209
/ideographearthcircle 16#328f
/ideographfirecircle 16#328b
/ideographicallianceparen 16#323f
/ideographiccallparen 16#323a
/ideographiccentrecircle 16#32a5
/ideographicclose 16#3006
/ideographiccomma 16#3001
/ideographiccommaleft 16#ff64
/ideographiccongratulationparen 16#3237
/ideographiccorrectcircle 16#32a3
/ideographicearthparen 16#322f
/ideographicenterpriseparen 16#323d
/ideographicexcellentcircle 16#329d
/ideographicfestivalparen 16#3240
/ideographicfinancialcircle 16#3296
/ideographicfinancialparen 16#3236
/ideographicfireparen 16#322b
/ideographichaveparen 16#3232
/ideographichighcircle 16#32a4
/ideographiciterationmark 16#3005
/ideographiclaborcircle 16#3298
/ideographiclaborparen 16#3238
/ideographicleftcircle 16#32a7
/ideographiclowcircle 16#32a6
/ideographicmedicinecircle 16#32a9
/ideographicmetalparen 16#322e
/ideographicmoonparen 16#322a
/ideographicnameparen 16#3234
/ideographicperiod 16#3002
/ideographicprintcircle 16#329e
/ideographicreachparen 16#3243
/ideographicrepresentparen 16#3239
/ideographicresourceparen 16#323e
/ideographicrightcircle 16#32a8
/ideographicsecretcircle 16#3299
/ideographicselfparen 16#3242
/ideographicsocietyparen 16#3233
/ideographicspace 16#3000
/ideographicspecialparen 16#3235
/ideographicstockparen 16#3231
/ideographicstudyparen 16#323b
/ideographicsunparen 16#3230
/ideographicsuperviseparen 16#323c
/ideographicwaterparen 16#322c
/ideographicwoodparen 16#322d
/ideographiczero 16#3007
/ideographmetalcircle 16#328e
/ideographmooncircle 16#328a
/ideographnamecircle 16#3294
/ideographsuncircle 16#3290
/ideographwatercircle 16#328c
/ideographwoodcircle 16#328d
/ideva 16#0907
/idieresis 16#00ef
/idieresisacute 16#1e2f
/idieresiscyrillic 16#04e5
/idotbelow 16#1ecb
/iebrevecyrillic 16#04d7
/iecyrillic 16#0435
/ieungacirclekorean 16#3275
/ieungaparenkorean 16#3215
/ieungcirclekorean 16#3267
/ieungkorean 16#3147
/ieungparenkorean 16#3207
/igrave 16#00ec
/igujarati 16#0a87
/igurmukhi 16#0a07
/ihiragana 16#3044
/ihookabove 16#1ec9
/iibengali 16#0988
/iicyrillic 16#0438
/iideva 16#0908
/iigujarati 16#0a88
/iigurmukhi 16#0a08
/iimatragurmukhi 16#0a40
/iinvertedbreve 16#020b
/iishortcyrillic 16#0439
/iivowelsignbengali 16#09c0
/iivowelsigndeva 16#0940
/iivowelsigngujarati 16#0ac0
/ij 16#0133
/ikatakana 16#30a4
/ikatakanahalfwidth 16#ff72
/ikorean 16#3163
/ilde 16#02dc
/iluyhebrew 16#05ac
/imacron 16#012b
/imacroncyrillic 16#04e3
/imageorapproximatelyequal 16#2253
/imatragurmukhi 16#0a3f
/imonospace 16#ff49
/increment 16#2206
/infinity 16#221e
/iniarmenian 16#056b
/integral 16#222b
/integralbottom 16#2321
/integralbt 16#2321
/integralex 16#f8f5
/integraltop 16#2320
/integraltp 16#2320
/intersection 16#2229
/intisquare 16#3305
/invbullet 16#25d8
/invcircle 16#25d9
/invsmileface 16#263b
/iocyrillic 16#0451
/iogonek 16#012f
/iota 16#03b9
/iotadieresis 16#03ca
/iotadieresistonos 16#0390
/iotalatin 16#0269
/iotatonos 16#03af
/iparen 16#24a4
/irigurmukhi 16#0a72
/ismallhiragana 16#3043
/ismallkatakana 16#30a3
/ismallkatakanahalfwidth 16#ff68
/issharbengali 16#09fa
/istroke 16#0268
/isuperior 16#f6ed
/iterationhiragana 16#309d
/iterationkatakana 16#30fd
/itilde 16#0129
/itildebelow 16#1e2d
/iubopomofo 16#3129
/iucyrillic 16#044e
/ivowelsignbengali 16#09bf
/ivowelsigndeva 16#093f
/ivowelsigngujarati 16#0abf
/izhitsacyrillic 16#0475
/izhitsadblgravecyrillic 16#0477
/j 16#006a
/jaarmenian 16#0571
/jabengali 16#099c
/jadeva 16#091c
/jagujarati 16#0a9c
/jagurmukhi 16#0a1c
/jbopomofo 16#3110
/jcaron 16#01f0
/jcircle 16#24d9
/jcircumflex 16#0135
/jcrossedtail 16#029d
/jdotlessstroke 16#025f
/jecyrillic 16#0458
/jeemarabic 16#062c
/jeemfinalarabic 16#fe9e
/jeeminitialarabic 16#fe9f
/jeemmedialarabic 16#fea0
/jeharabic 16#0698
/jehfinalarabic 16#fb8b
/jhabengali 16#099d
/jhadeva 16#091d
/jhagujarati 16#0a9d
/jhagurmukhi 16#0a1d
/jheharmenian 16#057b
/jis 16#3004
/jmonospace 16#ff4a
/jparen 16#24a5
/jsuperior 16#02b2
/k 16#006b
/kabashkircyrillic 16#04a1
/kabengali 16#0995
/kacute 16#1e31
/kacyrillic 16#043a
/kadescendercyrillic 16#049b
/kadeva 16#0915
/kaf 16#05db
/kafarabic 16#0643
/kafdagesh 16#fb3b
/kafdageshhebrew 16#fb3b
/kaffinalarabic 16#feda
/kafhebrew 16#05db
/kafinitialarabic 16#fedb
/kafmedialarabic 16#fedc
/kafrafehebrew 16#fb4d
/kagujarati 16#0a95
/kagurmukhi 16#0a15
/kahiragana 16#304b
/kahookcyrillic 16#04c4
/kakatakana 16#30ab
/kakatakanahalfwidth 16#ff76
/kappa 16#03ba
/kappasymbolgreek 16#03f0
/kapyeounmieumkorean 16#3171
/kapyeounphieuphkorean 16#3184
/kapyeounpieupkorean 16#3178
/kapyeounssangpieupkorean 16#3179
/karoriisquare 16#330d
/kashidaautoarabic 16#0640
/kashidaautonosidebearingarabic 16#0640
/kasmallkatakana 16#30f5
/kasquare 16#3384
/kasraarabic 16#0650
/kasratanarabic 16#064d
/kastrokecyrillic 16#049f
/katahiraprolongmarkhalfwidth 16#ff70
/kaverticalstrokecyrillic 16#049d
/kbopomofo 16#310e
/kcalsquare 16#3389
/kcaron 16#01e9
/kcedilla 16#0137
/kcircle 16#24da
/kcommaaccent 16#0137
/kdotbelow 16#1e33
/keharmenian 16#0584
/kehiragana 16#3051
/kekatakana 16#30b1
/kekatakanahalfwidth 16#ff79
/kenarmenian 16#056f
/kesmallkatakana 16#30f6
/kgreenlandic 16#0138
/khabengali 16#0996
/khacyrillic 16#0445
/khadeva 16#0916
/khagujarati 16#0a96
/khagurmukhi 16#0a16
/khaharabic 16#062e
/khahfinalarabic 16#fea6
/khahinitialarabic 16#fea7
/khahmedialarabic 16#fea8
/kheicoptic 16#03e7
/khhadeva 16#0959
/khhagurmukhi 16#0a59
/khieukhacirclekorean 16#3278
/khieukhaparenkorean 16#3218
/khieukhcirclekorean 16#326a
/khieukhkorean 16#314b
/khieukhparenkorean 16#320a
/khokhaithai 16#0e02
/khokhonthai 16#0e05
/khokhuatthai 16#0e03
/khokhwaithai 16#0e04
/khomutthai 16#0e5b
/khook 16#0199
/khorakhangthai 16#0e06
/khzsquare 16#3391
/kihiragana 16#304d
/kikatakana 16#30ad
/kikatakanahalfwidth 16#ff77
/kiroguramusquare 16#3315
/kiromeetorusquare 16#3316
/kirosquare 16#3314
/kiyeokacirclekorean 16#326e
/kiyeokaparenkorean 16#320e
/kiyeokcirclekorean 16#3260
/kiyeokkorean 16#3131
/kiyeokparenkorean 16#3200
/kiyeoksioskorean 16#3133
/kjecyrillic 16#045c
/klinebelow 16#1e35
/klsquare 16#3398
/kmcubedsquare 16#33a6
/kmonospace 16#ff4b
/kmsquaredsquare 16#33a2
/kohiragana 16#3053
/kohmsquare 16#33c0
/kokaithai 16#0e01
/kokatakana 16#30b3
/kokatakanahalfwidth 16#ff7a
/kooposquare 16#331e
/koppacyrillic 16#0481
/koreanstandardsymbol 16#327f
/koroniscmb 16#0343
/kparen 16#24a6
/kpasquare 16#33aa
/ksicyrillic 16#046f
/ktsquare 16#33cf
/kturned 16#029e
/kuhiragana 16#304f
/kukatakana 16#30af
/kukatakanahalfwidth 16#ff78
/kvsquare 16#33b8
/kwsquare 16#33be
/l 16#006c
/labengali 16#09b2
/lacute 16#013a
/ladeva 16#0932
/lagujarati 16#0ab2
/lagurmukhi 16#0a32
/lakkhangyaothai 16#0e45
/lamaleffinalarabic 16#fefc
/lamalefhamzaabovefinalarabic 16#fef8
/lamalefhamzaaboveisolatedarabic 16#fef7
/lamalefhamzabelowfinalarabic 16#fefa
/lamalefhamzabelowisolatedarabic 16#fef9
/lamalefisolatedarabic 16#fefb
/lamalefmaddaabovefinalarabic 16#fef6
/lamalefmaddaaboveisolatedarabic 16#fef5
/lamarabic 16#0644
/lambda 16#03bb
/lambdastroke 16#019b
/lamed 16#05dc
/lameddagesh 16#fb3c
/lameddageshhebrew 16#fb3c
/lamedhebrew 16#05dc
/lamfinalarabic 16#fede
/lamhahinitialarabic 16#fcca
/laminitialarabic 16#fedf
/lamjeeminitialarabic 16#fcc9
/lamkhahinitialarabic 16#fccb
/lamlamhehisolatedarabic 16#fdf2
/lammedialarabic 16#fee0
/lammeemhahinitialarabic 16#fd88
/lammeeminitialarabic 16#fccc
/largecircle 16#25ef
/lbar 16#019a
/lbelt 16#026c
/lbopomofo 16#310c
/lcaron 16#013e
/lcedilla 16#013c
/lcircle 16#24db
/lcircumflexbelow 16#1e3d
/lcommaaccent 16#013c
/ldot 16#0140
/ldotaccent 16#0140
/ldotbelow 16#1e37
/ldotbelowmacron 16#1e39
/leftangleabovecmb 16#031a
/lefttackbelowcmb 16#0318
/less 16#003c
/lessequal 16#2264
/lessequalorgreater 16#22da
/lessmonospace 16#ff1c
/lessorequivalent 16#2272
/lessorgreater 16#2276
/lessoverequal 16#2266
/lesssmall 16#fe64
/lezh 16#026e
/lfblock 16#258c
/lhookretroflex 16#026d
/lira 16#20a4
/liwnarmenian 16#056c
/lj 16#01c9
/ljecyrillic 16#0459
/ll 16#f6c0
/lladeva 16#0933
/llagujarati 16#0ab3
/llinebelow 16#1e3b
/llladeva 16#0934
/llvocalicbengali 16#09e1
/llvocalicdeva 16#0961
/llvocalicvowelsignbengali 16#09e3
/llvocalicvowelsigndeva 16#0963
/lmiddletilde 16#026b
/lmonospace 16#ff4c
/lmsquare 16#33d0
/lochulathai 16#0e2c
/logicaland 16#2227
/logicalnot 16#00ac
/logicalnotreversed 16#2310
/logicalor 16#2228
/lolingthai 16#0e25
/longs 16#017f
/lowlinecenterline 16#fe4e
/lowlinecmb 16#0332
/lowlinedashed 16#fe4d
/lozenge 16#25ca
/lparen 16#24a7
/lslash 16#0142
/lsquare 16#2113
/lsuperior 16#f6ee
/ltshade 16#2591
/luthai 16#0e26
/lvocalicbengali 16#098c
/lvocalicdeva 16#090c
/lvocalicvowelsignbengali 16#09e2
/lvocalicvowelsigndeva 16#0962
/lxsquare 16#33d3
/m 16#006d
/mabengali 16#09ae
/macron 16#00af
/macronbelowcmb 16#0331
/macroncmb 16#0304
/macronlowmod 16#02cd
/macronmonospace 16#ffe3
/macute 16#1e3f
/madeva 16#092e
/magujarati 16#0aae
/magurmukhi 16#0a2e
/mahapakhhebrew 16#05a4
/mahapakhlefthebrew 16#05a4
/mahiragana 16#307e
/maichattawalowleftthai 16#f895
/maichattawalowrightthai 16#f894
/maichattawathai 16#0e4b
/maichattawaupperleftthai 16#f893
/maieklowleftthai 16#f88c
/maieklowrightthai 16#f88b
/maiekthai 16#0e48
/maiekupperleftthai 16#f88a
/maihanakatleftthai 16#f884
/maihanakatthai 16#0e31
/maitaikhuleftthai 16#f889
/maitaikhuthai 16#0e47
/maitholowleftthai 16#f88f
/maitholowrightthai 16#f88e
/maithothai 16#0e49
/maithoupperleftthai 16#f88d
/maitrilowleftthai 16#f892
/maitrilowrightthai 16#f891
/maitrithai 16#0e4a
/maitriupperleftthai 16#f890
/maiyamokthai 16#0e46
/makatakana 16#30de
/makatakanahalfwidth 16#ff8f
/male 16#2642
/mansyonsquare 16#3347
/maqafhebrew 16#05be
/mars 16#2642
/masoracirclehebrew 16#05af
/masquare 16#3383
/mbopomofo 16#3107
/mbsquare 16#33d4
/mcircle 16#24dc
/mcubedsquare 16#33a5
/mdotaccent 16#1e41
/mdotbelow 16#1e43
/meemarabic 16#0645
/meemfinalarabic 16#fee2
/meeminitialarabic 16#fee3
/meemmedialarabic 16#fee4
/meemmeeminitialarabic 16#fcd1
/meemmeemisolatedarabic 16#fc48
/meetorusquare 16#334d
/mehiragana 16#3081
/meizierasquare 16#337e
/mekatakana 16#30e1
/mekatakanahalfwidth 16#ff92
/mem 16#05de
/memdagesh 16#fb3e
/memdageshhebrew 16#fb3e
/memhebrew 16#05de
/menarmenian 16#0574
/merkhahebrew 16#05a5
/merkhakefulahebrew 16#05a6
/merkhakefulalefthebrew 16#05a6
/merkhalefthebrew 16#05a5
/mhook 16#0271
/mhzsquare 16#3392
/middledotkatakanahalfwidth 16#ff65
/middot 16#00b7
/mieumacirclekorean 16#3272
/mieumaparenkorean 16#3212
/mieumcirclekorean 16#3264
/mieumkorean 16#3141
/mieumpansioskorean 16#3170
/mieumparenkorean 16#3204
/mieumpieupkorean 16#316e
/mieumsioskorean 16#316f
/mihiragana 16#307f
/mikatakana 16#30df
/mikatakanahalfwidth 16#ff90
/minus 16#2212
/minusbelowcmb 16#0320
/minuscircle 16#2296
/minusmod 16#02d7
/minusplus 16#2213
/minute 16#2032
/miribaarusquare 16#334a
/mirisquare 16#3349
/mlonglegturned 16#0270
/mlsquare 16#3396
/mmcubedsquare 16#33a3
/mmonospace 16#ff4d
/mmsquaredsquare 16#339f
/mohiragana 16#3082
/mohmsquare 16#33c1
/mokatakana 16#30e2
/mokatakanahalfwidth 16#ff93
/molsquare 16#33d6
/momathai 16#0e21
/moverssquare 16#33a7
/moverssquaredsquare 16#33a8
/mparen 16#24a8
/mpasquare 16#33ab
/mssquare 16#33b3
/msuperior 16#f6ef
/mturned 16#026f
/mu 16#00b5
/mu1 16#00b5
/muasquare 16#3382
/muchgreater 16#226b
/muchless 16#226a
/mufsquare 16#338c
/mugreek 16#03bc
/mugsquare 16#338d
/muhiragana 16#3080
/mukatakana 16#30e0
/mukatakanahalfwidth 16#ff91
/mulsquare 16#3395
/multiply 16#00d7
/mumsquare 16#339b
/munahhebrew 16#05a3
/munahlefthebrew 16#05a3
/musicalnote 16#266a
/musicalnotedbl 16#266b
/musicflatsign 16#266d
/musicsharpsign 16#266f
/mussquare 16#33b2
/muvsquare 16#33b6
/muwsquare 16#33bc
/mvmegasquare 16#33b9
/mvsquare 16#33b7
/mwmegasquare 16#33bf
/mwsquare 16#33bd
/n 16#006e
/nabengali 16#09a8
/nabla 16#2207
/nacute 16#0144
/nadeva 16#0928
/nagujarati 16#0aa8
/nagurmukhi 16#0a28
/nahiragana 16#306a
/nakatakana 16#30ca
/nakatakanahalfwidth 16#ff85
/napostrophe 16#0149
/nasquare 16#3381
/nbopomofo 16#310b
/nbspace 16#00a0
/ncaron 16#0148
/ncedilla 16#0146
/ncircle 16#24dd
/ncircumflexbelow 16#1e4b
/ncommaaccent 16#0146
/ndotaccent 16#1e45
/ndotbelow 16#1e47
/nehiragana 16#306d
/nekatakana 16#30cd
/nekatakanahalfwidth 16#ff88
/newsheqelsign 16#20aa
/nfsquare 16#338b
/ngabengali 16#0999
/ngadeva 16#0919
/ngagujarati 16#0a99
/ngagurmukhi 16#0a19
/ngonguthai 16#0e07
/nhiragana 16#3093
/nhookleft 16#0272
/nhookretroflex 16#0273
/nieunacirclekorean 16#326f
/nieunaparenkorean 16#320f
/nieuncieuckorean 16#3135
/nieuncirclekorean 16#3261
/nieunhieuhkorean 16#3136
/nieunkorean 16#3134
/nieunpansioskorean 16#3168
/nieunparenkorean 16#3201
/nieunsioskorean 16#3167
/nieuntikeutkorean 16#3166
/nihiragana 16#306b
/nikatakana 16#30cb
/nikatakanahalfwidth 16#ff86
/nikhahitleftthai 16#f899
/nikhahitthai 16#0e4d
/nine 16#0039
/ninearabic 16#0669
/ninebengali 16#09ef
/ninecircle 16#2468
/ninecircleinversesansserif 16#2792
/ninedeva 16#096f
/ninegujarati 16#0aef
/ninegurmukhi 16#0a6f
/ninehackarabic 16#0669
/ninehangzhou 16#3029
/nineideographicparen 16#3228
/nineinferior 16#2089
/ninemonospace 16#ff19
/nineoldstyle 16#f739
/nineparen 16#247c
/nineperiod 16#2490
/ninepersian 16#06f9
/nineroman 16#2178
/ninesuperior 16#2079
/nineteencircle 16#2472
/nineteenparen 16#2486
/nineteenperiod 16#249a
/ninethai 16#0e59
/nj 16#01cc
/njecyrillic 16#045a
/nkatakana 16#30f3
/nkatakanahalfwidth 16#ff9d
/nlegrightlong 16#019e
/nlinebelow 16#1e49
/nmonospace 16#ff4e
/nmsquare 16#339a
/nnabengali 16#09a3
/nnadeva 16#0923
/nnagujarati 16#0aa3
/nnagurmukhi 16#0a23
/nnnadeva 16#0929
/nohiragana 16#306e
/nokatakana 16#30ce
/nokatakanahalfwidth 16#ff89
/nonbreakingspace 16#00a0
/nonenthai 16#0e13
/nonuthai 16#0e19
/noonarabic 16#0646
/noonfinalarabic 16#fee6
/noonghunnaarabic 16#06ba
/noonghunnafinalarabic 16#fb9f
/nooninitialarabic 16#fee7
/noonjeeminitialarabic 16#fcd2
/noonjeemisolatedarabic 16#fc4b
/noonmedialarabic 16#fee8
/noonmeeminitialarabic 16#fcd5
/noonmeemisolatedarabic 16#fc4e
/noonnoonfinalarabic 16#fc8d
/notcontains 16#220c
/notelement 16#2209
/notelementof 16#2209
/notequal 16#2260
/notgreater 16#226f
/notgreaternorequal 16#2271
/notgreaternorless 16#2279
/notidentical 16#2262
/notless 16#226e
/notlessnorequal 16#2270
/notparallel 16#2226
/notprecedes 16#2280
/notsubset 16#2284
/notsucceeds 16#2281
/notsuperset 16#2285
/nowarmenian 16#0576
/nparen 16#24a9
/nssquare 16#33b1
/nsuperior 16#207f
/ntilde 16#00f1
/nu 16#03bd
/nuhiragana 16#306c
/nukatakana 16#30cc
/nukatakanahalfwidth 16#ff87
/nuktabengali 16#09bc
/nuktadeva 16#093c
/nuktagujarati 16#0abc
/nuktagurmukhi 16#0a3c
/numbersign 16#0023
/numbersignmonospace 16#ff03
/numbersignsmall 16#fe5f
/numeralsigngreek 16#0374
/numeralsignlowergreek 16#0375
/numero 16#2116
/nun 16#05e0
/nundagesh 16#fb40
/nundageshhebrew 16#fb40
/nunhebrew 16#05e0
/nvsquare 16#33b5
/nwsquare 16#33bb
/nyabengali 16#099e
/nyadeva 16#091e
/nyagujarati 16#0a9e
/nyagurmukhi 16#0a1e
/o 16#006f
/oacute 16#00f3
/oangthai 16#0e2d
/obarred 16#0275
/obarredcyrillic 16#04e9
/obarreddieresiscyrillic 16#04eb
/obengali 16#0993
/obopomofo 16#311b
/obreve 16#014f
/ocandradeva 16#0911
/ocandragujarati 16#0a91
/ocandravowelsigndeva 16#0949
/ocandravowelsigngujarati 16#0ac9
/ocaron 16#01d2
/ocircle 16#24de
/ocircumflex 16#00f4
/ocircumflexacute 16#1ed1
/ocircumflexdotbelow 16#1ed9
/ocircumflexgrave 16#1ed3
/ocircumflexhookabove 16#1ed5
/ocircumflextilde 16#1ed7
/ocyrillic 16#043e
/odblacute 16#0151
/odblgrave 16#020d
/odeva 16#0913
/odieresis 16#00f6
/odieresiscyrillic 16#04e7
/odotbelow 16#1ecd
/oe 16#0153
/oekorean 16#315a
/ogonek 16#02db
/ogonekcmb 16#0328
/ograve 16#00f2
/ogujarati 16#0a93
/oharmenian 16#0585
/ohiragana 16#304a
/ohookabove 16#1ecf
/ohorn 16#01a1
/ohornacute 16#1edb
/ohorndotbelow 16#1ee3
/ohorngrave 16#1edd
/ohornhookabove 16#1edf
/ohorntilde 16#1ee1
/ohungarumlaut 16#0151
/oi 16#01a3
/oinvertedbreve 16#020f
/okatakana 16#30aa
/okatakanahalfwidth 16#ff75
/okorean 16#3157
/olehebrew 16#05ab
/omacron 16#014d
/omacronacute 16#1e53
/omacrongrave 16#1e51
/omdeva 16#0950
/omega 16#03c9
/omega1 16#03d6
/omegacyrillic 16#0461
/omegalatinclosed 16#0277
/omegaroundcyrillic 16#047b
/omegatitlocyrillic 16#047d
/omegatonos 16#03ce
/omgujarati 16#0ad0
/omicron 16#03bf
/omicrontonos 16#03cc
/omonospace 16#ff4f
/one 16#0031
/onearabic 16#0661
/onebengali 16#09e7
/onecircle 16#2460
/onecircleinversesansserif 16#278a
/onedeva 16#0967
/onedotenleader 16#2024
/oneeighth 16#215b
/onefitted 16#f6dc
/onegujarati 16#0ae7
/onegurmukhi 16#0a67
/onehackarabic 16#0661
/onehalf 16#00bd
/onehangzhou 16#3021
/oneideographicparen 16#3220
/oneinferior 16#2081
/onemonospace 16#ff11
/onenumeratorbengali 16#09f4
/oneoldstyle 16#f731
/oneparen 16#2474
/oneperiod 16#2488
/onepersian 16#06f1
/onequarter 16#00bc
/oneroman 16#2170
/onesuperior 16#00b9
/onethai 16#0e51
/onethird 16#2153
/oogonek 16#01eb
/oogonekmacron 16#01ed
/oogurmukhi 16#0a13
/oomatragurmukhi 16#0a4b
/oopen 16#0254
/oparen 16#24aa
/openbullet 16#25e6
/option 16#2325
/ordfeminine 16#00aa
/ordmasculine 16#00ba
/orthogonal 16#221f
/oshortdeva 16#0912
/oshortvowelsigndeva 16#094a
/oslash 16#00f8
/oslashacute 16#01ff
/osmallhiragana 16#3049
/osmallkatakana 16#30a9
/osmallkatakanahalfwidth 16#ff6b
/ostrokeacute 16#01ff
/osuperior 16#f6f0
/otcyrillic 16#047f
/otilde 16#00f5
/otildeacute 16#1e4d
/otildedieresis 16#1e4f
/oubopomofo 16#3121
/overline 16#203e
/overlinecenterline 16#fe4a
/overlinecmb 16#0305
/overlinedashed 16#fe49
/overlinedblwavy 16#fe4c
/overlinewavy 16#fe4b
/overscore 16#00af
/ovowelsignbengali 16#09cb
/ovowelsigndeva 16#094b
/ovowelsigngujarati 16#0acb
/p 16#0070
/paampssquare 16#3380
/paasentosquare 16#332b
/pabengali 16#09aa
/pacute 16#1e55
/padeva 16#092a
/pagedown 16#21df
/pageup 16#21de
/pagujarati 16#0aaa
/pagurmukhi 16#0a2a
/pahiragana 16#3071
/paiyannoithai 16#0e2f
/pakatakana 16#30d1
/palatalizationcyrilliccmb 16#0484
/palochkacyrillic 16#04c0
/pansioskorean 16#317f
/paragraph 16#00b6
/parallel 16#2225
/parenleft 16#0028
/parenleftaltonearabic 16#fd3e
/parenleftbt 16#f8ed
/parenleftex 16#f8ec
/parenleftinferior 16#208d
/parenleftmonospace 16#ff08
/parenleftsmall 16#fe59
/parenleftsuperior 16#207d
/parenlefttp 16#f8eb
/parenleftvertical 16#fe35
/parenright 16#0029
/parenrightaltonearabic 16#fd3f
/parenrightbt 16#f8f8
/parenrightex 16#f8f7
/parenrightinferior 16#208e
/parenrightmonospace 16#ff09
/parenrightsmall 16#fe5a
/parenrightsuperior 16#207e
/parenrighttp 16#f8f6
/parenrightvertical 16#fe36
/partialdiff 16#2202
/paseqhebrew 16#05c0
/pashtahebrew 16#0599
/pasquare 16#33a9
/patah 16#05b7
/patah11 16#05b7
/patah1d 16#05b7
/patah2a 16#05b7
/patahhebrew 16#05b7
/patahnarrowhebrew 16#05b7
/patahquarterhebrew 16#05b7
/patahwidehebrew 16#05b7
/pazerhebrew 16#05a1
/pbopomofo 16#3106
/pcircle 16#24df
/pdotaccent 16#1e57
/pe 16#05e4
/pecyrillic 16#043f
/pedagesh 16#fb44
/pedageshhebrew 16#fb44
/peezisquare 16#333b
/pefinaldageshhebrew 16#fb43
/peharabic 16#067e
/peharmenian 16#057a
/pehebrew 16#05e4
/pehfinalarabic 16#fb57
/pehinitialarabic 16#fb58
/pehiragana 16#307a
/pehmedialarabic 16#fb59
/pekatakana 16#30da
/pemiddlehookcyrillic 16#04a7
/perafehebrew 16#fb4e
/percent 16#0025
/percentarabic 16#066a
/percentmonospace 16#ff05
/percentsmall 16#fe6a
/period 16#002e
/periodarmenian 16#0589
/periodcentered 16#00b7
/periodhalfwidth 16#ff61
/periodinferior 16#f6e7
/periodmonospace 16#ff0e
/periodsmall 16#fe52
/periodsuperior 16#f6e8
/perispomenigreekcmb 16#0342
/perpendicular 16#22a5
/perthousand 16#2030
/peseta 16#20a7
/pfsquare 16#338a
/phabengali 16#09ab
/phadeva 16#092b
/phagujarati 16#0aab
/phagurmukhi 16#0a2b
/phi 16#03c6
/phi1 16#03d5
/phieuphacirclekorean 16#327a
/phieuphaparenkorean 16#321a
/phieuphcirclekorean 16#326c
/phieuphkorean 16#314d
/phieuphparenkorean 16#320c
/philatin 16#0278
/phinthuthai 16#0e3a
/phisymbolgreek 16#03d5
/phook 16#01a5
/phophanthai 16#0e1e
/phophungthai 16#0e1c
/phosamphaothai 16#0e20
/pi 16#03c0
/pieupacirclekorean 16#3273
/pieupaparenkorean 16#3213
/pieupcieuckorean 16#3176
/pieupcirclekorean 16#3265
/pieupkiyeokkorean 16#3172
/pieupkorean 16#3142
/pieupparenkorean 16#3205
/pieupsioskiyeokkorean 16#3174
/pieupsioskorean 16#3144
/pieupsiostikeutkorean 16#3175
/pieupthieuthkorean 16#3177
/pieuptikeutkorean 16#3173
/pihiragana 16#3074
/pikatakana 16#30d4
/pisymbolgreek 16#03d6
/piwrarmenian 16#0583
/plus 16#002b
/plusbelowcmb 16#031f
/pluscircle 16#2295
/plusminus 16#00b1
/plusmod 16#02d6
/plusmonospace 16#ff0b
/plussmall 16#fe62
/plussuperior 16#207a
/pmonospace 16#ff50
/pmsquare 16#33d8
/pohiragana 16#307d
/pointingindexdownwhite 16#261f
/pointingindexleftwhite 16#261c
/pointingindexrightwhite 16#261e
/pointingindexupwhite 16#261d
/pokatakana 16#30dd
/poplathai 16#0e1b
/postalmark 16#3012
/postalmarkface 16#3020
/pparen 16#24ab
/precedes 16#227a
/prescription 16#211e
/primemod 16#02b9
/primereversed 16#2035
/product 16#220f
/projective 16#2305
/prolongedkana 16#30fc
/propellor 16#2318
/propersubset 16#2282
/propersuperset 16#2283
/proportion 16#2237
/proportional 16#221d
/psi 16#03c8
/psicyrillic 16#0471
/psilipneumatacyrilliccmb 16#0486
/pssquare 16#33b0
/puhiragana 16#3077
/pukatakana 16#30d7
/pvsquare 16#33b4
/pwsquare 16#33ba
/q 16#0071
/qadeva 16#0958
/qadmahebrew 16#05a8
/qafarabic 16#0642
/qaffinalarabic 16#fed6
/qafinitialarabic 16#fed7
/qafmedialarabic 16#fed8
/qamats 16#05b8
/qamats10 16#05b8
/qamats1a 16#05b8
/qamats1c 16#05b8
/qamats27 16#05b8
/qamats29 16#05b8
/qamats33 16#05b8
/qamatsde 16#05b8
/qamatshebrew 16#05b8
/qamatsnarrowhebrew 16#05b8
/qamatsqatanhebrew 16#05b8
/qamatsqatannarrowhebrew 16#05b8
/qamatsqatanquarterhebrew 16#05b8
/qamatsqatanwidehebrew 16#05b8
/qamatsquarterhebrew 16#05b8
/qamatswidehebrew 16#05b8
/qarneyparahebrew 16#059f
/qbopomofo 16#3111
/qcircle 16#24e0
/qhook 16#02a0
/qmonospace 16#ff51
/qof 16#05e7
/qofdagesh 16#fb47
/qofdageshhebrew 16#fb47
/qofhebrew 16#05e7
/qparen 16#24ac
/quarternote 16#2669
/qubuts 16#05bb
/qubuts18 16#05bb
/qubuts25 16#05bb
/qubuts31 16#05bb
/qubutshebrew 16#05bb
/qubutsnarrowhebrew 16#05bb
/qubutsquarterhebrew 16#05bb
/qubutswidehebrew 16#05bb
/question 16#003f
/questionarabic 16#061f
/questionarmenian 16#055e
/questiondown 16#00bf
/questiondownsmall 16#f7bf
/questiongreek 16#037e
/questionmonospace 16#ff1f
/questionsmall 16#f73f
/quotedbl 16#0022
/quotedblbase 16#201e
/quotedblleft 16#201c
/quotedblmonospace 16#ff02
/quotedblprime 16#301e
/quotedblprimereversed 16#301d
/quotedblright 16#201d
/quoteleft 16#2018
/quoteleftreversed 16#201b
/quotereversed 16#201b
/quoteright 16#2019
/quoterightn 16#0149
/quotesinglbase 16#201a
/quotesingle 16#0027
/quotesinglemonospace 16#ff07
/r 16#0072
/raarmenian 16#057c
/rabengali 16#09b0
/racute 16#0155
/radeva 16#0930
/radical 16#221a
/radicalex 16#f8e5
/radoverssquare 16#33ae
/radoverssquaredsquare 16#33af
/radsquare 16#33ad
/rafe 16#05bf
/rafehebrew 16#05bf
/ragujarati 16#0ab0
/ragurmukhi 16#0a30
/rahiragana 16#3089
/rakatakana 16#30e9
/rakatakanahalfwidth 16#ff97
/ralowerdiagonalbengali 16#09f1
/ramiddlediagonalbengali 16#09f0
/ramshorn 16#0264
/ratio 16#2236
/rbopomofo 16#3116
/rcaron 16#0159
/rcedilla 16#0157
/rcircle 16#24e1
/rcommaaccent 16#0157
/rdblgrave 16#0211
/rdotaccent 16#1e59
/rdotbelow 16#1e5b
/rdotbelowmacron 16#1e5d
/referencemark 16#203b
/reflexsubset 16#2286
/reflexsuperset 16#2287
/registered 16#00ae
/registersans 16#f8e8
/registerserif 16#f6da
/reharabic 16#0631
/reharmenian 16#0580
/rehfinalarabic 16#feae
/rehiragana 16#308c
/rekatakana 16#30ec
/rekatakanahalfwidth 16#ff9a
/resh 16#05e8
/reshdageshhebrew 16#fb48
/reshhebrew 16#05e8
/reversedtilde 16#223d
/reviahebrew 16#0597
/reviamugrashhebrew 16#0597
/revlogicalnot 16#2310
/rfishhook 16#027e
/rfishhookreversed 16#027f
/rhabengali 16#09dd
/rhadeva 16#095d
/rho 16#03c1
/rhook 16#027d
/rhookturned 16#027b
/rhookturnedsuperior 16#02b5
/rhosymbolgreek 16#03f1
/rhotichookmod 16#02de
/rieulacirclekorean 16#3271
/rieulaparenkorean 16#3211
/rieulcirclekorean 16#3263
/rieulhieuhkorean 16#3140
/rieulkiyeokkorean 16#313a
/rieulkiyeoksioskorean 16#3169
/rieulkorean 16#3139
/rieulmieumkorean 16#313b
/rieulpansioskorean 16#316c
/rieulparenkorean 16#3203
/rieulphieuphkorean 16#313f
/rieulpieupkorean 16#313c
/rieulpieupsioskorean 16#316b
/rieulsioskorean 16#313d
/rieulthieuthkorean 16#313e
/rieultikeutkorean 16#316a
/rieulyeorinhieuhkorean 16#316d
/rightangle 16#221f
/righttackbelowcmb 16#0319
/righttriangle 16#22bf
/rihiragana 16#308a
/rikatakana 16#30ea
/rikatakanahalfwidth 16#ff98
/ring 16#02da
/ringbelowcmb 16#0325
/ringcmb 16#030a
/ringhalfleft 16#02bf
/ringhalfleftarmenian 16#0559
/ringhalfleftbelowcmb 16#031c
/ringhalfleftcentered 16#02d3
/ringhalfright 16#02be
/ringhalfrightbelowcmb 16#0339
/ringhalfrightcentered 16#02d2
/rinvertedbreve 16#0213
/rittorusquare 16#3351
/rlinebelow 16#1e5f
/rlongleg 16#027c
/rlonglegturned 16#027a
/rmonospace 16#ff52
/rohiragana 16#308d
/rokatakana 16#30ed
/rokatakanahalfwidth 16#ff9b
/roruathai 16#0e23
/rparen 16#24ad
/rrabengali 16#09dc
/rradeva 16#0931
/rragurmukhi 16#0a5c
/rreharabic 16#0691
/rrehfinalarabic 16#fb8d
/rrvocalicbengali 16#09e0
/rrvocalicdeva 16#0960
/rrvocalicgujarati 16#0ae0
/rrvocalicvowelsignbengali 16#09c4
/rrvocalicvowelsigndeva 16#0944
/rrvocalicvowelsigngujarati 16#0ac4
/rsuperior 16#f6f1
/rtblock 16#2590
/rturned 16#0279
/rturnedsuperior 16#02b4
/ruhiragana 16#308b
/rukatakana 16#30eb
/rukatakanahalfwidth 16#ff99
/rupeemarkbengali 16#09f2
/rupeesignbengali 16#09f3
/rupiah 16#f6dd
/ruthai 16#0e24
/rvocalicbengali 16#098b
/rvocalicdeva 16#090b
/rvocalicgujarati 16#0a8b
/rvocalicvowelsignbengali 16#09c3
/rvocalicvowelsigndeva 16#0943
/rvocalicvowelsigngujarati 16#0ac3
/s 16#0073
/sabengali 16#09b8
/sacute 16#015b
/sacutedotaccent 16#1e65
/sadarabic 16#0635
/sadeva 16#0938
/sadfinalarabic 16#feba
/sadinitialarabic 16#febb
/sadmedialarabic 16#febc
/sagujarati 16#0ab8
/sagurmukhi 16#0a38
/sahiragana 16#3055
/sakatakana 16#30b5
/sakatakanahalfwidth 16#ff7b
/sallallahoualayhewasallamarabic 16#fdfa
/samekh 16#05e1
/samekhdagesh 16#fb41
/samekhdageshhebrew 16#fb41
/samekhhebrew 16#05e1
/saraaathai 16#0e32
/saraaethai 16#0e41
/saraaimaimalaithai 16#0e44
/saraaimaimuanthai 16#0e43
/saraamthai 16#0e33
/saraathai 16#0e30
/saraethai 16#0e40
/saraiileftthai 16#f886
/saraiithai 16#0e35
/saraileftthai 16#f885
/saraithai 16#0e34
/saraothai 16#0e42
/saraueeleftthai 16#f888
/saraueethai 16#0e37
/saraueleftthai 16#f887
/sarauethai 16#0e36
/sarauthai 16#0e38
/sarauuthai 16#0e39
/sbopomofo 16#3119
/scaron 16#0161
/scarondotaccent 16#1e67
/scedilla 16#015f
/schwa 16#0259
/schwacyrillic 16#04d9
/schwadieresiscyrillic 16#04db
/schwahook 16#025a
/scircle 16#24e2
/scircumflex 16#015d
/scommaaccent 16#0219
/sdotaccent 16#1e61
/sdotbelow 16#1e63
/sdotbelowdotaccent 16#1e69
/seagullbelowcmb 16#033c
/second 16#2033
/secondtonechinese 16#02ca
/section 16#00a7
/seenarabic 16#0633
/seenfinalarabic 16#feb2
/seeninitialarabic 16#feb3
/seenmedialarabic 16#feb4
/segol 16#05b6
/segol13 16#05b6
/segol1f 16#05b6
/segol2c 16#05b6
/segolhebrew 16#05b6
/segolnarrowhebrew 16#05b6
/segolquarterhebrew 16#05b6
/segoltahebrew 16#0592
/segolwidehebrew 16#05b6
/seharmenian 16#057d
/sehiragana 16#305b
/sekatakana 16#30bb
/sekatakanahalfwidth 16#ff7e
/semicolon 16#003b
/semicolonarabic 16#061b
/semicolonmonospace 16#ff1b
/semicolonsmall 16#fe54
/semivoicedmarkkana 16#309c
/semivoicedmarkkanahalfwidth 16#ff9f
/sentisquare 16#3322
/sentosquare 16#3323
/seven 16#0037
/sevenarabic 16#0667
/sevenbengali 16#09ed
/sevencircle 16#2466
/sevencircleinversesansserif 16#2790
/sevendeva 16#096d
/seveneighths 16#215e
/sevengujarati 16#0aed
/sevengurmukhi 16#0a6d
/sevenhackarabic 16#0667
/sevenhangzhou 16#3027
/sevenideographicparen 16#3226
/seveninferior 16#2087
/sevenmonospace 16#ff17
/sevenoldstyle 16#f737
/sevenparen 16#247a
/sevenperiod 16#248e
/sevenpersian 16#06f7
/sevenroman 16#2176
/sevensuperior 16#2077
/seventeencircle 16#2470
/seventeenparen 16#2484
/seventeenperiod 16#2498
/seventhai 16#0e57
/sfthyphen 16#00ad
/shaarmenian 16#0577
/shabengali 16#09b6
/shacyrillic 16#0448
/shaddaarabic 16#0651
/shaddadammaarabic 16#fc61
/shaddadammatanarabic 16#fc5e
/shaddafathaarabic 16#fc60
/shaddakasraarabic 16#fc62
/shaddakasratanarabic 16#fc5f
/shade 16#2592
/shadedark 16#2593
/shadelight 16#2591
/shademedium 16#2592
/shadeva 16#0936
/shagujarati 16#0ab6
/shagurmukhi 16#0a36
/shalshelethebrew 16#0593
/shbopomofo 16#3115
/shchacyrillic 16#0449
/sheenarabic 16#0634
/sheenfinalarabic 16#feb6
/sheeninitialarabic 16#feb7
/sheenmedialarabic 16#feb8
/sheicoptic 16#03e3
/sheqel 16#20aa
/sheqelhebrew 16#20aa
/sheva 16#05b0
/sheva115 16#05b0
/sheva15 16#05b0
/sheva22 16#05b0
/sheva2e 16#05b0
/shevahebrew 16#05b0
/shevanarrowhebrew 16#05b0
/shevaquarterhebrew 16#05b0
/shevawidehebrew 16#05b0
/shhacyrillic 16#04bb
/shimacoptic 16#03ed
/shin 16#05e9
/shindagesh 16#fb49
/shindageshhebrew 16#fb49
/shindageshshindot 16#fb2c
/shindageshshindothebrew 16#fb2c
/shindageshsindot 16#fb2d
/shindageshsindothebrew 16#fb2d
/shindothebrew 16#05c1
/shinhebrew 16#05e9
/shinshindot 16#fb2a
/shinshindothebrew 16#fb2a
/shinsindot 16#fb2b
/shinsindothebrew 16#fb2b
/shook 16#0282
/sigma 16#03c3
/sigma1 16#03c2
/sigmafinal 16#03c2
/sigmalunatesymbolgreek 16#03f2
/sihiragana 16#3057
/sikatakana 16#30b7
/sikatakanahalfwidth 16#ff7c
/siluqhebrew 16#05bd
/siluqlefthebrew 16#05bd
/similar 16#223c
/sindothebrew 16#05c2
/siosacirclekorean 16#3274
/siosaparenkorean 16#3214
/sioscieuckorean 16#317e
/sioscirclekorean 16#3266
/sioskiyeokkorean 16#317a
/sioskorean 16#3145
/siosnieunkorean 16#317b
/siosparenkorean 16#3206
/siospieupkorean 16#317d
/siostikeutkorean 16#317c
/six 16#0036
/sixarabic 16#0666
/sixbengali 16#09ec
/sixcircle 16#2465
/sixcircleinversesansserif 16#278f
/sixdeva 16#096c
/sixgujarati 16#0aec
/sixgurmukhi 16#0a6c
/sixhackarabic 16#0666
/sixhangzhou 16#3026
/sixideographicparen 16#3225
/sixinferior 16#2086
/sixmonospace 16#ff16
/sixoldstyle 16#f736
/sixparen 16#2479
/sixperiod 16#248d
/sixpersian 16#06f6
/sixroman 16#2175
/sixsuperior 16#2076
/sixteencircle 16#246f
/sixteencurrencydenominatorbengali 16#09f9
/sixteenparen 16#2483
/sixteenperiod 16#2497
/sixthai 16#0e56
/slash 16#002f
/slashmonospace 16#ff0f
/slong 16#017f
/slongdotaccent 16#1e9b
/smileface 16#263a
/smonospace 16#ff53
/sofpasuqhebrew 16#05c3
/softhyphen 16#00ad
/softsigncyrillic 16#044c
/sohiragana 16#305d
/sokatakana 16#30bd
/sokatakanahalfwidth 16#ff7f
/soliduslongoverlaycmb 16#0338
/solidusshortoverlaycmb 16#0337
/sorusithai 16#0e29
/sosalathai 16#0e28
/sosothai 16#0e0b
/sosuathai 16#0e2a
/space 16#0020
/spacehackarabic 16#0020
/spade 16#2660
/spadesuitblack 16#2660
/spadesuitwhite 16#2664
/sparen 16#24ae
/squarebelowcmb 16#033b
/squarecc 16#33c4
/squarecm 16#339d
/squarediagonalcrosshatchfill 16#25a9
/squarehorizontalfill 16#25a4
/squarekg 16#338f
/squarekm 16#339e
/squarekmcapital 16#33ce
/squareln 16#33d1
/squarelog 16#33d2
/squaremg 16#338e
/squaremil 16#33d5
/squaremm 16#339c
/squaremsquared 16#33a1
/squareorthogonalcrosshatchfill 16#25a6
/squareupperlefttolowerrightfill 16#25a7
/squareupperrighttolowerleftfill 16#25a8
/squareverticalfill 16#25a5
/squarewhitewithsmallblack 16#25a3
/srsquare 16#33db
/ssabengali 16#09b7
/ssadeva 16#0937
/ssagujarati 16#0ab7
/ssangcieuckorean 16#3149
/ssanghieuhkorean 16#3185
/ssangieungkorean 16#3180
/ssangkiyeokkorean 16#3132
/ssangnieunkorean 16#3165
/ssangpieupkorean 16#3143
/ssangsioskorean 16#3146
/ssangtikeutkorean 16#3138
/ssuperior 16#f6f2
/sterling 16#00a3
/sterlingmonospace 16#ffe1
/strokelongoverlaycmb 16#0336
/strokeshortoverlaycmb 16#0335
/subset 16#2282
/subsetnotequal 16#228a
/subsetorequal 16#2286
/succeeds 16#227b
/suchthat 16#220b
/suhiragana 16#3059
/sukatakana 16#30b9
/sukatakanahalfwidth 16#ff7d
/sukunarabic 16#0652
/summation 16#2211
/sun 16#263c
/superset 16#2283
/supersetnotequal 16#228b
/supersetorequal 16#2287
/svsquare 16#33dc
/syouwaerasquare 16#337c
/t 16#0074
/tabengali 16#09a4
/tackdown 16#22a4
/tackleft 16#22a3
/tadeva 16#0924
/tagujarati 16#0aa4
/tagurmukhi 16#0a24
/taharabic 16#0637
/tahfinalarabic 16#fec2
/tahinitialarabic 16#fec3
/tahiragana 16#305f
/tahmedialarabic 16#fec4
/taisyouerasquare 16#337d
/takatakana 16#30bf
/takatakanahalfwidth 16#ff80
/tatweelarabic 16#0640
/tau 16#03c4
/tav 16#05ea
/tavdages 16#fb4a
/tavdagesh 16#fb4a
/tavdageshhebrew 16#fb4a
/tavhebrew 16#05ea
/tbar 16#0167
/tbopomofo 16#310a
/tcaron 16#0165
/tccurl 16#02a8
/tcedilla 16#0163
/tcheharabic 16#0686
/tchehfinalarabic 16#fb7b
/tchehinitialarabic 16#fb7c
/tchehmedialarabic 16#fb7d
/tcircle 16#24e3
/tcircumflexbelow 16#1e71
/tcommaaccent 16#0163
/tdieresis 16#1e97
/tdotaccent 16#1e6b
/tdotbelow 16#1e6d
/tecyrillic 16#0442
/tedescendercyrillic 16#04ad
/teharabic 16#062a
/tehfinalarabic 16#fe96
/tehhahinitialarabic 16#fca2
/tehhahisolatedarabic 16#fc0c
/tehinitialarabic 16#fe97
/tehiragana 16#3066
/tehjeeminitialarabic 16#fca1
/tehjeemisolatedarabic 16#fc0b
/tehmarbutaarabic 16#0629
/tehmarbutafinalarabic 16#fe94
/tehmedialarabic 16#fe98
/tehmeeminitialarabic 16#fca4
/tehmeemisolatedarabic 16#fc0e
/tehnoonfinalarabic 16#fc73
/tekatakana 16#30c6
/tekatakanahalfwidth 16#ff83
/telephone 16#2121
/telephoneblack 16#260e
/telishagedolahebrew 16#05a0
/telishaqetanahebrew 16#05a9
/tencircle 16#2469
/tenideographicparen 16#3229
/tenparen 16#247d
/tenperiod 16#2491
/tenroman 16#2179
/tesh 16#02a7
/tet 16#05d8
/tetdagesh 16#fb38
/tetdageshhebrew 16#fb38
/tethebrew 16#05d8
/tetsecyrillic 16#04b5
/tevirhebrew 16#059b
/tevirlefthebrew 16#059b
/thabengali 16#09a5
/thadeva 16#0925
/thagujarati 16#0aa5
/thagurmukhi 16#0a25
/thalarabic 16#0630
/thalfinalarabic 16#feac
/thanthakhatlowleftthai 16#f898
/thanthakhatlowrightthai 16#f897
/thanthakhatthai 16#0e4c
/thanthakhatupperleftthai 16#f896
/theharabic 16#062b
/thehfinalarabic 16#fe9a
/thehinitialarabic 16#fe9b
/thehmedialarabic 16#fe9c
/thereexists 16#2203
/therefore 16#2234
/theta 16#03b8
/theta1 16#03d1
/thetasymbolgreek 16#03d1
/thieuthacirclekorean 16#3279
/thieuthaparenkorean 16#3219
/thieuthcirclekorean 16#326b
/thieuthkorean 16#314c
/thieuthparenkorean 16#320b
/thirteencircle 16#246c
/thirteenparen 16#2480
/thirteenperiod 16#2494
/thonangmonthothai 16#0e11
/thook 16#01ad
/thophuthaothai 16#0e12
/thorn 16#00fe
/thothahanthai 16#0e17
/thothanthai 16#0e10
/thothongthai 16#0e18
/thothungthai 16#0e16
/thousandcyrillic 16#0482
/thousandsseparatorarabic 16#066c
/thousandsseparatorpersian 16#066c
/three 16#0033
/threearabic 16#0663
/threebengali 16#09e9
/threecircle 16#2462
/threecircleinversesansserif 16#278c
/threedeva 16#0969
/threeeighths 16#215c
/threegujarati 16#0ae9
/threegurmukhi 16#0a69
/threehackarabic 16#0663
/threehangzhou 16#3023
/threeideographicparen 16#3222
/threeinferior 16#2083
/threemonospace 16#ff13
/threenumeratorbengali 16#09f6
/threeoldstyle 16#f733
/threeparen 16#2476
/threeperiod 16#248a
/threepersian 16#06f3
/threequarters 16#00be
/threequartersemdash 16#f6de
/threeroman 16#2172
/threesuperior 16#00b3
/threethai 16#0e53
/thzsquare 16#3394
/tihiragana 16#3061
/tikatakana 16#30c1
/tikatakanahalfwidth 16#ff81
/tikeutacirclekorean 16#3270
/tikeutaparenkorean 16#3210
/tikeutcirclekorean 16#3262
/tikeutkorean 16#3137
/tikeutparenkorean 16#3202
/tilde 16#02dc
/tildebelowcmb 16#0330
/tildecmb 16#0303
/tildecomb 16#0303
/tildedoublecmb 16#0360
/tildeoperator 16#223c
/tildeoverlaycmb 16#0334
/tildeverticalcmb 16#033e
/timescircle 16#2297
/tipehahebrew 16#0596
/tipehalefthebrew 16#0596
/tippigurmukhi 16#0a70
/titlocyrilliccmb 16#0483
/tiwnarmenian 16#057f
/tlinebelow 16#1e6f
/tmonospace 16#ff54
/toarmenian 16#0569
/tohiragana 16#3068
/tokatakana 16#30c8
/tokatakanahalfwidth 16#ff84
/tonebarextrahighmod 16#02e5
/tonebarextralowmod 16#02e9
/tonebarhighmod 16#02e6
/tonebarlowmod 16#02e8
/tonebarmidmod 16#02e7
/tonefive 16#01bd
/tonesix 16#0185
/tonetwo 16#01a8
/tonos 16#0384
/tonsquare 16#3327
/topatakthai 16#0e0f
/tortoiseshellbracketleft 16#3014
/tortoiseshellbracketleftsmall 16#fe5d
/tortoiseshellbracketleftvertical 16#fe39
/tortoiseshellbracketright 16#3015
/tortoiseshellbracketrightsmall 16#fe5e
/tortoiseshellbracketrightvertical 16#fe3a
/totaothai 16#0e15
/tpalatalhook 16#01ab
/tparen 16#24af
/trademark 16#2122
/trademarksans 16#f8ea
/trademarkserif 16#f6db
/tretroflexhook 16#0288
/triagdn 16#25bc
/triaglf 16#25c4
/triagrt 16#25ba
/triagup 16#25b2
/ts 16#02a6
/tsadi 16#05e6
/tsadidagesh 16#fb46
/tsadidageshhebrew 16#fb46
/tsadihebrew 16#05e6
/tsecyrillic 16#0446
/tsere 16#05b5
/tsere12 16#05b5
/tsere1e 16#05b5
/tsere2b 16#05b5
/tserehebrew 16#05b5
/tserenarrowhebrew 16#05b5
/tserequarterhebrew 16#05b5
/tserewidehebrew 16#05b5
/tshecyrillic 16#045b
/tsuperior 16#f6f3
/ttabengali 16#099f
/ttadeva 16#091f
/ttagujarati 16#0a9f
/ttagurmukhi 16#0a1f
/tteharabic 16#0679
/ttehfinalarabic 16#fb67
/ttehinitialarabic 16#fb68
/ttehmedialarabic 16#fb69
/tthabengali 16#09a0
/tthadeva 16#0920
/tthagujarati 16#0aa0
/tthagurmukhi 16#0a20
/tturned 16#0287
/tuhiragana 16#3064
/tukatakana 16#30c4
/tukatakanahalfwidth 16#ff82
/tusmallhiragana 16#3063
/tusmallkatakana 16#30c3
/tusmallkatakanahalfwidth 16#ff6f
/twelvecircle 16#246b
/twelveparen 16#247f
/twelveperiod 16#2493
/twelveroman 16#217b
/twentycircle 16#2473
/twentyhangzhou 16#5344
/twentyparen 16#2487
/twentyperiod 16#249b
/two 16#0032
/twoarabic 16#0662
/twobengali 16#09e8
/twocircle 16#2461
/twocircleinversesansserif 16#278b
/twodeva 16#0968
/twodotenleader 16#2025
/twodotleader 16#2025
/twodotleadervertical 16#fe30
/twogujarati 16#0ae8
/twogurmukhi 16#0a68
/twohackarabic 16#0662
/twohangzhou 16#3022
/twoideographicparen 16#3221
/twoinferior 16#2082
/twomonospace 16#ff12
/twonumeratorbengali 16#09f5
/twooldstyle 16#f732
/twoparen 16#2475
/twoperiod 16#2489
/twopersian 16#06f2
/tworoman 16#2171
/twostroke 16#01bb
/twosuperior 16#00b2
/twothai 16#0e52
/twothirds 16#2154
/u 16#0075
/uacute 16#00fa
/ubar 16#0289
/ubengali 16#0989
/ubopomofo 16#3128
/ubreve 16#016d
/ucaron 16#01d4
/ucircle 16#24e4
/ucircumflex 16#00fb
/ucircumflexbelow 16#1e77
/ucyrillic 16#0443
/udattadeva 16#0951
/udblacute 16#0171
/udblgrave 16#0215
/udeva 16#0909
/udieresis 16#00fc
/udieresisacute 16#01d8
/udieresisbelow 16#1e73
/udieresiscaron 16#01da
/udieresiscyrillic 16#04f1
/udieresisgrave 16#01dc
/udieresismacron 16#01d6
/udotbelow 16#1ee5
/ugrave 16#00f9
/ugujarati 16#0a89
/ugurmukhi 16#0a09
/uhiragana 16#3046
/uhookabove 16#1ee7
/uhorn 16#01b0
/uhornacute 16#1ee9
/uhorndotbelow 16#1ef1
/uhorngrave 16#1eeb
/uhornhookabove 16#1eed
/uhorntilde 16#1eef
/uhungarumlaut 16#0171
/uhungarumlautcyrillic 16#04f3
/uinvertedbreve 16#0217
/ukatakana 16#30a6
/ukatakanahalfwidth 16#ff73
/ukcyrillic 16#0479
/ukorean 16#315c
/umacron 16#016b
/umacroncyrillic 16#04ef
/umacrondieresis 16#1e7b
/umatragurmukhi 16#0a41
/umonospace 16#ff55
/underscore 16#005f
/underscoredbl 16#2017
/underscoremonospace 16#ff3f
/underscorevertical 16#fe33
/underscorewavy 16#fe4f
/union 16#222a
/universal 16#2200
/uogonek 16#0173
/uparen 16#24b0
/upblock 16#2580
/upperdothebrew 16#05c4
/upsilon 16#03c5
/upsilondieresis 16#03cb
/upsilondieresistonos 16#03b0
/upsilonlatin 16#028a
/upsilontonos 16#03cd
/uptackbelowcmb 16#031d
/uptackmod 16#02d4
/uragurmukhi 16#0a73
/uring 16#016f
/ushortcyrillic 16#045e
/usmallhiragana 16#3045
/usmallkatakana 16#30a5
/usmallkatakanahalfwidth 16#ff69
/ustraightcyrillic 16#04af
/ustraightstrokecyrillic 16#04b1
/utilde 16#0169
/utildeacute 16#1e79
/utildebelow 16#1e75
/uubengali 16#098a
/uudeva 16#090a
/uugujarati 16#0a8a
/uugurmukhi 16#0a0a
/uumatragurmukhi 16#0a42
/uuvowelsignbengali 16#09c2
/uuvowelsigndeva 16#0942
/uuvowelsigngujarati 16#0ac2
/uvowelsignbengali 16#09c1
/uvowelsigndeva 16#0941
/uvowelsigngujarati 16#0ac1
/v 16#0076
/vadeva 16#0935
/vagujarati 16#0ab5
/vagurmukhi 16#0a35
/vakatakana 16#30f7
/vav 16#05d5
/vavdagesh 16#fb35
/vavdagesh65 16#fb35
/vavdageshhebrew 16#fb35
/vavhebrew 16#05d5
/vavholam 16#fb4b
/vavholamhebrew 16#fb4b
/vavvavhebrew 16#05f0
/vavyodhebrew 16#05f1
/vcircle 16#24e5
/vdotbelow 16#1e7f
/vecyrillic 16#0432
/veharabic 16#06a4
/vehfinalarabic 16#fb6b
/vehinitialarabic 16#fb6c
/vehmedialarabic 16#fb6d
/vekatakana 16#30f9
/venus 16#2640
/verticalbar 16#007c
/verticallineabovecmb 16#030d
/verticallinebelowcmb 16#0329
/verticallinelowmod 16#02cc
/verticallinemod 16#02c8
/vewarmenian 16#057e
/vhook 16#028b
/vikatakana 16#30f8
/viramabengali 16#09cd
/viramadeva 16#094d
/viramagujarati 16#0acd
/visargabengali 16#0983
/visargadeva 16#0903
/visargagujarati 16#0a83
/vmonospace 16#ff56
/voarmenian 16#0578
/voicediterationhiragana 16#309e
/voicediterationkatakana 16#30fe
/voicedmarkkana 16#309b
/voicedmarkkanahalfwidth 16#ff9e
/vokatakana 16#30fa
/vparen 16#24b1
/vtilde 16#1e7d
/vturned 16#028c
/vuhiragana 16#3094
/vukatakana 16#30f4
/w 16#0077
/wacute 16#1e83
/waekorean 16#3159
/wahiragana 16#308f
/wakatakana 16#30ef
/wakatakanahalfwidth 16#ff9c
/wakorean 16#3158
/wasmallhiragana 16#308e
/wasmallkatakana 16#30ee
/wattosquare 16#3357
/wavedash 16#301c
/wavyunderscorevertical 16#fe34
/wawarabic 16#0648
/wawfinalarabic 16#feee
/wawhamzaabovearabic 16#0624
/wawhamzaabovefinalarabic 16#fe86
/wbsquare 16#33dd
/wcircle 16#24e6
/wcircumflex 16#0175
/wdieresis 16#1e85
/wdotaccent 16#1e87
/wdotbelow 16#1e89
/wehiragana 16#3091
/weierstrass 16#2118
/wekatakana 16#30f1
/wekorean 16#315e
/weokorean 16#315d
/wgrave 16#1e81
/whitebullet 16#25e6
/whitecircle 16#25cb
/whitecircleinverse 16#25d9
/whitecornerbracketleft 16#300e
/whitecornerbracketleftvertical 16#fe43
/whitecornerbracketright 16#300f
/whitecornerbracketrightvertical 16#fe44
/whitediamond 16#25c7
/whitediamondcontainingblacksmalldiamond 16#25c8
/whitedownpointingsmalltriangle 16#25bf
/whitedownpointingtriangle 16#25bd
/whiteleftpointingsmalltriangle 16#25c3
/whiteleftpointingtriangle 16#25c1
/whitelenticularbracketleft 16#3016
/whitelenticularbracketright 16#3017
/whiterightpointingsmalltriangle 16#25b9
/whiterightpointingtriangle 16#25b7
/whitesmallsquare 16#25ab
/whitesmilingface 16#263a
/whitesquare 16#25a1
/whitestar 16#2606
/whitetelephone 16#260f
/whitetortoiseshellbracketleft 16#3018
/whitetortoiseshellbracketright 16#3019
/whiteuppointingsmalltriangle 16#25b5
/whiteuppointingtriangle 16#25b3
/wihiragana 16#3090
/wikatakana 16#30f0
/wikorean 16#315f
/wmonospace 16#ff57
/wohiragana 16#3092
/wokatakana 16#30f2
/wokatakanahalfwidth 16#ff66
/won 16#20a9
/wonmonospace 16#ffe6
/wowaenthai 16#0e27
/wparen 16#24b2
/wring 16#1e98
/wsuperior 16#02b7
/wturned 16#028d
/wynn 16#01bf
/x 16#0078
/xabovecmb 16#033d
/xbopomofo 16#3112
/xcircle 16#24e7
/xdieresis 16#1e8d
/xdotaccent 16#1e8b
/xeharmenian 16#056d
/xi 16#03be
/xmonospace 16#ff58
/xparen 16#24b3
/xsuperior 16#02e3
/y 16#0079
/yaadosquare 16#334e
/yabengali 16#09af
/yacute 16#00fd
/yadeva 16#092f
/yaekorean 16#3152
/yagujarati 16#0aaf
/yagurmukhi 16#0a2f
/yahiragana 16#3084
/yakatakana 16#30e4
/yakatakanahalfwidth 16#ff94
/yakorean 16#3151
/yamakkanthai 16#0e4e
/yasmallhiragana 16#3083
/yasmallkatakana 16#30e3
/yasmallkatakanahalfwidth 16#ff6c
/yatcyrillic 16#0463
/ycircle 16#24e8
/ycircumflex 16#0177
/ydieresis 16#00ff
/ydotaccent 16#1e8f
/ydotbelow 16#1ef5
/yeharabic 16#064a
/yehbarreearabic 16#06d2
/yehbarreefinalarabic 16#fbaf
/yehfinalarabic 16#fef2
/yehhamzaabovearabic 16#0626
/yehhamzaabovefinalarabic 16#fe8a
/yehhamzaaboveinitialarabic 16#fe8b
/yehhamzaabovemedialarabic 16#fe8c
/yehinitialarabic 16#fef3
/yehmedialarabic 16#fef4
/yehmeeminitialarabic 16#fcdd
/yehmeemisolatedarabic 16#fc58
/yehnoonfinalarabic 16#fc94
/yehthreedotsbelowarabic 16#06d1
/yekorean 16#3156
/yen 16#00a5
/yenmonospace 16#ffe5
/yeokorean 16#3155
/yeorinhieuhkorean 16#3186
/yerahbenyomohebrew 16#05aa
/yerahbenyomolefthebrew 16#05aa
/yericyrillic 16#044b
/yerudieresiscyrillic 16#04f9
/yesieungkorean 16#3181
/yesieungpansioskorean 16#3183
/yesieungsioskorean 16#3182
/yetivhebrew 16#059a
/ygrave 16#1ef3
/yhook 16#01b4
/yhookabove 16#1ef7
/yiarmenian 16#0575
/yicyrillic 16#0457
/yikorean 16#3162
/yinyang 16#262f
/yiwnarmenian 16#0582
/ymonospace 16#ff59
/yod 16#05d9
/yoddagesh 16#fb39
/yoddageshhebrew 16#fb39
/yodhebrew 16#05d9
/yodyodhebrew 16#05f2
/yodyodpatahhebrew 16#fb1f
/yohiragana 16#3088
/yoikorean 16#3189
/yokatakana 16#30e8
/yokatakanahalfwidth 16#ff96
/yokorean 16#315b
/yosmallhiragana 16#3087
/yosmallkatakana 16#30e7
/yosmallkatakanahalfwidth 16#ff6e
/yotgreek 16#03f3
/yoyaekorean 16#3188
/yoyakorean 16#3187
/yoyakthai 16#0e22
/yoyingthai 16#0e0d
/yparen 16#24b4
/ypogegrammeni 16#037a
/ypogegrammenigreekcmb 16#0345
/yr 16#01a6
/yring 16#1e99
/ysuperior 16#02b8
/ytilde 16#1ef9
/yturned 16#028e
/yuhiragana 16#3086
/yuikorean 16#318c
/yukatakana 16#30e6
/yukatakanahalfwidth 16#ff95
/yukorean 16#3160
/yusbigcyrillic 16#046b
/yusbigiotifiedcyrillic 16#046d
/yuslittlecyrillic 16#0467
/yuslittleiotifiedcyrillic 16#0469
/yusmallhiragana 16#3085
/yusmallkatakana 16#30e5
/yusmallkatakanahalfwidth 16#ff6d
/yuyekorean 16#318b
/yuyeokorean 16#318a
/yyabengali 16#09df
/yyadeva 16#095f
/z 16#007a
/zaarmenian 16#0566
/zacute 16#017a
/zadeva 16#095b
/zagurmukhi 16#0a5b
/zaharabic 16#0638
/zahfinalarabic 16#fec6
/zahinitialarabic 16#fec7
/zahiragana 16#3056
/zahmedialarabic 16#fec8
/zainarabic 16#0632
/zainfinalarabic 16#feb0
/zakatakana 16#30b6
/zaqefgadolhebrew 16#0595
/zaqefqatanhebrew 16#0594
/zarqahebrew 16#0598
/zayin 16#05d6
/zayindagesh 16#fb36
/zayindageshhebrew 16#fb36
/zayinhebrew 16#05d6
/zbopomofo 16#3117
/zcaron 16#017e
/zcircle 16#24e9
/zcircumflex 16#1e91
/zcurl 16#0291
/zdot 16#017c
/zdotaccent 16#017c
/zdotbelow 16#1e93
/zecyrillic 16#0437
/zedescendercyrillic 16#0499
/zedieresiscyrillic 16#04df
/zehiragana 16#305c
/zekatakana 16#30bc
/zero 16#0030
/zeroarabic 16#0660
/zerobengali 16#09e6
/zerodeva 16#0966
/zerogujarati 16#0ae6
/zerogurmukhi 16#0a66
/zerohackarabic 16#0660
/zeroinferior 16#2080
/zeromonospace 16#ff10
/zerooldstyle 16#f730
/zeropersian 16#06f0
/zerosuperior 16#2070
/zerothai 16#0e50
/zerowidthjoiner 16#feff
/zerowidthnonjoiner 16#200c
/zerowidthspace 16#200b
/zeta 16#03b6
/zhbopomofo 16#3113
/zhearmenian 16#056a
/zhebrevecyrillic 16#04c2
/zhecyrillic 16#0436
/zhedescendercyrillic 16#0497
/zhedieresiscyrillic 16#04dd
/zihiragana 16#3058
/zikatakana 16#30b8
/zinorhebrew 16#05ae
/zlinebelow 16#1e95
/zmonospace 16#ff5a
/zohiragana 16#305e
/zokatakana 16#30be
/zparen 16#24b5
/zretroflexhook 16#0290
/zstroke 16#01b6
/zuhiragana 16#305a
/zukatakana 16#30ba
.dicttomark readonly def
/currentglobal where
{pop currentglobal{setglobal}true setglobal}
{{}}
ifelse
/MacRomanEncoding .findencoding
/MacGlyphEncoding
/.notdef/.null/CR
4 index 32 95 getinterval aload pop
99 index 128 45 getinterval aload pop
/notequal/AE
/Oslash/infinity/plusminus/lessequal/greaterequal
/yen/mu1/partialdiff/summation/product
/pi/integral/ordfeminine/ordmasculine/Ohm
/ae/oslash/questiondown/exclamdown/logicalnot
/radical/florin/approxequal/increment/guillemotleft
/guillemotright/ellipsis/nbspace
174 index 203 12 getinterval aload pop
/lozenge
187 index 216 24 getinterval aload pop
/applelogo
212 index 241 7 getinterval aload pop
/overscore
220 index 249 7 getinterval aload pop
/Lslash/lslash/Scaron/scaron
/Zcaron/zcaron/brokenbar/Eth/eth
/Yacute/yacute/Thorn/thorn/minus
/multiply/onesuperior/twosuperior/threesuperior/onehalf
/onequarter/threequarters/franc/Gbreve/gbreve
/Idotaccent/Scedilla/scedilla/Cacute/cacute
/Ccaron/ccaron/dmacron
260 -1 roll pop
258 packedarray
7 1 index .registerencoding
.defineencoding
exec

%%BeginResource: file (PDF object obj_1)
1 0 obj
<<>>endobj
%%EndResource
%%EndProlog
%begin_xml_code
/pdfmark where {pop true} {false} ifelse
/currentdistillerparams where {pop currentdistillerparams
/CoreDistVersion get 5000 ge } {false} ifelse
and not {userdict /pdfmark /cleartomark load put} if
[/NamespacePush pdfmark
[/_objdef {exiftool_metadata_stream} /type /stream /OBJ pdfmark
[{exiftool_metadata_stream} 2 dict begin /Type /Metadata def
  /Subtype /XML def currentdict end /PUT pdfmark
/MetadataString 2943 string def % exact length of metadata
/TempString 100 string def
/ConsumeMetadata {
currentfile TempString readline pop pop
currentfile MetadataString readstring pop pop
} bind def
ConsumeMetadata
%begin_xml_packet: 2943
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x='adobe:ns:meta/'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#'>

 <rdf:Description rdf:about=''
  xmlns:dc='http://purl.org/dc/elements/1.1/'>
  <dc:creator>
   <rdf:Seq>
    <rdf:li>Zamzar</rdf:li>
   </rdf:Seq>
  </dc:creator>
 </rdf:Description>

 <rdf:Description rdf:about=''
  xmlns:pdf='http://ns.adobe.com/pdf/1.3/'>
  <pdf:Producer>Zamzar</pdf:Producer>
 </rdf:Description>
</rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
<?xpacket end='w'?>
%end_xml_packet
[{exiftool_metadata_stream} MetadataString /PUT pdfmark
[/Document 1 dict begin
  /Metadata {exiftool_metadata_stream} def currentdict end /BDC pdfmark
[/NamespacePop pdfmark
%end_xml_code
%%Page: 1 1
%%BeginPageSetup
4 0 obj
<</Type/Page/MediaBox [0 0 2494 1398]
/Parent 3 0 R
/Resources<</ProcSet[/PDF]
>>
/Contents 5 0 R
>>
endobj
%%EndPageSetup
/pagesave save def
5 0 obj
<</Length 89322>>stream
q 0.1 0 0 0.1 0 0 cm
q
1.37109 0 24937.3 13980 re W n
1 1 1 RG
1 1 1 rg
q 1.52998 0 0 1.52998 0 0 cm
0.896153 9137.39 m
16300 9137.39 l
16300 0 l
0.896153 0 l
f*
Q
[ 39.9878 119.964 ] 0 d
39.9878 w
1 j
0.349121 0.349121 0.349121 rg
0.349121 0.349121 0.349121 RG
6859.92 7417.66 m
6859.92 7698.09 7087.23 7925.39 7367.66 7925.39 c
10007.2 7925.39 l
10141.8 7925.39 10270.9 7871.87 10366.2 7776.68 c
10461.4 7681.45 10514.9 7552.3 10514.9 7417.66 c
10514.9 5386.8 l
10514.9 5106.37 10287.6 4879.06 10007.2 4879.06 c
7367.66 4879.06 l
7087.23 4879.06 6859.92 5106.37 6859.92 5386.8 c
h
6859.92 7417.66 m
S
1 0.898438 0.599609 RG
1 0.898438 0.599609 rg
q 1.43999 0 0 1.43999 0 0 cm
16300 4271.09 m
16300 5072.8 15606.4 5722.73 14750.8 5722.73 c
13895.2 5722.73 13201.6 5072.8 13201.6 4271.09 c
13201.6 3469.36 13895.2 2819.43 14750.8 2819.43 c
15606.4 2819.43 16300 3469.36 16300 4271.09 c
h
16300 4271.09 m
f*
Q
[ ] 0 d
13.8847 w
0 0 0 rg
0 0 0 RG
q 1.43999 0 0 1.43999 0 0 cm
16300 4271.09 m
16300 5072.8 15606.4 5722.73 14750.8 5722.73 c
13895.2 5722.73 13201.6 5072.8 13201.6 4271.09 c
13201.6 3469.36 13895.2 2819.43 14750.8 2819.43 c
15606.4 2819.43 16300 3469.36 16300 4271.09 c
h
16300 4271.09 m
S Q
q 1.38263 0 0 1.38263 0 0 cm
14330.3 4242.09 m
14330.3 4649.13 l
14385.7 4649.13 l
14599.4 4329.53 l
14599.4 4649.13 l
14651 4649.13 l
14651 4242.09 l
14595.8 4242.09 l
14382.1 4562.02 l
14382.1 4242.09 l
h
14725.2 4440.34 m
14725.2 4507.91 14743.3 4560.78 14779.7 4598.97 c
14816 4637.23 14862.8 4656.36 14920.2 4656.36 c
14957.8 4656.36 14991.6 4647.37 15021.7 4629.34 c
15051.9 4611.44 15075 4586.43 15090.8 4554.33 c
15106.6 4522.27 15114.5 4485.85 15114.5 4445.09 c
15114.5 4403.84 15106.2 4366.88 15089.6 4334.28 c
15072.9 4301.65 15049.3 4276.99 15018.7 4260.26 c
14988.2 4243.56 14955.2 4235.19 14919.8 4235.19 c
14881.6 4235.19 14847.3 4244.41 14817.1 4262.86 c
14786.9 4281.39 14764.1 4306.68 14748.5 4338.69 c
14733 4370.75 14725.2 4404.65 14725.2 4440.34 c
h
14780.8 4439.57 m
14780.8 4390.44 14793.9 4351.76 14820.3 4323.54 c
14846.7 4295.38 14879.8 4281.27 14919.6 4281.27 c
14960.2 4281.27 14993.5 4295.52 15019.7 4324 c
15045.9 4352.53 15059 4392.99 15059 4445.31 c
15059 4478.45 15053.4 4507.38 15042.2 4532.1 c
15031 4556.88 15014.6 4576.03 14993.1 4589.59 c
14971.5 4603.21 14947.3 4610.05 14920.4 4610.05 c
14882.3 4610.05 14849.5 4596.94 14822 4570.72 c
14794.5 4544.5 14780.8 4500.8 14780.8 4439.57 c
h
15183.9 4242.09 m
15183.9 4649.13 l
15324.2 4649.13 l
15355.9 4649.13 15380 4647.2 15396.7 4643.36 c
15420 4638.02 15439.9 4628.3 15456.4 4614.23 c
15477.9 4596.07 15494 4572.87 15504.6 4544.62 c
15515.2 4516.39 15520.5 4484.1 15520.5 4447.8 c
15520.5 4416.91 15516.9 4389.54 15509.6 4365.66 c
15502.5 4341.8 15493.3 4322.01 15482 4306.36 c
15470.7 4290.68 15458.3 4278.4 15444.8 4269.41 c
15431.4 4260.45 15415.2 4253.65 15396.2 4248.99 c
15377.3 4244.38 15355.6 4242.09 15330.9 4242.09 c
h
15237.8 4290.09 m
15324.8 4290.09 l
15351.6 4290.09 15372.7 4292.58 15388 4297.55 c
15403.3 4302.61 15415.4 4309.64 15424.5 4318.68 c
15437.3 4331.48 15447.2 4348.66 15454.3 4370.18 c
15461.4 4391.8 15465 4417.99 15465 4448.7 c
15465 4491.28 15458 4523.96 15444 4546.76 c
15430.1 4569.67 15413.1 4584.99 15393.1 4592.76 c
15378.7 4598.32 15355.4 4601.12 15323.3 4601.12 c
15237.8 4601.12 l
h
15595.8 4242.09 m
15595.8 4649.13 l
15890.2 4649.13 l
15890.2 4601.12 l
15649.7 4601.12 l
15649.7 4476.5 l
15874.8 4476.5 l
15874.8 4428.73 l
15649.7 4428.73 l
15649.7 4290.09 l
15899.6 4290.09 l
15899.6 4242.09 l
h
16300 4242.09 m
16250 4242.09 l
16250 4560.55 l
16238 4549.11 16222.2 4537.61 16202.7 4526.11 c
16183.2 4514.64 16165.7 4506.06 16150.1 4500.34 c
16150.1 4548.69 l
16178 4561.8 16202.4 4577.7 16223.4 4596.38 c
16244.3 4615.14 16259.1 4633.27 16267.8 4650.82 c
16300 4650.82 l
h
16300 4242.09 m
f
Q
1 0.898438 0.599609 RG
1 0.898438 0.599609 rg
q 1.01251 0 0 1.01251 0 0 cm
16300 6074.38 m
16300 7214.57 15313.6 8138.9 14096.7 8138.9 c
12879.9 8138.9 11893.5 7214.57 11893.5 6074.38 c
11893.5 4934.15 12879.9 4009.81 14096.7 4009.81 c
15313.6 4009.81 16300 4934.15 16300 6074.38 c
h
16300 6074.38 m
f*
Q
19.7469 w
0 0 0 rg
0 0 0 RG
q 1.01251 0 0 1.01251 0 0 cm
16300 6074.38 m
16300 7214.57 15313.6 8138.9 14096.7 8138.9 c
12879.9 8138.9 11893.5 7214.57 11893.5 6074.38 c
11893.5 4934.15 12879.9 4009.81 14096.7 4009.81 c
15313.6 4009.81 16300 4934.15 16300 6074.38 c
h
16300 6074.38 m
S Q
12845.4 5865.23 m
12845.4 6428.01 l
12921.9 6428.01 l
13217.5 5986.13 l
13217.5 6428.01 l
13288.9 6428.01 l
13288.9 5865.23 l
13212.5 5865.23 l
12916.9 6307.58 l
12916.9 5865.23 l
h
13391.4 6139.34 m
13391.4 6232.77 13416.5 6305.86 13466.7 6358.67 c
13516.9 6411.56 13581.7 6438.01 13661 6438.01 c
13713 6438.01 13759.8 6425.59 13801.4 6400.66 c
13843.2 6375.9 13875 6341.33 13896.9 6296.95 c
13918.8 6252.62 13929.7 6202.27 13929.7 6145.9 c
13929.7 6088.87 13918.2 6037.77 13895.2 5992.7 c
13872.1 5947.58 13839.5 5913.48 13797.2 5890.35 c
13755.1 5867.27 13709.5 5855.7 13660.6 5855.7 c
13607.7 5855.7 13560.3 5868.44 13518.6 5893.95 c
13476.8 5919.57 13445.2 5954.53 13423.6 5998.79 c
13402.1 6043.12 13391.4 6090 13391.4 6139.34 c
h
13468.3 6138.28 m
13468.3 6070.35 13486.5 6016.87 13522.9 5977.85 c
13559.4 5938.91 13605.2 5919.41 13660.2 5919.41 c
13716.3 5919.41 13762.4 5939.1 13798.6 5978.48 c
13834.9 6017.93 13853 6073.87 13853 6146.21 c
13853 6192.03 13845.2 6232.03 13829.7 6266.21 c
13814.2 6300.47 13791.6 6326.95 13761.8 6345.7 c
13732 6364.53 13698.5 6373.98 13661.3 6373.98 c
13608.6 6373.98 13563.3 6355.86 13525.3 6319.61 c
13487.3 6283.36 13468.3 6222.93 13468.3 6138.28 c
h
14025.7 5865.23 m
14025.7 6428.01 l
14219.7 6428.01 l
14263.4 6428.01 14296.8 6425.35 14319.8 6420.04 c
14352.1 6412.66 14379.6 6399.22 14402.5 6379.77 c
14432.1 6354.65 14454.3 6322.58 14469 6283.52 c
14483.7 6244.49 14491 6199.84 14491 6149.65 c
14491 6106.95 14486 6069.1 14476 6036.09 c
14466.1 6003.09 14453.4 5975.74 14437.8 5954.1 c
14422.1 5932.42 14405 5915.43 14386.4 5903.01 c
14367.9 5890.62 14345.4 5881.21 14319.2 5874.77 c
14293.1 5868.4 14263 5865.23 14228.9 5865.23 c
h
14100.2 5931.6 m
14220.5 5931.6 l
14257.5 5931.6 14286.6 5935.04 14307.8 5941.91 c
14328.9 5948.91 14345.7 5958.63 14358.2 5971.13 c
14375.9 5988.83 14389.7 6012.58 14399.5 6042.34 c
14409.4 6072.23 14414.3 6108.44 14414.3 6150.9 c
14414.3 6209.77 14404.6 6254.96 14385.3 6286.48 c
14366 6318.16 14342.5 6339.34 14314.8 6350.08 c
14294.9 6357.77 14262.8 6361.64 14218.4 6361.64 c
14100.2 6361.64 l
h
14595.1 5865.23 m
14595.1 6428.01 l
15002.2 6428.01 l
15002.2 6361.64 l
14669.6 6361.64 l
14669.6 6189.34 l
14980.9 6189.34 l
14980.9 6123.28 l
14669.6 6123.28 l
14669.6 5931.6 l
15015.2 5931.6 l
15015.2 5865.23 l
h
15671.7 5931.6 m
15671.7 5865.23 l
15299.6 5865.23 l
15299.1 5881.87 15301.8 5897.85 15307.7 5913.16 c
15317.2 5938.59 15332.4 5963.59 15353.2 5988.16 c
15374.1 6012.73 15404.3 6041.09 15443.6 6073.28 c
15504.9 6123.48 15546.2 6163.2 15567.7 6192.46 c
15589.2 6221.84 15600 6249.57 15600 6275.7 c
15600 6303.12 15590.2 6326.17 15570.5 6344.92 c
15550.9 6363.75 15525.4 6373.2 15493.9 6373.2 c
15460.7 6373.2 15434.1 6363.2 15414.1 6343.2 c
15394.1 6323.2 15384 6295.55 15383.8 6260.27 c
15312.7 6267.62 l
15317.7 6320.59 15335.9 6360.94 15367.6 6388.67 c
15399.3 6416.45 15442 6430.35 15495.5 6430.35 c
15549.6 6430.35 15592.3 6415.35 15623.8 6385.39 c
15655.2 6355.47 15670.9 6318.4 15670.9 6274.14 c
15670.9 6251.56 15666.3 6229.37 15657 6207.62 c
15647.9 6185.94 15632.6 6163.09 15611.3 6139.06 c
15589.9 6115 15554.4 6081.91 15504.7 6039.84 c
15463.3 6005.08 15436.7 5981.48 15424.9 5969.1 c
15413.1 5956.72 15403.4 5944.22 15395.7 5931.6 c
h
15671.7 5931.6 m
f
1 0.898438 0.599609 RG
1 0.898438 0.599609 rg
5582.11 6150.35 m
5582.11 7304.84 4583.32 8240.74 3351.29 8240.74 c
2119.22 8240.74 1120.47 7304.84 1120.47 6150.35 c
1120.47 4995.86 2119.22 4059.96 3351.29 4059.96 c
4583.32 4059.96 5582.11 4995.86 5582.11 6150.35 c
h
5582.11 6150.35 m
f*
19.9939 w
0 0 0 rg
0 0 0 RG
5582.11 6150.35 m
5582.11 7304.84 4583.32 8240.74 3351.29 8240.74 c
2119.22 8240.74 1120.47 7304.84 1120.47 6150.35 c
1120.47 4995.86 2119.22 4059.96 3351.29 4059.96 c
4583.32 4059.96 5582.11 4995.86 5582.11 6150.35 c
h
5582.11 6150.35 m
S
1923.63 5865.23 m
1923.63 6428.01 l
2000.2 6428.01 l
2295.74 5986.13 l
2295.74 6428.01 l
2367.11 6428.01 l
2367.11 5865.23 l
2290.74 5865.23 l
1995.2 6307.58 l
1995.2 5865.23 l
h
2469.65 6139.37 m
2469.65 6232.77 2494.73 6305.86 2544.92 6358.67 c
2595.12 6411.56 2659.88 6438.01 2739.26 6438.01 c
2791.21 6438.01 2838.01 6425.59 2879.69 6400.7 c
2921.45 6375.9 2953.24 6341.33 2975.12 6296.95 c
2996.99 6252.62 3007.93 6202.27 3007.93 6145.94 c
3007.93 6088.87 2996.41 6037.77 2973.4 5992.7 c
2950.39 5947.62 2917.73 5913.48 2875.47 5890.39 c
2833.28 5867.27 2787.73 5855.7 2738.79 5855.7 c
2685.86 5855.7 2638.55 5868.44 2596.8 5893.98 c
2555.04 5919.57 2523.36 5954.53 2501.8 5998.79 c
2480.35 6043.12 2469.65 6090 2469.65 6139.37 c
h
2546.48 6138.28 m
2546.48 6070.39 2564.73 6016.91 2601.17 5977.85 c
2637.62 5938.91 2683.36 5919.41 2738.48 5919.41 c
2794.49 5919.41 2840.63 5939.1 2876.88 5978.48 c
2913.09 6017.93 2931.21 6073.87 2931.21 6146.25 c
2931.21 6192.07 2923.48 6232.03 2907.93 6266.21 c
2892.42 6300.47 2869.77 6326.95 2840 6345.7 c
2810.2 6364.57 2776.72 6373.98 2739.57 6373.98 c
2686.88 6373.98 2641.52 6355.86 2603.52 6319.61 c
2565.51 6283.4 2546.48 6222.93 2546.48 6138.28 c
h
3103.91 5865.23 m
3103.91 6428.01 l
3297.93 6428.01 l
3341.64 6428.01 3375.04 6425.35 3398.05 6420.08 c
3430.31 6412.66 3457.85 6399.22 3480.66 6379.77 c
3510.35 6354.65 3532.54 6322.58 3547.23 6283.55 c
3561.91 6244.49 3569.26 6199.88 3569.26 6149.69 c
3569.26 6106.99 3564.26 6069.14 3554.26 6036.13 c
3544.34 6003.09 3531.6 5975.78 3515.98 5954.1 c
3500.35 5932.46 3483.24 5915.43 3464.57 5903.05 c
3446.05 5890.62 3423.67 5881.21 3397.42 5874.77 c
3371.29 5868.4 3341.17 5865.23 3307.15 5865.23 c
h
3178.44 5931.6 m
3298.71 5931.6 l
3335.78 5931.6 3364.88 5935.04 3386.02 5941.91 c
3407.15 5948.91 3423.98 5958.63 3436.48 5971.13 c
3454.18 5988.83 3467.93 6012.58 3477.7 6042.34 c
3487.62 6072.27 3492.54 6108.44 3492.54 6150.94 c
3492.54 6209.77 3482.85 6254.96 3463.48 6286.52 c
3444.22 6318.16 3420.74 6339.34 3393.05 6350.08 c
3373.16 6357.77 3341.02 6361.64 3296.68 6361.64 c
3178.44 6361.64 l
h
3673.32 5865.23 m
3673.32 6428.01 l
4080.39 6428.01 l
4080.39 6361.64 l
3747.85 6361.64 l
3747.85 6189.34 l
4059.14 6189.34 l
4059.14 6123.28 l
3747.85 6123.28 l
3747.85 5931.6 l
4093.36 5931.6 l
4093.36 5865.23 l
h
4387.07 6013.79 m
4456.25 6023.01 l
4464.18 5983.83 4477.66 5955.62 4496.72 5938.32 c
4515.78 5921.05 4538.98 5912.38 4566.37 5912.38 c
4598.87 5912.38 4626.33 5923.63 4648.71 5946.13 c
4671.21 5968.75 4682.42 5996.64 4682.42 6029.88 c
4682.42 6061.64 4672.03 6087.81 4651.21 6108.44 c
4630.47 6129.06 4604.14 6139.37 4572.15 6139.37 c
4559.14 6139.37 4542.89 6136.8 4523.44 6131.72 c
4531.09 6192.3 l
4535.66 6191.8 4539.38 6191.52 4542.19 6191.52 c
4571.64 6191.52 4598.13 6199.18 4621.68 6214.49 c
4645.2 6229.92 4656.99 6253.63 4656.99 6285.74 c
4656.99 6311.02 4648.4 6331.95 4631.21 6348.52 c
4614.14 6365.2 4591.99 6373.52 4564.8 6373.52 c
4537.97 6373.52 4515.55 6365.08 4497.66 6348.2 c
4479.73 6331.33 4468.24 6305.98 4463.13 6272.15 c
4394.1 6284.49 l
4402.54 6330.82 4421.68 6366.68 4451.56 6392.11 c
4481.56 6417.62 4518.83 6430.35 4563.4 6430.35 c
4594.14 6430.35 4622.42 6423.75 4648.24 6410.55 c
4674.06 6397.42 4693.79 6379.45 4707.42 6356.64 c
4721.17 6333.83 4728.05 6309.69 4728.05 6284.18 c
4728.05 6259.8 4721.48 6237.62 4708.36 6217.62 c
4695.35 6197.73 4676.09 6181.91 4650.59 6170.12 c
4683.79 6162.42 4709.61 6146.45 4728.05 6122.19 c
4746.48 6098.01 4755.7 6067.77 4755.7 6031.45 c
4755.7 5982.27 4737.77 5940.62 4701.95 5906.48 c
4666.13 5872.3 4620.86 5855.23 4566.05 5855.23 c
4516.6 5855.23 4475.59 5869.92 4442.97 5899.3 c
4410.39 5928.75 4391.76 5966.91 4387.07 6013.79 c
h
4387.07 6013.79 m
f
1 0.898438 0.599609 RG
1 0.898438 0.599609 rg
q 1.06209 0 0 1.06209 0 0 cm
10577.4 12464.2 m
16300 12464.2 l
16300 9751.9 l
10577.4 9751.9 l
f*
Q
18.8252 w
0 0 0 rg
0 0 0 RG
q 1.06209 0 0 1.06209 0 0 cm
10577.4 12464.2 m
16300 12464.2 l
16300 9751.9 l
10577.4 9751.9 l
h
S Q
q 1.03451 0 0 1.03451 0 0 cm
11343.9 11128.5 m
11343.9 11672.5 l
11585.1 11672.5 l
11633.6 11672.5 11670.5 11667.7 11695.7 11657.9 c
11721 11648.2 11741.2 11630.9 11756.3 11606.1 c
11771.4 11581.5 11778.9 11554.1 11778.9 11524.1 c
11778.9 11485.6 11766.4 11453.1 11741.3 11426.6 c
11716.3 11400.1 11677.8 11383.2 11625.5 11376 c
11644.6 11367 11659.1 11357.9 11669 11349 c
11690 11329.7 11710 11305.5 11728.8 11276.6 c
11823.3 11128.5 l
11732.9 11128.5 l
11660.8 11241.8 l
11639.8 11274.4 11622.5 11299.3 11608.9 11316.7 c
11595.3 11334 11583.1 11346.1 11572.4 11353.1 c
11561.6 11360 11550.6 11364.8 11539.5 11367.6 c
11531.3 11369.3 11518 11370.1 11499.4 11370.1 c
11415.9 11370.1 l
11415.9 11128.5 l
h
11415.9 11432.5 m
11570.7 11432.5 l
11603.5 11432.5 11629.2 11435.8 11647.7 11442.6 c
11666.3 11449.4 11680.5 11460.3 11690.1 11475.4 c
11699.8 11490.4 11704.6 11506.6 11704.6 11524.1 c
11704.6 11549.9 11695.3 11571.1 11676.6 11587.6 c
11657.9 11604.2 11628.5 11612.5 11588.1 11612.5 c
11415.9 11612.5 l
h
11869.7 11393.5 m
11869.7 11483.8 11894 11554.5 11942.5 11605.5 c
11991 11656.7 12053.7 11682.2 12130.3 11682.2 c
12180.6 11682.2 12225.8 11670.2 12266.1 11646.1 c
12306.5 11622.2 12337.2 11588.8 12358.3 11545.9 c
12379.5 11503 12390.1 11454.3 12390.1 11399.9 c
12390.1 11344.7 12378.9 11295.3 12356.7 11251.8 c
12334.4 11208.1 12302.9 11175.2 12262 11152.8 c
12221.2 11130.5 12177.2 11119.3 12129.9 11119.3 c
12078.8 11119.3 12033 11131.6 11992.6 11156.3 c
11952.3 11181.1 11921.7 11214.8 11900.8 11257.6 c
11880.1 11300.5 11869.7 11345.8 11869.7 11393.5 c
h
11944 11392.4 m
11944 11326.8 11961.6 11275.1 11996.9 11237.4 c
12032.1 11199.8 12076.4 11180.9 12129.6 11180.9 c
12183.7 11180.9 12228.3 11199.9 12263.4 11238 c
12298.4 11276.1 12315.9 11330.2 12315.9 11400.2 c
12315.9 11444.4 12308.4 11483.1 12293.4 11516.1 c
12278.4 11549.2 12256.5 11574.9 12227.7 11593 c
12199 11611.2 12166.6 11620.3 12130.7 11620.3 c
12079.7 11620.3 12035.9 11602.8 11999.1 11567.8 c
11962.4 11532.7 11944 11474.3 11944 11392.4 c
h
12458.4 11303.4 m
12526.3 11309.3 l
12529.5 11282.1 12537 11259.7 12548.7 11242.2 c
12560.5 11224.8 12578.7 11210.7 12603.5 11199.9 c
12628.2 11189.2 12656.1 11183.8 12687 11183.8 c
12714.5 11183.8 12738.7 11187.9 12759.8 11196 c
12780.8 11204.2 12796.5 11215.4 12806.7 11229.6 c
12817 11243.8 12822.1 11259.4 12822.1 11276.2 c
12822.1 11293.3 12817.1 11308.2 12807.2 11320.9 c
12797.3 11333.7 12781 11344.4 12758.2 11353.1 c
12743.7 11358.8 12711.3 11367.6 12661.3 11379.6 c
12611.4 11391.6 12576.4 11402.9 12556.4 11413.6 c
12530.4 11427.2 12511 11444.1 12498.2 11464.2 c
12485.6 11484.4 12479.2 11507 12479.2 11532 c
12479.2 11559.5 12487 11585.1 12502.5 11609 c
12518.1 11632.8 12540.8 11651 12570.7 11663.3 c
12600.7 11675.7 12634.1 11681.9 12670.7 11681.9 c
12711 11681.9 12746.6 11675.4 12777.4 11662.4 c
12808.2 11649.4 12831.9 11630.3 12848.4 11605.1 c
12865 11579.8 12873.9 11551.2 12875.1 11519.3 c
12806.1 11514.1 l
12802.4 11548.6 12789.8 11574.6 12768.4 11592.1 c
12747 11609.7 12715.5 11618.5 12673.7 11618.5 c
12630.1 11618.5 12598.4 11610.5 12578.4 11594.5 c
12558.5 11578.5 12548.5 11559.3 12548.5 11536.8 c
12548.5 11517.3 12555.6 11501.2 12569.8 11488.5 c
12583.6 11475.9 12619.7 11463 12678.2 11449.7 c
12736.8 11436.5 12777 11425 12798.7 11415.1 c
12830.4 11400.5 12853.8 11382 12868.9 11359.6 c
12884 11337.2 12891.6 11311.4 12891.6 11282.2 c
12891.6 11253.2 12883.3 11225.9 12866.6 11200.3 c
12850.1 11174.7 12826.2 11154.8 12795.1 11140.6 c
12764.1 11126.4 12729.2 11119.3 12690.3 11119.3 c
12641.1 11119.3 12599.8 11126.5 12566.5 11140.7 c
12533.3 11155.2 12507.2 11176.7 12488.3 11205.5 c
12469.4 11234.3 12459.4 11266.9 12458.4 11303.4 c
h
13198.9 11128.5 m
13198.9 11672.5 l
13307.2 11672.5 l
13435.9 11287.4 l
13447.8 11251.5 13456.5 11224.7 13461.9 11206.9 c
13468.2 11226.6 13477.8 11255.6 13490.9 11294 c
13621.2 11672.5 l
13718 11672.5 l
13718 11128.5 l
13648.7 11128.5 l
13648.7 11583.9 l
13490.6 11128.5 l
13425.5 11128.5 l
13268.2 11591.8 l
13268.2 11128.5 l
h
13774.5 11128.5 m
13983.4 11672.5 l
14060.9 11672.5 l
14283.6 11128.5 l
14201.7 11128.5 l
14138.1 11293.3 l
13910.7 11293.3 l
13850.9 11128.5 l
h
13931.4 11352 m
14115.9 11352 l
14059.1 11502.7 l
14041.8 11548.4 14028.9 11586 14020.5 11615.5 c
14013.6 11580.6 14003.8 11545.9 13991.2 11511.6 c
h
14316.7 11303.4 m
14384.6 11309.3 l
14387.8 11282.1 14395.3 11259.7 14407 11242.2 c
14418.8 11224.8 14437 11210.7 14461.8 11199.9 c
14486.5 11189.2 14514.4 11183.8 14545.3 11183.8 c
14572.8 11183.8 14597 11187.9 14618 11196 c
14639.1 11204.2 14654.7 11215.4 14665 11229.6 c
14675.3 11243.8 14680.4 11259.4 14680.4 11276.2 c
14680.4 11293.3 14675.4 11308.2 14665.5 11320.9 c
14655.6 11333.7 14639.3 11344.4 14616.5 11353.1 c
14602 11358.8 14569.6 11367.6 14519.6 11379.6 c
14469.7 11391.6 14434.7 11402.9 14414.7 11413.6 c
14388.7 11427.2 14369.3 11444.1 14356.5 11464.2 c
14343.8 11484.4 14337.5 11507 14337.5 11532 c
14337.5 11559.5 14345.3 11585.1 14360.8 11609 c
14376.4 11632.8 14399.1 11651 14429 11663.3 c
14459 11675.7 14492.3 11681.9 14529 11681.9 c
14569.3 11681.9 14604.9 11675.4 14635.7 11662.4 c
14666.5 11649.4 14690.2 11630.3 14706.7 11605.1 c
14723.3 11579.8 14732.2 11551.2 14733.4 11519.3 c
14664.4 11514.1 l
14660.7 11548.6 14648.1 11574.6 14626.7 11592.1 c
14605.3 11609.7 14573.8 11618.5 14532 11618.5 c
14488.4 11618.5 14456.7 11610.5 14436.7 11594.5 c
14416.8 11578.5 14406.8 11559.3 14406.8 11536.8 c
14406.8 11517.3 14413.9 11501.2 14428.1 11488.5 c
14441.9 11475.9 14478 11463 14536.5 11449.7 c
14595.1 11436.5 14635.3 11425 14657 11415.1 c
14688.7 11400.5 14712.1 11382 14727.2 11359.6 c
14742.3 11337.2 14749.9 11311.4 14749.9 11282.2 c
14749.9 11253.2 14741.6 11225.9 14724.9 11200.3 c
14708.4 11174.7 14684.5 11154.8 14653.4 11140.6 c
14622.4 11126.4 14587.5 11119.3 14548.6 11119.3 c
14499.4 11119.3 14458.1 11126.5 14424.8 11140.7 c
14391.6 11155.2 14365.5 11176.7 14346.6 11205.5 c
14327.6 11234.3 14317.7 11266.9 14316.7 11303.4 c
h
14986.6 11128.5 m
14986.6 11608.4 l
14807.3 11608.4 l
14807.3 11672.5 l
15238.6 11672.5 l
15238.6 11608.4 l
15058.6 11608.4 l
15058.6 11128.5 l
h
15313.9 11128.5 m
15313.9 11672.5 l
15707.4 11672.5 l
15707.4 11608.4 l
15385.9 11608.4 l
15385.9 11441.8 l
15686.9 11441.8 l
15686.9 11377.9 l
15385.9 11377.9 l
15385.9 11192.7 l
15719.9 11192.7 l
15719.9 11128.5 l
h
15820.6 11128.5 m
15820.6 11672.5 l
16061.7 11672.5 l
16110.3 11672.5 16147.1 11667.7 16172.4 11657.9 c
16197.7 11648.2 16217.8 11630.9 16232.9 11606.1 c
16248 11581.5 16255.6 11554.1 16255.6 11524.1 c
16255.6 11485.6 16243.1 11453.1 16218 11426.6 c
16193 11400.1 16154.4 11383.2 16102.2 11376 c
16121.3 11367 16135.8 11357.9 16145.7 11349 c
16166.7 11329.7 16186.6 11305.5 16205.5 11276.6 c
16300 11128.5 l
16209.5 11128.5 l
16137.5 11241.8 l
16116.5 11274.4 16099.2 11299.3 16085.6 11316.7 c
16072 11334 16059.8 11346.1 16049 11353.1 c
16038.3 11360 16027.3 11364.8 16016.1 11367.6 c
16008 11369.3 15994.6 11370.1 15976.1 11370.1 c
15892.6 11370.1 l
15892.6 11128.5 l
h
15892.6 11432.5 m
16047.4 11432.5 l
16080.2 11432.5 16105.9 11435.8 16124.4 11442.6 c
16143 11449.4 16157.2 11460.3 16166.8 11475.4 c
16176.5 11490.4 16181.3 11506.6 16181.3 11524.1 c
16181.3 11549.9 16172 11571.1 16153.2 11587.6 c
16134.6 11604.2 16105.1 11612.5 16064.8 11612.5 c
15892.6 11612.5 l
h
15892.6 11432.5 m
f
Q
[ 159.951 119.964 ] 0 d
39.9878 w
14273.1 8480.66 m
14273.1 9299.06 l
14273.7 9299.06 l
14273.7 10117.3 l
S
14207 8480.66 m
14273.1 8299.18 l
14339.1 8480.66 l
h
14207 8480.66 m
f*
[ ] 0 d
0 j
14207 8480.66 m
14273.1 8299.18 l
14339.1 8480.66 l
h
14207 8480.66 m
S
14339.7 10117.3 m
14273.7 10298.8 l
14207.7 10117.3 l
h
14339.7 10117.3 m
f*
14339.7 10117.3 m
14273.7 10298.8 l
14207.7 10117.3 l
h
14339.7 10117.3 m
S
[ 122.744 92.0577 ] 0 d
30.6859 w
1 j
q 1.30313 0 0 1.30313 0 0 cm
16300 6507.89 m
16300 7030.34 l
2571.84 7030.34 l
2571.84 6507.39 l
S Q
q 1.30719 0 0 1.30719 0 0 cm
16199 6487.72 m
16249.5 6348.88 l
16300 6487.72 l
h
16199 6487.72 m
f*
Q
[ ] 0 d
30.5908 w
0 j
q 1.30719 0 0 1.30719 0 0 cm
16199 6487.72 m
16249.5 6348.88 l
16300 6487.72 l
h
16199 6487.72 m
S Q
3285.39 8480 m
3351.45 8298.55 l
3417.5 8480 l
h
3285.39 8480 m
f*
39.9878 w
3285.39 8480 m
3351.45 8298.55 l
3417.5 8480 l
h
3285.39 8480 m
S
1 1 1 RG
1 1 1 rg
q 1.20965 0 0 1.20965 0 0 cm
16300 1183.42 m
16300 1687.15 15623.6 2095.48 14789.3 2095.48 c
13954.9 2095.48 13278.5 1687.15 13278.5 1183.42 c
13278.5 679.693 13954.9 271.353 14789.3 271.353 c
15623.6 271.353 16300 679.693 16300 1183.42 c
h
16300 1183.42 m
f*
Q
16.5287 w
1 j
0 0 0 rg
0 0 0 RG
q 1.20965 0 0 1.20965 0 0 cm
16300 1183.42 m
16300 1687.15 15623.6 2095.48 14789.3 2095.48 c
13954.9 2095.48 13278.5 1687.15 13278.5 1183.42 c
13278.5 679.693 13954.9 271.353 14789.3 271.353 c
15623.6 271.353 16300 679.693 16300 1183.42 c
h
16300 1183.42 m
S Q
q 1.149 0 0 1.149 0 0 cm
15011.2 1046.83 m
15001.1 997.465 l
14986.6 993.66 14972.6 991.757 14959 991.757 c
14935 991.757 14915.9 997.638 14901.6 1009.43 c
14890.9 1018.31 14885.6 1030.44 14885.6 1045.88 c
14885.6 1053.66 14888.5 1071.62 14894.3 1099.69 c
14937.4 1305.79 l
14889.5 1305.79 l
14899.2 1352.57 l
14947 1352.57 l
14965.4 1439.83 l
15034.6 1481.58 l
15007.5 1352.57 l
15066.9 1352.57 l
15057 1305.79 l
14997.9 1305.79 l
14956.7 1109.62 l
14951.6 1084.71 14949.1 1069.78 14949.1 1064.88 c
14949.1 1057.74 14951.1 1052.27 14955.2 1048.47 c
14959.3 1044.72 14966.1 1042.89 14975.5 1042.89 c
14988.8 1042.89 15000.7 1044.18 15011.2 1046.83 c
h
15070.7 1132.47 m
15070.7 1201.72 15091.1 1259.04 15131.9 1304.43 c
15165.5 1341.86 15209.6 1360.59 15264.1 1360.59 c
15306.9 1360.59 15341.4 1347.23 15367.6 1320.48 c
15393.8 1293.75 15406.9 1257.68 15406.9 1212.26 c
15406.9 1171.47 15398.6 1133.56 15382.1 1098.47 c
15365.6 1063.39 15342.2 1036.5 15311.7 1017.73 c
15281.4 999.066 15249.4 989.72 15215.7 989.72 c
15188.1 989.72 15162.9 995.602 15140.3 1007.4 c
15117.7 1019.26 15100.5 1035.99 15088.5 1057.54 c
15076.6 1079.13 15070.7 1104.08 15070.7 1132.47 c
h
15131.2 1138.46 m
15131.2 1105 15139.2 1079.64 15155.2 1062.3 c
15171.3 1045.1 15191.6 1036.5 15216.3 1036.5 c
15229.2 1036.5 15242 1039.12 15254.8 1044.38 c
15267.4 1049.62 15279.2 1057.61 15290.1 1068.28 c
15301.1 1079 15310.4 1091.2 15318.1 1104.86 c
15325.8 1118.56 15332 1133.29 15336.6 1149.06 c
15343.6 1171.15 15347.1 1192.34 15347.1 1212.53 c
15347.1 1244.63 15338.9 1269.51 15322.7 1287.16 c
15306.6 1304.93 15286.3 1313.81 15261.8 1313.81 c
15242.9 1313.81 15225.6 1309.28 15210 1300.21 c
15194.4 1291.23 15180.4 1278.08 15167.7 1260.68 c
15155.2 1243.33 15145.9 1223.14 15140 1200.02 c
15134.1 1177.01 15131.2 1156.47 15131.2 1138.46 c
h
15410.8 861.79 m
15513.4 1352.57 l
15569.1 1352.57 l
15558.8 1303.2 l
15579.6 1324.79 15598.1 1339.75 15614.4 1348.08 c
15630.8 1356.41 15648.2 1360.59 15666.5 1360.59 c
15700.3 1360.59 15728.3 1348.25 15750.6 1323.6 c
15772.9 1299.06 15784.1 1263.83 15784.1 1217.97 c
15784.1 1180.98 15778 1147.29 15765.7 1116.83 c
15753.5 1086.47 15738.4 1062.02 15720.6 1043.57 c
15702.7 1025.07 15684.7 1011.48 15666.4 1002.77 c
15648.1 994.072 15629.5 989.72 15610.3 989.72 c
15567.7 989.72 15534.8 1011.34 15511.4 1054.58 c
15471.3 861.79 l
h
15530.4 1142.81 m
15530.4 1116.26 15532.3 1097.83 15536.1 1087.59 c
15541.7 1073.11 15550.9 1061.42 15563.6 1052.54 c
15576.3 1043.64 15591 1039.22 15607.6 1039.22 c
15642.4 1039.22 15670.5 1058.73 15691.9 1097.8 c
15713.3 1136.96 15724 1176.87 15724 1217.56 c
15724 1247.65 15716.8 1270.9 15702.4 1287.29 c
15688 1303.71 15670.1 1311.9 15648.7 1311.9 c
15633.4 1311.9 15619.1 1307.83 15606 1299.67 c
15592.9 1291.51 15580.7 1279.37 15569.4 1263.25 c
15558.2 1247.11 15548.8 1227.35 15541.4 1203.96 c
15534.1 1180.57 15530.4 1160.21 15530.4 1142.81 c
h
15907.1 1419.16 m
15921.5 1487.57 l
15981.6 1487.57 l
15967.2 1419.16 l
h
15818.8 997.743 m
15893.1 1352.57 l
15953.6 1352.57 l
15879.3 997.743 l
h
16218.2 1127.03 m
16278.7 1120.77 l
16263.5 1076.38 16242 1043.44 16214 1021.95 c
16186 1000.46 16154.2 989.72 16118.5 989.72 c
16080 989.72 16048.8 1002.19 16024.9 1027.12 c
16000.9 1052.14 15989 1087.01 15989 1131.79 c
15989 1170.48 15996.6 1208.55 16011.9 1245.99 c
16027.3 1283.42 16049.4 1311.87 16078 1331.35 c
16106.7 1350.83 16139.3 1360.59 16176 1360.59 c
16214.1 1360.59 16244.3 1349.85 16266.5 1328.36 c
16288.9 1306.87 16300 1278.42 16300 1242.99 c
16240.6 1239.05 l
16240.3 1261.52 16233.7 1279.1 16220.9 1291.78 c
16208.1 1304.5 16191.2 1310.82 16170.3 1310.82 c
16146 1310.82 16125 1303.13 16107.1 1287.7 c
16089.3 1272.4 16075.4 1249.05 16065.2 1217.7 c
16055.1 1186.42 16050 1156.34 16050 1127.44 c
16050 1097.08 16056.7 1074.33 16070 1059.17 c
16083.4 1044.04 16099.9 1036.5 16119.6 1036.5 c
16139.2 1036.5 16157.9 1043.98 16175.9 1058.9 c
16193.8 1073.86 16207.9 1096.57 16218.2 1127.03 c
h
16218.2 1127.03 m
f
Q
[ 159.951 119.964 ] 0 d
39.9878 w
0.349121 0.349121 0.349121 rg
0.349121 0.349121 0.349121 RG
8686.52 8165.31 m
8681.41 9540.62 l
S
8620.47 8165.08 m
8687.19 7983.83 l
8752.54 8165.55 l
h
8620.47 8165.08 m
f*
[ ] 0 d
0 j
8620.47 8165.08 m
8687.19 7983.83 l
8752.54 8165.55 l
h
8620.47 8165.08 m
S
[ 145.737 109.303 ] 0 d
36.4342 w
1 j
q 1.09754 0 0 1.09754 0 0 cm
16300 2528.14 m
16300 7982.93 l
S Q
q 1.10159 0 0 1.10159 0 0 cm
16180.1 2518.84 m
16240 2354.13 l
16300 2518.84 l
h
16180.1 2518.84 m
f*
Q
[ ] 0 d
36.3001 w
0 j
q 1.10159 0 0 1.10159 0 0 cm
16180.1 2518.84 m
16240 2354.13 l
16300 2518.84 l
h
16180.1 2518.84 m
S Q
1 1 1 RG
1 1 1 rg
6852.03 8854.37 3804.84 889.18 re
f*
0 0 0 RG
0 0 0 rg
7043.44 9077.77 m
7043.44 9388.79 l
7090.63 9388.79 l
7090.63 9345.2 l
7100.39 9360.39 7113.36 9372.62 7129.49 9381.91 c
7145.74 9391.17 7164.22 9395.82 7184.96 9395.82 c
7207.97 9395.82 7226.84 9391.02 7241.48 9381.45 c
7256.29 9371.95 7266.72 9358.63 7272.73 9341.45 c
7297.42 9377.7 7329.45 9395.82 7368.79 9395.82 c
7399.73 9395.82 7423.48 9387.27 7440.04 9370.2 c
7456.6 9353.12 7464.88 9326.8 7464.88 9291.29 c
7464.88 9077.77 l
7412.54 9077.77 l
7412.54 9273.67 l
7412.54 9294.8 7410.82 9310 7407.38 9319.26 c
7403.95 9328.52 7397.77 9335.98 7388.79 9341.6 c
7379.84 9347.34 7369.26 9350.2 7357.11 9350.2 c
7335.23 9350.2 7317.07 9342.89 7302.58 9328.32 c
7288.2 9313.75 7281.02 9290.47 7281.02 9258.52 c
7281.02 9077.77 l
7228.24 9077.77 l
7228.24 9279.88 l
7228.24 9303.32 7223.91 9320.86 7215.27 9332.54 c
7206.72 9344.3 7192.73 9350.2 7173.24 9350.2 c
7158.36 9350.2 7144.61 9346.29 7131.99 9338.48 c
7119.41 9330.66 7110.31 9319.22 7104.69 9304.1 c
7099.06 9289.1 7096.25 9267.46 7096.25 9239.14 c
7096.25 9077.77 l
h
7746.17 9116.21 m
7726.56 9099.53 7707.73 9087.77 7689.61 9080.9 c
7671.6 9074.14 7652.23 9070.74 7631.48 9070.74 c
7597.34 9070.74 7571.09 9079.06 7552.77 9095.74 c
7534.45 9112.5 7525.27 9133.87 7525.27 9159.77 c
7525.27 9175 7528.71 9188.87 7535.59 9201.48 c
7542.58 9214.1 7551.68 9224.18 7562.93 9231.8 c
7574.18 9239.37 7586.84 9245.16 7600.9 9249.14 c
7611.21 9251.84 7626.8 9254.49 7647.73 9257.11 c
7690.23 9262.11 7721.52 9268.12 7741.64 9275.2 c
7741.84 9282.38 7741.95 9286.99 7741.95 9288.95 c
7741.95 9310.43 7736.99 9325.55 7727.11 9334.41 c
7713.55 9346.29 7693.52 9352.23 7666.95 9352.23 c
7642.19 9352.23 7623.87 9347.85 7611.99 9339.1 c
7600.2 9330.47 7591.52 9315.12 7585.9 9293.01 c
7534.34 9300.04 l
7539.02 9322.11 7546.72 9339.92 7557.46 9353.48 c
7568.2 9367.11 7583.71 9377.58 7604.02 9384.88 c
7624.34 9392.15 7647.85 9395.82 7674.61 9395.82 c
7701.17 9395.82 7722.73 9392.7 7739.3 9386.45 c
7755.94 9380.2 7768.16 9372.3 7775.98 9362.85 c
7783.79 9353.36 7789.26 9341.45 7792.38 9327.07 c
7794.18 9318.01 7795.04 9301.76 7795.04 9278.32 c
7795.04 9208.05 l
7795.04 9159.1 7796.13 9128.12 7798.32 9115.12 c
7800.63 9102.11 7805.08 9089.65 7811.76 9077.77 c
7756.6 9077.77 l
7751.21 9088.71 7747.73 9101.52 7746.17 9116.21 c
h
7741.64 9233.83 m
7722.58 9226.02 7693.87 9219.41 7655.55 9213.98 c
7633.91 9210.86 7618.59 9207.3 7609.65 9203.36 c
7600.66 9199.49 7593.75 9193.83 7588.87 9186.33 c
7583.95 9178.83 7581.52 9170.47 7581.52 9161.17 c
7581.52 9147.11 7586.84 9135.43 7597.46 9126.05 c
7608.09 9116.68 7623.63 9111.99 7644.14 9111.99 c
7664.45 9111.99 7682.54 9116.41 7698.36 9125.27 c
7714.18 9134.22 7725.78 9146.41 7733.2 9161.8 c
7738.83 9173.79 7741.64 9191.37 7741.64 9214.61 c
h
7876.68 9077.77 m
7876.68 9388.79 l
7924.18 9388.79 l
7924.18 9344.57 l
7946.95 9378.71 7980 9395.82 8023.2 9395.82 c
8041.95 9395.82 8059.18 9392.42 8074.88 9385.66 c
8090.63 9378.98 8102.38 9370.2 8110.2 9359.26 c
8118.01 9348.32 8123.48 9335.35 8126.6 9320.35 c
8128.48 9310.59 8129.41 9293.44 8129.41 9268.98 c
8129.41 9077.77 l
8076.76 9077.77 l
8076.76 9266.95 l
8076.76 9288.48 8074.69 9304.57 8070.55 9315.2 c
8066.48 9325.82 8059.18 9334.3 8048.67 9340.66 c
8038.24 9347.03 8026.02 9350.2 8011.95 9350.2 c
7989.57 9350.2 7970.2 9343.05 7953.83 9328.79 c
7937.62 9314.53 7929.49 9287.5 7929.49 9247.73 c
7929.49 9077.77 l
h
8413.32 9116.21 m
8393.75 9099.53 8374.92 9087.77 8356.8 9080.9 c
8338.79 9074.14 8319.41 9070.74 8298.67 9070.74 c
8264.53 9070.74 8238.28 9079.06 8219.96 9095.74 c
8201.64 9112.5 8192.46 9133.87 8192.46 9159.77 c
8192.46 9175 8195.9 9188.87 8202.77 9201.48 c
8209.77 9214.1 8218.87 9224.18 8230.12 9231.8 c
8241.37 9239.37 8254.02 9245.16 8268.05 9249.14 c
8278.36 9251.84 8293.98 9254.49 8314.92 9257.11 c
8357.42 9262.11 8388.71 9268.12 8408.79 9275.2 c
8409.02 9282.38 8409.1 9286.99 8409.1 9288.95 c
8409.1 9310.43 8404.18 9325.55 8394.3 9334.41 c
8380.74 9346.29 8360.7 9352.23 8334.14 9352.23 c
8309.38 9352.23 8291.02 9347.85 8279.14 9339.1 c
8267.38 9330.47 8258.71 9315.12 8253.09 9293.01 c
8201.52 9300.04 l
8206.21 9322.11 8213.91 9339.92 8224.65 9353.48 c
8235.35 9367.11 8250.9 9377.58 8271.17 9384.88 c
8291.48 9392.15 8315.04 9395.82 8341.8 9395.82 c
8368.36 9395.82 8389.92 9392.7 8406.45 9386.45 c
8423.13 9380.2 8435.35 9372.3 8443.16 9362.85 c
8450.98 9353.36 8456.45 9341.45 8459.57 9327.07 c
8461.33 9318.01 8462.23 9301.76 8462.23 9278.32 c
8462.23 9208.05 l
8462.23 9159.1 8463.32 9128.12 8465.51 9115.12 c
8467.81 9102.11 8472.27 9089.65 8478.95 9077.77 c
8423.79 9077.77 l
8418.4 9088.71 8414.88 9101.52 8413.32 9116.21 c
h
8408.79 9233.83 m
8389.77 9226.02 8361.05 9219.41 8322.73 9213.98 c
8301.09 9210.86 8285.78 9207.3 8276.8 9203.36 c
8267.85 9199.49 8260.94 9193.83 8256.05 9186.33 c
8251.13 9178.83 8248.71 9170.47 8248.71 9161.17 c
8248.71 9147.11 8254.02 9135.43 8264.65 9126.05 c
8275.23 9116.68 8290.82 9111.99 8311.33 9111.99 c
8331.64 9111.99 8349.73 9116.41 8365.55 9125.27 c
8381.37 9134.22 8392.97 9146.41 8400.35 9161.8 c
8405.98 9173.79 8408.79 9191.37 8408.79 9214.61 c
h
8534.18 9051.99 m
8585.43 9044.34 l
8587.62 9028.52 8593.59 9017.03 8603.36 9009.84 c
8616.41 9000.04 8634.26 8995.16 8656.95 8995.16 c
8681.33 8995.16 8700.12 9000.04 8713.36 9009.84 c
8726.68 9019.61 8735.66 9033.24 8740.35 9050.74 c
8743.16 9061.56 8744.49 9084.18 8744.26 9118.55 c
8721.13 9091.37 8692.42 9077.77 8658.05 9077.77 c
8615.35 9077.77 8582.3 9093.2 8558.87 9124.02 c
8535.43 9154.92 8523.71 9191.95 8523.71 9235.08 c
8523.71 9264.77 8529.06 9292.15 8539.8 9317.23 c
8550.51 9342.34 8566.09 9361.68 8586.52 9375.35 c
8606.91 9388.98 8630.86 9395.82 8658.36 9395.82 c
8695.12 9395.82 8725.43 9380.98 8749.26 9351.29 c
8749.26 9388.79 l
8797.85 9388.79 l
8797.85 9119.96 l
8797.85 9071.52 8792.89 9037.23 8783.01 9017.03 c
8773.13 8996.8 8757.5 8980.86 8736.13 8969.22 c
8714.8 8957.46 8688.52 8951.56 8657.27 8951.56 c
8620.2 8951.56 8590.2 8959.88 8567.3 8976.56 c
8544.49 8993.2 8533.44 9018.36 8534.18 9051.99 c
h
8577.93 9238.83 m
8577.93 9198.01 8585.98 9168.2 8602.11 9149.45 c
8618.36 9130.74 8638.67 9121.37 8663.05 9121.37 c
8687.3 9121.37 8707.62 9130.66 8723.95 9149.3 c
8740.43 9168.05 8748.63 9197.3 8748.63 9237.11 c
8748.63 9275.2 8740.16 9303.91 8723.16 9323.16 c
8706.33 9342.54 8686.02 9352.23 8662.27 9352.23 c
8638.83 9352.23 8618.91 9342.7 8602.42 9323.63 c
8586.09 9304.57 8577.93 9276.29 8577.93 9238.83 c
h
9090.35 9177.89 m
9144.88 9171.17 l
9136.33 9139.41 9120.39 9114.73 9097.07 9097.15 c
9073.87 9079.53 9044.18 9070.74 9008.05 9070.74 c
8962.62 9070.74 8926.6 9084.77 8899.96 9112.77 c
8873.28 9140.78 8859.96 9180.08 8859.96 9230.7 c
8859.96 9282.97 8873.4 9323.52 8900.27 9352.38 c
8927.23 9381.33 8962.23 9395.82 9005.23 9395.82 c
9046.76 9395.82 9080.7 9381.64 9107.07 9353.32 c
9133.4 9325.08 9146.6 9285.27 9146.6 9233.83 c
9146.6 9230.7 9146.48 9226.02 9146.29 9219.77 c
8914.3 9219.77 l
8916.29 9185.62 8925.98 9159.45 8943.36 9141.37 c
8960.74 9123.24 8982.42 9114.18 9008.36 9114.18 c
9027.73 9114.18 9044.22 9119.22 9057.85 9129.34 c
9071.52 9139.53 9082.34 9155.7 9090.35 9177.89 c
h
8917.27 9263.2 m
9090.98 9263.2 l
9088.67 9289.34 9082.07 9308.95 9071.13 9322.07 c
9054.26 9342.38 9032.46 9352.54 9005.7 9352.54 c
8981.52 9352.54 8961.17 9344.41 8944.61 9328.16 c
8928.16 9312.03 8919.06 9290.35 8917.27 9263.2 c
h
9211.05 9077.77 m
9211.05 9388.79 l
9258.2 9388.79 l
9258.2 9345.2 l
9268.01 9360.39 9280.98 9372.62 9297.11 9381.91 c
9313.36 9391.17 9331.84 9395.82 9352.58 9395.82 c
9375.59 9395.82 9394.41 9391.02 9409.1 9381.45 c
9423.91 9371.95 9434.3 9358.63 9440.35 9341.45 c
9465.04 9377.7 9497.03 9395.82 9536.41 9395.82 c
9567.34 9395.82 9591.09 9387.27 9607.66 9370.2 c
9624.18 9353.12 9632.46 9326.8 9632.46 9291.29 c
9632.46 9077.77 l
9580.16 9077.77 l
9580.16 9273.67 l
9580.16 9294.8 9578.44 9310 9575 9319.26 c
9571.56 9328.52 9565.35 9335.98 9556.41 9341.6 c
9547.46 9347.34 9536.88 9350.2 9524.69 9350.2 c
9502.81 9350.2 9484.65 9342.89 9470.2 9328.32 c
9455.82 9313.75 9448.63 9290.47 9448.63 9258.52 c
9448.63 9077.77 l
9395.82 9077.77 l
9395.82 9279.88 l
9395.82 9303.32 9391.52 9320.86 9382.85 9332.54 c
9374.34 9344.3 9360.31 9350.2 9340.86 9350.2 c
9325.94 9350.2 9312.23 9346.29 9299.61 9338.48 c
9286.99 9330.66 9277.89 9319.22 9272.27 9304.1 c
9266.64 9289.1 9263.83 9267.46 9263.83 9239.14 c
9263.83 9077.77 l
h
9923.59 9177.89 m
9978.13 9171.17 l
9969.57 9139.41 9953.63 9114.73 9930.31 9097.15 c
9907.11 9079.53 9877.42 9070.74 9841.29 9070.74 c
9795.86 9070.74 9759.84 9084.77 9733.2 9112.77 c
9706.52 9140.78 9693.2 9180.08 9693.2 9230.7 c
9693.2 9282.97 9706.64 9323.52 9733.52 9352.38 c
9760.47 9381.33 9795.47 9395.82 9838.48 9395.82 c
9880 9395.82 9913.95 9381.64 9940.31 9353.32 c
9966.64 9325.08 9979.84 9285.27 9979.84 9233.83 c
9979.84 9230.7 9979.73 9226.02 9979.53 9219.77 c
9747.54 9219.77 l
9749.53 9185.62 9759.22 9159.45 9776.6 9141.37 c
9793.98 9123.24 9815.66 9114.18 9841.6 9114.18 c
9860.98 9114.18 9877.46 9119.22 9891.09 9129.34 c
9904.77 9139.53 9915.59 9155.7 9923.59 9177.89 c
h
9750.51 9263.2 m
9924.22 9263.2 l
9921.91 9289.34 9915.31 9308.95 9904.38 9322.07 c
9887.5 9342.38 9865.7 9352.54 9838.95 9352.54 c
9814.77 9352.54 9794.41 9344.41 9777.85 9328.16 c
9761.41 9312.03 9752.3 9290.35 9750.51 9263.2 c
h
10044.3 9077.77 m
10044.3 9388.79 l
10091.8 9388.79 l
10091.8 9344.57 l
10114.6 9378.71 10147.6 9395.82 10190.8 9395.82 c
10209.5 9395.82 10226.8 9392.42 10242.5 9385.66 c
10258.2 9378.98 10270 9370.2 10277.8 9359.26 c
10285.6 9348.32 10291.1 9335.35 10294.2 9320.35 c
10296.1 9310.59 10297 9293.44 10297 9268.98 c
10297 9077.77 l
10244.4 9077.77 l
10244.4 9266.95 l
10244.4 9288.48 10242.3 9304.57 10238.1 9315.2 c
10234.1 9325.82 10226.8 9334.3 10216.3 9340.66 c
10205.9 9347.03 10193.6 9350.2 10179.6 9350.2 c
10157.2 9350.2 10137.8 9343.05 10121.4 9328.79 c
10105.2 9314.53 10097.1 9287.5 10097.1 9247.73 c
10097.1 9077.77 l
h
10493 9124.96 m
10500.7 9078.4 l
10485.7 9075.27 10472.5 9073.71 10460.8 9073.71 c
10441.6 9073.71 10426.8 9076.72 10416.3 9082.77 c
10405.8 9088.83 10398.3 9096.72 10393.9 9106.52 c
10389.7 9116.41 10387.5 9137.19 10387.5 9168.83 c
10387.5 9347.85 l
10349 9347.85 l
10349 9388.79 l
10387.5 9388.79 l
10387.5 9465.78 l
10440 9497.5 l
10440 9388.79 l
10493 9388.79 l
10493 9347.85 l
10440 9347.85 l
10440 9165.86 l
10440 9150.86 10440.9 9141.25 10442.7 9136.99 c
10444.6 9132.7 10447.6 9129.26 10451.8 9126.68 c
10456 9124.18 10462.1 9122.93 10469.9 9122.93 c
10475.7 9122.93 10483.4 9123.59 10493 9124.96 c
h
10493 9124.96 m
f
1 1 1 RG
1 1 1 rg
q 1.21425 0 0 1.21425 0 0 cm
13166.5 7947.81 m
16300 7947.81 l
16300 7215.52 l
13166.5 7215.52 l
f*
Q
0 0 0 RG
0 0 0 rg
q 1.20466 0 0 1.20466 0 0 cm
13430.2 7458.35 m
13430.2 7716.53 l
13469.3 7716.53 l
13469.3 7680.34 l
13477.4 7692.95 13488.2 7703.14 13501.6 7710.82 c
13515.1 7718.5 13530.4 7722.36 13547.6 7722.36 c
13566.7 7722.36 13582.4 7718.38 13594.6 7710.43 c
13606.9 7702.55 13615.5 7691.49 13620.5 7677.23 c
13641 7707.32 13667.6 7722.36 13700.2 7722.36 c
13725.9 7722.36 13745.6 7715.27 13759.4 7701.1 c
13773.1 7686.93 13780 7665.1 13780 7635.59 c
13780 7458.35 l
13736.6 7458.35 l
13736.6 7620.96 l
13736.6 7638.51 13735.1 7651.12 13732.3 7658.81 c
13729.4 7666.53 13724.3 7672.69 13716.8 7677.35 c
13709.4 7682.12 13700.6 7684.49 13690.5 7684.49 c
13672.4 7684.49 13657.3 7678.43 13645.3 7666.33 c
13633.3 7654.24 13627.4 7634.91 13627.4 7608.39 c
13627.4 7458.35 l
13583.5 7458.35 l
13583.5 7626.15 l
13583.5 7645.58 13580 7660.17 13572.8 7669.83 c
13565.7 7679.6 13554.1 7684.49 13537.9 7684.49 c
13525.6 7684.49 13514.1 7681.25 13503.7 7674.77 c
13493.2 7668.28 13485.6 7658.78 13481 7646.22 c
13476.3 7633.81 13474 7615.81 13474 7592.3 c
13474 7458.35 l
h
14013.5 7490.26 m
13997.2 7476.41 13981.6 7466.65 13966.6 7460.94 c
13951.6 7455.34 13935.5 7452.51 13918.3 7452.51 c
13890 7452.51 13868.2 7459.42 13853 7473.26 c
13837.8 7487.18 13830.1 7504.91 13830.1 7526.45 c
13830.1 7539.06 13833 7550.61 13838.7 7561.05 c
13844.5 7571.51 13852.1 7579.88 13861.4 7586.21 c
13870.7 7592.53 13881.2 7597.33 13892.9 7600.6 c
13901.4 7602.84 13914.4 7605.04 13931.8 7607.22 c
13967.1 7611.37 13993 7616.37 14009.7 7622.27 c
14009.9 7628.23 14010 7632.02 14010 7633.68 c
14010 7651.48 14005.9 7664.06 13997.7 7671.39 c
13986.4 7681.25 13969.8 7686.18 13947.7 7686.18 c
13927.2 7686.18 13912 7682.54 13902.1 7675.28 c
13892.3 7668.11 13885.1 7655.37 13880.5 7637.02 c
13837.7 7642.85 l
13841.5 7661.21 13847.9 7675.96 13856.9 7687.22 c
13865.7 7698.53 13878.6 7707.22 13895.5 7713.28 c
13912.3 7719.32 13931.9 7722.36 13954.1 7722.36 c
13976.2 7722.36 13994.1 7719.77 14007.8 7714.58 c
14021.6 7709.4 14031.8 7702.87 14038.3 7694.99 c
14044.7 7687.12 14049.3 7677.23 14051.9 7665.29 c
14053.3 7657.77 14054.1 7644.28 14054.1 7624.86 c
14054.1 7566.49 l
14054.1 7525.86 14055 7500.15 14056.8 7489.35 c
14058.7 7478.55 14062.4 7468.21 14068 7458.35 c
14022.2 7458.35 l
14017.7 7467.43 14014.8 7478.06 14013.5 7490.26 c
h
14009.7 7587.89 m
13993.9 7581.41 13970.1 7575.93 13938.3 7571.42 c
13920.3 7568.83 13907.6 7565.88 13900.1 7562.6 c
13892.7 7559.42 13887 7554.69 13882.9 7548.46 c
13878.8 7542.24 13876.8 7535.3 13876.8 7527.61 c
13876.8 7515.94 13881.2 7506.21 13890.1 7498.43 c
13898.9 7490.65 13911.8 7486.75 13928.8 7486.75 c
13945.7 7486.75 13960.7 7490.42 13973.8 7497.78 c
13986.9 7505.21 13996.6 7515.33 14002.7 7528.1 c
14007.4 7538.05 14009.7 7552.68 14009.7 7571.94 c
h
14121.8 7458.35 m
14121.8 7716.53 l
14161.2 7716.53 l
14161.2 7679.82 l
14180.2 7708.16 14207.6 7722.36 14243.5 7722.36 c
14259 7722.36 14273.3 7719.54 14286.4 7713.94 c
14299.4 7708.39 14309.2 7701.1 14315.7 7692.01 c
14322.2 7682.93 14326.7 7672.16 14329.3 7659.71 c
14330.9 7651.61 14331.6 7637.37 14331.6 7617.08 c
14331.6 7458.35 l
14287.9 7458.35 l
14287.9 7615.39 l
14287.9 7633.29 14286.2 7646.62 14282.7 7655.44 c
14279.4 7664.26 14273.3 7671.3 14264.6 7676.58 c
14256 7681.86 14245.8 7684.49 14234.1 7684.49 c
14215.6 7684.49 14199.5 7678.56 14185.9 7666.72 c
14172.4 7654.88 14165.6 7632.45 14165.6 7599.44 c
14165.6 7458.35 l
h
14567.3 7490.26 m
14551.1 7476.41 14535.4 7466.65 14520.4 7460.94 c
14505.4 7455.34 14489.4 7452.51 14472.1 7452.51 c
14443.8 7452.51 14422 7459.42 14406.8 7473.26 c
14391.6 7487.18 14384 7504.91 14384 7526.45 c
14384 7539.06 14386.8 7550.61 14392.5 7561.05 c
14398.3 7571.51 14405.9 7579.88 14415.2 7586.21 c
14424.6 7592.53 14435 7597.33 14446.7 7600.6 c
14455.3 7602.84 14468.3 7605.04 14485.6 7607.22 c
14520.9 7611.37 14546.9 7616.37 14563.5 7622.27 c
14563.7 7628.23 14563.8 7632.02 14563.8 7633.68 c
14563.8 7651.48 14559.7 7664.06 14551.5 7671.39 c
14540.3 7681.25 14523.6 7686.18 14501.6 7686.18 c
14481 7686.18 14465.8 7682.54 14455.9 7675.28 c
14446.2 7668.11 14438.9 7655.37 14434.3 7637.02 c
14391.5 7642.85 l
14395.4 7661.21 14401.8 7675.96 14410.7 7687.22 c
14419.6 7698.53 14432.5 7707.22 14449.3 7713.28 c
14466.2 7719.32 14485.7 7722.36 14507.9 7722.36 c
14530 7722.36 14547.9 7719.77 14561.6 7714.58 c
14575.5 7709.4 14585.6 7702.87 14592.1 7694.99 c
14598.6 7687.12 14603.1 7677.23 14605.7 7665.29 c
14607.2 7657.77 14607.9 7644.28 14607.9 7624.86 c
14607.9 7566.49 l
14607.9 7525.86 14608.8 7500.15 14610.6 7489.35 c
14612.5 7478.55 14616.2 7468.21 14621.8 7458.35 c
14576 7458.35 l
14571.5 7467.43 14568.6 7478.06 14567.3 7490.26 c
h
14563.5 7587.89 m
14547.7 7581.41 14523.9 7575.93 14492.1 7571.42 c
14474.1 7568.83 14461.4 7565.88 14454 7562.6 c
14446.6 7559.42 14440.8 7554.69 14436.7 7548.46 c
14432.7 7542.24 14430.6 7535.3 14430.6 7527.61 c
14430.6 7515.94 14435 7506.21 14443.9 7498.43 c
14452.7 7490.65 14465.6 7486.75 14482.6 7486.75 c
14499.5 7486.75 14514.5 7490.42 14527.7 7497.78 c
14540.8 7505.21 14550.4 7515.33 14556.5 7528.1 c
14561.2 7538.05 14563.5 7552.68 14563.5 7571.94 c
h
14667.6 7436.95 m
14710.1 7430.6 l
14712 7417.46 14717 7407.92 14725.1 7401.96 c
14735.9 7393.82 14750.7 7389.77 14769.5 7389.77 c
14789.8 7389.77 14805.4 7393.82 14816.3 7401.96 c
14827.4 7410.07 14834.9 7421.38 14838.8 7435.91 c
14841.1 7444.92 14842.2 7463.67 14842 7492.21 c
14822.8 7469.63 14799 7458.35 14770.5 7458.35 c
14735 7458.35 14707.6 7471.16 14688.1 7496.74 c
14668.7 7522.42 14658.9 7553.13 14658.9 7588.93 c
14658.9 7613.58 14663.4 7636.3 14672.3 7657.13 c
14681.2 7677.97 14694.1 7694.06 14711.1 7705.37 c
14728 7716.69 14747.9 7722.36 14770.7 7722.36 c
14801.2 7722.36 14826.4 7710.04 14846.2 7685.4 c
14846.2 7716.53 l
14886.5 7716.53 l
14886.5 7493.37 l
14886.5 7453.16 14882.4 7424.7 14874.2 7407.92 c
14866 7391.13 14853 7377.93 14835.3 7368.24 c
14817.6 7358.48 14795.8 7353.58 14769.8 7353.58 c
14739 7353.58 14714.1 7360.49 14695.1 7374.33 c
14676.2 7388.14 14667 7409.03 14667.6 7436.95 c
h
14703.9 7592.04 m
14703.9 7558.16 14710.6 7533.41 14724 7517.88 c
14737.5 7502.32 14754.4 7494.54 14774.6 7494.54 c
14794.8 7494.54 14811.6 7502.26 14825.2 7517.76 c
14838.8 7533.29 14845.7 7557.6 14845.7 7590.62 c
14845.7 7622.27 14838.6 7646.07 14824.5 7662.05 c
14810.5 7678.13 14793.7 7686.18 14774 7686.18 c
14754.5 7686.18 14737.9 7678.27 14724.3 7662.44 c
14710.7 7646.62 14703.9 7623.17 14703.9 7592.04 c
h
15129.3 7541.46 m
15174.6 7535.88 l
15167.5 7509.52 15154.3 7489.06 15134.9 7474.43 c
15115.6 7459.81 15091 7452.51 15061 7452.51 c
15023.3 7452.51 14993.4 7464.16 14971.2 7487.4 c
14949.1 7510.65 14938.1 7543.27 14938.1 7585.3 c
14938.1 7628.68 14949.2 7662.38 14971.5 7686.3 c
14993.9 7710.33 15023 7722.36 15058.7 7722.36 c
15093.1 7722.36 15121.3 7710.59 15143.2 7687.08 c
15165.1 7663.67 15176 7630.59 15176 7587.89 c
15176 7585.3 15175.9 7581.41 15175.7 7576.22 c
14983.2 7576.22 l
14984.8 7547.88 14992.9 7526.18 15007.3 7511.14 c
15021.7 7496.09 15039.7 7488.57 15061.3 7488.57 c
15077.3 7488.57 15091 7492.75 15102.3 7501.16 c
15113.7 7509.61 15122.7 7523.07 15129.3 7541.46 c
h
14985.6 7612.27 m
15129.8 7612.27 l
15127.9 7633.97 15122.4 7650.25 15113.4 7661.14 c
15099.4 7678 15081.3 7686.44 15059 7686.44 c
15039 7686.44 15022.1 7679.69 15008.3 7666.2 c
14994.7 7652.81 14987.1 7634.81 14985.6 7612.27 c
h
15229.5 7458.35 m
15229.5 7716.53 l
15268.7 7716.53 l
15268.7 7680.34 l
15276.8 7692.95 15287.6 7703.14 15301 7710.82 c
15314.4 7718.5 15329.8 7722.36 15347 7722.36 c
15366.1 7722.36 15381.7 7718.38 15393.9 7710.43 c
15406.2 7702.55 15414.8 7691.49 15419.9 7677.23 c
15440.3 7707.32 15466.9 7722.36 15499.6 7722.36 c
15525.3 7722.36 15545 7715.27 15558.7 7701.1 c
15572.5 7686.93 15579.3 7665.1 15579.3 7635.59 c
15579.3 7458.35 l
15535.9 7458.35 l
15535.9 7620.96 l
15535.9 7638.51 15534.5 7651.12 15531.6 7658.81 c
15528.8 7666.53 15523.6 7672.69 15516.2 7677.35 c
15508.8 7682.12 15500 7684.49 15489.9 7684.49 c
15471.7 7684.49 15456.6 7678.43 15444.6 7666.33 c
15432.7 7654.24 15426.7 7634.91 15426.7 7608.39 c
15426.7 7458.35 l
15382.9 7458.35 l
15382.9 7626.15 l
15382.9 7645.58 15379.3 7660.17 15372.1 7669.83 c
15365.1 7679.6 15353.4 7684.49 15337.2 7684.49 c
15324.9 7684.49 15313.5 7681.25 15303 7674.77 c
15292.6 7668.28 15285 7658.78 15280.3 7646.22 c
15275.7 7633.81 15273.3 7615.81 15273.3 7592.3 c
15273.3 7458.35 l
h
15821 7541.46 m
15866.2 7535.88 l
15859.2 7509.52 15845.9 7489.06 15826.6 7474.43 c
15807.3 7459.81 15782.7 7452.51 15752.7 7452.51 c
15715 7452.51 15685.1 7464.16 15662.9 7487.4 c
15640.8 7510.65 15629.7 7543.27 15629.7 7585.3 c
15629.7 7628.68 15640.9 7662.38 15663.2 7686.3 c
15685.6 7710.33 15714.6 7722.36 15750.3 7722.36 c
15784.8 7722.36 15813 7710.59 15834.9 7687.08 c
15856.7 7663.67 15867.7 7630.59 15867.7 7587.89 c
15867.7 7585.3 15867.6 7581.41 15867.4 7576.22 c
15674.9 7576.22 l
15676.5 7547.88 15684.6 7526.18 15699 7511.14 c
15713.4 7496.09 15731.4 7488.57 15752.9 7488.57 c
15769 7488.57 15782.7 7492.75 15794 7501.16 c
15805.3 7509.61 15814.4 7523.07 15821 7541.46 c
h
15677.3 7612.27 m
15821.5 7612.27 l
15819.6 7633.97 15814.1 7650.25 15805 7661.14 c
15791 7678 15772.9 7686.44 15750.7 7686.44 c
15730.7 7686.44 15713.8 7679.69 15700 7666.2 c
15686.4 7652.81 15678.8 7634.81 15677.3 7612.27 c
h
15921.2 7458.35 m
15921.2 7716.53 l
15960.6 7716.53 l
15960.6 7679.82 l
15979.5 7708.16 16006.9 7722.36 16042.8 7722.36 c
16058.4 7722.36 16072.7 7719.54 16085.7 7713.94 c
16098.8 7708.39 16108.6 7701.1 16115 7692.01 c
16121.5 7682.93 16126.1 7672.16 16128.7 7659.71 c
16130.2 7651.61 16131 7637.37 16131 7617.08 c
16131 7458.35 l
16087.3 7458.35 l
16087.3 7615.39 l
16087.3 7633.29 16085.6 7646.62 16082.1 7655.44 c
16078.7 7664.26 16072.7 7671.3 16063.9 7676.58 c
16055.3 7681.86 16045.1 7684.49 16033.5 7684.49 c
16014.9 7684.49 15998.8 7678.56 15985.2 7666.72 c
15971.8 7654.88 15965 7632.45 15965 7599.44 c
15965 7458.35 l
h
16293.6 7497.52 m
16300 7458.87 l
16287.6 7456.27 16276.6 7454.98 16267 7454.98 c
16251 7454.98 16238.7 7457.48 16230 7462.5 c
16221.3 7467.53 16215.1 7474.08 16211.4 7482.21 c
16207.9 7490.42 16206.1 7507.67 16206.1 7533.94 c
16206.1 7682.54 l
16174.1 7682.54 l
16174.1 7716.53 l
16206.1 7716.53 l
16206.1 7780.44 l
16249.7 7806.77 l
16249.7 7716.53 l
16293.6 7716.53 l
16293.6 7682.54 l
16249.7 7682.54 l
16249.7 7531.47 l
16249.7 7519.05 16250.5 7511.04 16251.9 7507.51 c
16253.5 7503.94 16256 7501.09 16259.4 7498.95 c
16263 7496.87 16268 7495.84 16274.5 7495.84 c
16279.3 7495.84 16285.7 7496.38 16293.6 7497.52 c
h
16293.6 7497.52 m
f
Q
61.3718 w
1 j
q 1.30313 0 0 1.30313 0 0 cm
16300 3115.54 m
16300 1098.47 l
15498.8 1098.47 l
S Q
q 1.23908 0 0 1.23908 0 0 cm
16300 1261.86 m
16007.1 1155.25 l
16300 1048.63 l
h
16300 1261.86 m
f*
Q
64.5443 w
0 j
q 1.23908 0 0 1.23908 0 0 cm
16300 1261.86 m
16007.1 1155.25 l
16300 1048.63 l
h
16300 1261.86 m
S Q
79.9757 w
1 j
16062.4 1431.52 m
14273 1431.52 l
14273 3580.16 l
S
14405.1 3580.16 m
14273 3943.09 l
14140.9 3580.16 l
h
14405.1 3580.16 m
f*
0 j
14405.1 3580.16 m
14273 3943.09 l
14140.9 3580.16 l
h
14405.1 3580.16 m
S
1 j
0.349121 0.349121 0.349121 rg
0.349121 0.349121 0.349121 RG
16062.4 1431.52 m
3351.29 1431.52 l
3351.29 3580.16 l
S
3483.36 3580.16 m
3351.29 3943.09 l
3219.18 3580.16 l
h
3483.36 3580.16 m
f*
0 j
3483.36 3580.16 m
3351.29 3943.09 l
3219.18 3580.16 l
h
3483.36 3580.16 m
S
1 1 1 RG
1 1 1 rg
q 1.40142 0 0 1.40142 0 0 cm
14214.1 2443.22 m
16300 2443.22 l
16300 1808.74 l
14214.1 1808.74 l
f*
Q
0 0 0 RG
0 0 0 rg
q 1.36756 0 0 1.36756 0 0 cm
14968.7 1929.7 m
14968.7 2244.28 l
15003.9 2244.28 l
15003.9 2214.8 l
15012.1 2226.31 15021.5 2234.94 15031.9 2240.74 c
15042.3 2246.51 15055 2249.42 15069.8 2249.42 c
15089.2 2249.42 15106.4 2244.42 15121.2 2234.45 c
15136.1 2224.48 15147.3 2210.4 15154.8 2192.18 c
15162.4 2173.98 15166.2 2154.04 15166.2 2132.33 c
15166.2 2109.03 15162.1 2088.06 15153.7 2069.41 c
15145.4 2050.81 15133.2 2036.54 15117.2 2026.57 c
15101.3 2016.68 15084.6 2011.71 15067.1 2011.71 c
15054.2 2011.71 15042.7 2014.42 15032.5 2019.83 c
15022.3 2025.31 15013.9 2032.16 15007.4 2040.39 c
15007.4 1929.7 l
h
15003.7 2129.25 m
15003.7 2100 15009.6 2078.38 15021.4 2064.38 c
15033.3 2050.44 15047.6 2043.47 15064.4 2043.47 c
15081.6 2043.47 15096.2 2050.7 15108.4 2065.18 c
15120.7 2079.63 15126.8 2102.12 15126.8 2132.57 c
15126.8 2161.5 15120.8 2183.15 15108.9 2197.54 c
15097 2212.03 15082.8 2219.25 15066.2 2219.25 c
15049.8 2219.25 15035.3 2211.57 15022.7 2196.17 c
15010 2180.89 15003.7 2158.55 15003.7 2129.25 c
h
15361.7 2016.85 m
15361.7 2050.33 l
15344.1 2024.59 15320 2011.71 15289.5 2011.71 c
15276.1 2011.71 15263.6 2014.28 15252 2019.37 c
15240.3 2024.56 15231.7 2031.02 15226 2038.79 c
15220.4 2046.56 15216.4 2056.1 15214.2 2067.47 c
15212.6 2075.01 15211.9 2087 15211.9 2103.43 c
15211.9 2244.28 l
15250.4 2244.28 l
15250.4 2118.17 l
15250.4 2098.06 15251.2 2084.52 15252.8 2077.52 c
15255.2 2067.38 15260.3 2059.41 15268.2 2053.64 c
15276 2047.85 15285.7 2044.96 15297.3 2044.96 c
15308.9 2044.96 15319.7 2047.9 15329.9 2053.76 c
15340 2059.7 15347.1 2067.75 15351.3 2077.98 c
15355.6 2088.17 15357.7 2102.97 15357.7 2122.39 c
15357.7 2244.28 l
15396.2 2244.28 l
15396.2 2016.85 l
h
15492.1 2016.85 m
15456.4 2016.85 l
15456.4 2330.86 l
15495 2330.86 l
15495 2218.8 l
15511.3 2239.22 15532 2249.42 15557.2 2249.42 c
15571.3 2249.42 15584.5 2246.59 15597 2240.96 c
15609.5 2235.33 15619.8 2227.39 15627.8 2217.2 c
15635.9 2207 15642.2 2194.66 15646.8 2180.21 c
15651.3 2165.81 15653.6 2150.42 15653.6 2134.05 c
15653.6 2095.06 15644 2064.9 15624.7 2043.59 c
15605.5 2022.33 15582.4 2011.71 15555.4 2011.71 c
15528.5 2011.71 15507.4 2022.91 15492.1 2045.3 c
h
15491.8 2132.33 m
15491.8 2105.09 15495.5 2085.35 15502.9 2073.18 c
15515 2053.38 15531.5 2043.47 15552.1 2043.47 c
15569 2043.47 15583.6 2050.79 15595.8 2065.41 c
15608.1 2080.03 15614.2 2101.83 15614.2 2130.85 c
15614.2 2160.56 15608.3 2182.44 15596.5 2196.52 c
15584.8 2210.69 15570.6 2217.77 15553.8 2217.77 c
15537 2217.77 15522.4 2210.43 15510.2 2195.71 c
15497.9 2181.12 15491.8 2159.99 15491.8 2132.33 c
h
15699.7 2016.85 m
15699.7 2330.86 l
15738.2 2330.86 l
15738.2 2016.85 l
h
15798.2 2286.52 m
15798.2 2330.86 l
15836.8 2330.86 l
15836.8 2286.52 l
h
15798.2 2016.85 m
15798.2 2244.28 l
15836.8 2244.28 l
15836.8 2016.85 l
h
15880 2084.72 m
15918.2 2090.75 l
15920.3 2075.46 15926.2 2063.73 15936 2055.58 c
15945.8 2047.5 15959.5 2043.47 15977.1 2043.47 c
15994.8 2043.47 16007.9 2047.04 16016.4 2054.22 c
16025 2061.44 16029.3 2069.89 16029.3 2079.58 c
16029.3 2088.32 16025.5 2095.17 16018 2100.12 c
16012.6 2103.54 15999.5 2107.94 15978.6 2113.25 c
15950.2 2120.42 15930.6 2126.59 15919.8 2131.76 c
15908.8 2136.93 15900.6 2144.13 15894.9 2153.35 c
15889.2 2162.56 15886.4 2172.78 15886.4 2183.95 c
15886.4 2194.09 15888.7 2203.46 15893.4 2212.06 c
15898 2220.74 15904.3 2227.94 15912.3 2233.65 c
15918.3 2238.07 15926.5 2241.79 15936.9 2244.85 c
15947.2 2247.87 15958.3 2249.42 15970.2 2249.42 c
15988.1 2249.42 16003.7 2246.82 16017.2 2241.65 c
16030.7 2236.53 16040.6 2229.62 16047 2220.85 c
16053.5 2212.12 16057.9 2200.37 16060.4 2185.66 c
16022.7 2180.55 l
16020.9 2192.18 16015.9 2201.29 16007.7 2207.83 c
15999.6 2214.46 15988 2217.77 15973 2217.77 c
15955.2 2217.77 15942.6 2214.83 15935.1 2208.97 c
15927.5 2203.12 15923.8 2196.26 15923.8 2188.4 c
15923.8 2183.38 15925.3 2178.9 15928.4 2174.95 c
15931.6 2170.75 15936.5 2167.33 15943.2 2164.67 c
15947 2163.21 15958.4 2159.93 15977.2 2154.84 c
16004.5 2147.53 16023.6 2141.56 16034.3 2136.9 c
16045.1 2132.25 16053.6 2125.51 16059.7 2116.68 c
16065.8 2107.86 16068.9 2096.86 16068.9 2083.69 c
16068.9 2070.81 16065.1 2058.7 16057.6 2047.36 c
16050.2 2036.02 16039.3 2027.22 16025.2 2020.97 c
16011.1 2014.8 15995.1 2011.71 15977.2 2011.71 c
15947.7 2011.71 15925.1 2017.85 15909.6 2030.11 c
15894.1 2042.44 15884.3 2060.64 15880 2084.72 c
h
16114.7 2016.85 m
16114.7 2330.86 l
16153.3 2330.86 l
16153.3 2218.22 l
16171.3 2239.02 16194 2249.42 16221.4 2249.42 c
16238.2 2249.42 16252.8 2246.1 16265.3 2239.48 c
16277.7 2232.85 16286.5 2223.68 16291.9 2211.94 c
16297.3 2200.23 16300 2183.23 16300 2161.01 c
16300 2016.85 l
16261.5 2016.85 l
16261.5 2161.01 l
16261.5 2180.26 16257.3 2194.29 16248.9 2203.03 c
16240.6 2211.88 16228.8 2216.28 16213.5 2216.28 c
16202.1 2216.28 16191.3 2213.32 16181.2 2207.37 c
16171.1 2201.43 16164 2193.4 16159.7 2183.26 c
16155.5 2173.15 16153.3 2159.12 16153.3 2141.25 c
16153.3 2016.85 l
h
16114.7 2016.85 m
f
Q
1 1 1 RG
1 1 1 rg
12811.8 2319.18 2923.2 718.203 re
f*
0 0 0 RG
0 0 0 rg
13008.2 2555.12 m
13060.4 2563.4 l
13063.3 2542.46 13071.4 2526.45 13084.8 2515.27 c
13098.2 2504.26 13116.9 2498.71 13141 2498.71 c
13165.2 2498.71 13183.1 2503.63 13194.8 2513.4 c
13206.5 2523.32 13212.4 2534.84 13212.4 2548.09 c
13212.4 2560.08 13207.3 2569.45 13196.9 2576.21 c
13189.6 2580.9 13171.7 2586.87 13143.1 2594.18 c
13104.3 2603.95 13077.5 2612.38 13062.6 2619.45 c
13047.7 2626.56 13036.4 2636.41 13028.6 2648.98 c
13020.9 2661.6 13017 2675.55 13017 2690.86 c
13017 2704.69 13020.2 2717.5 13026.5 2729.3 c
13032.9 2741.17 13041.5 2750.98 13052.5 2758.79 c
13060.7 2764.84 13071.9 2769.96 13086.1 2774.1 c
13100.2 2778.28 13115.4 2780.35 13131.6 2780.35 c
13156 2780.35 13177.4 2776.84 13195.9 2769.73 c
13214.3 2762.77 13227.9 2753.28 13236.6 2741.33 c
13245.5 2729.34 13251.6 2713.28 13254.9 2693.2 c
13203.4 2686.17 l
13200.9 2702.11 13194.1 2714.53 13182.9 2723.52 c
13171.7 2732.58 13155.9 2737.11 13135.4 2737.11 c
13111.1 2737.11 13093.8 2733.09 13083.6 2725.08 c
13073.2 2717.03 13068.1 2707.66 13068.1 2696.95 c
13068.1 2690.08 13070.2 2683.95 13074.5 2678.52 c
13078.8 2672.77 13085.5 2668.09 13094.6 2664.45 c
13099.9 2662.46 13115.5 2658.01 13141.2 2651.02 c
13178.6 2641.02 13204.6 2632.85 13219.3 2626.48 c
13234.1 2620.16 13245.6 2610.94 13253.9 2598.87 c
13262.4 2586.76 13266.6 2571.72 13266.6 2553.71 c
13266.6 2536.09 13261.4 2519.57 13251.1 2504.02 c
13240.9 2488.52 13226.1 2476.48 13206.8 2467.97 c
13187.5 2459.53 13165.7 2455.31 13141.2 2455.31 c
13100.8 2455.31 13070 2463.67 13048.7 2480.47 c
13027.6 2497.3 13014.1 2522.23 13008.2 2555.12 c
h
13533.1 2462.34 m
13533.1 2508.09 l
13508.9 2472.89 13476 2455.31 13434.4 2455.31 c
13416.1 2455.31 13398.9 2458.79 13383 2465.78 c
13367 2472.85 13355.2 2481.72 13347.5 2492.3 c
13339.8 2502.93 13334.4 2516.02 13331.3 2531.52 c
13329.2 2541.84 13328.2 2558.24 13328.2 2580.74 c
13328.2 2773.32 l
13380.8 2773.32 l
13380.8 2600.9 l
13380.8 2573.4 13381.9 2554.84 13384.1 2545.27 c
13387.4 2531.45 13394.4 2520.55 13405.2 2512.62 c
13415.9 2504.73 13429.1 2500.74 13445 2500.74 c
13460.8 2500.74 13475.7 2504.77 13489.5 2512.77 c
13503.4 2520.9 13513.2 2531.95 13518.9 2545.9 c
13524.7 2559.84 13527.6 2580.12 13527.6 2606.68 c
13527.6 2773.32 l
13580.3 2773.32 l
13580.3 2462.34 l
h
13711.4 2462.34 m
13662.5 2462.34 l
13662.5 2891.72 l
13715.3 2891.72 l
13715.3 2738.52 l
13737.6 2766.41 13766 2780.35 13800.4 2780.35 c
13819.6 2780.35 13837.7 2776.52 13854.8 2768.79 c
13871.9 2761.09 13885.9 2750.27 13897 2736.33 c
13908 2722.34 13916.7 2705.47 13922.9 2685.7 c
13929.1 2666.02 13932.3 2645 13932.3 2622.58 c
13932.3 2569.3 13919.1 2528.05 13892.8 2498.87 c
13866.4 2469.84 13834.8 2455.31 13797.9 2455.31 c
13761.2 2455.31 13732.3 2470.62 13711.4 2501.21 c
h
13710.9 2620.23 m
13710.9 2582.97 13716 2556.02 13726.1 2539.34 c
13742.8 2512.27 13765.2 2498.71 13793.4 2498.71 c
13816.5 2498.71 13836.5 2508.71 13853.2 2528.71 c
13870 2548.71 13878.4 2578.55 13878.4 2618.2 c
13878.4 2658.83 13870.3 2688.79 13854.2 2708.05 c
13838.1 2727.42 13818.7 2737.11 13795.7 2737.11 c
13772.7 2737.11 13752.9 2727.03 13736.1 2706.95 c
13719.3 2686.95 13710.9 2658.05 13710.9 2620.23 c
h
13975.4 2555.12 m
14027.5 2563.4 l
14030.4 2542.46 14038.6 2526.45 14051.9 2515.27 c
14065.3 2504.26 14084.1 2498.71 14108.1 2498.71 c
14132.3 2498.71 14150.2 2503.63 14161.8 2513.4 c
14173.6 2523.32 14179.5 2534.84 14179.5 2548.09 c
14179.5 2560.08 14174.3 2569.45 14164 2576.21 c
14156.7 2580.9 14138.8 2586.87 14110.2 2594.18 c
14071.4 2603.95 14044.6 2612.38 14029.7 2619.45 c
14014.8 2626.56 14003.4 2636.41 13995.6 2648.98 c
13987.9 2661.6 13984.1 2675.55 13984.1 2690.86 c
13984.1 2704.69 13987.3 2717.5 13993.6 2729.3 c
14000 2741.17 14008.6 2750.98 14019.5 2758.79 c
14027.8 2764.84 14038.9 2769.96 14053.1 2774.1 c
14067.3 2778.28 14082.5 2780.35 14098.8 2780.35 c
14123.1 2780.35 14144.5 2776.84 14162.9 2769.73 c
14181.4 2762.77 14195 2753.28 14203.7 2741.33 c
14212.5 2729.34 14218.6 2713.28 14222 2693.2 c
14170.4 2686.17 l
14168.1 2702.11 14161.2 2714.53 14150 2723.52 c
14138.8 2732.58 14123 2737.11 14102.5 2737.11 c
14078.2 2737.11 14060.9 2733.09 14050.6 2725.08 c
14040.3 2717.03 14035.2 2707.66 14035.2 2696.95 c
14035.2 2690.08 14037.3 2683.95 14041.6 2678.52 c
14045.8 2672.77 14052.5 2668.09 14061.7 2664.45 c
14067 2662.46 14082.5 2658.01 14108.3 2651.02 c
14145.7 2641.02 14171.7 2632.85 14186.4 2626.48 c
14201.1 2620.16 14212.7 2610.94 14221.1 2598.87 c
14229.5 2586.76 14233.7 2571.72 14233.7 2553.71 c
14233.7 2536.09 14228.6 2519.57 14218.2 2504.02 c
14208 2488.52 14193.2 2476.48 14173.9 2467.97 c
14154.6 2459.53 14132.7 2455.31 14108.3 2455.31 c
14067.9 2455.31 14037 2463.67 14015.8 2480.47 c
13994.6 2497.3 13981.2 2522.23 13975.4 2555.12 c
h
14499.4 2576.21 m
14551.1 2569.49 l
14545.5 2533.75 14531 2505.82 14507.7 2485.62 c
14484.3 2465.39 14455.7 2455.31 14421.8 2455.31 c
14379.2 2455.31 14344.9 2469.22 14319 2496.99 c
14293.2 2524.8 14280.2 2564.69 14280.2 2616.68 c
14280.2 2650.31 14285.8 2679.65 14296.9 2704.77 c
14308.1 2729.96 14325 2748.87 14347.7 2761.45 c
14370.5 2774.06 14395.3 2780.35 14422.1 2780.35 c
14455.8 2780.35 14483.4 2771.84 14504.8 2754.73 c
14526.3 2737.66 14540.1 2713.4 14546.3 2681.95 c
14494.9 2674.14 l
14490.1 2694.96 14481.4 2710.62 14468.9 2721.17 c
14456.5 2731.8 14441.6 2737.11 14424.1 2737.11 c
14397.5 2737.11 14375.9 2727.58 14359.3 2708.52 c
14342.7 2689.45 14334.4 2659.37 14334.4 2618.2 c
14334.4 2576.37 14342.4 2545.94 14358.4 2526.99 c
14374.4 2508.16 14395.3 2498.71 14421.1 2498.71 c
14441.9 2498.71 14459.1 2505.04 14473 2517.62 c
14486.8 2530.35 14495.7 2549.84 14499.4 2576.21 c
h
14595.6 2462.34 m
14595.6 2773.32 l
14643.1 2773.32 l
14643.1 2726.17 l
14655.2 2748.24 14666.3 2762.77 14676.5 2769.73 c
14686.8 2776.84 14698.1 2780.35 14710.4 2780.35 c
14728.2 2780.35 14746.3 2774.73 14764.6 2763.48 c
14746.5 2714.45 l
14733.6 2722.15 14720.7 2726.02 14707.9 2726.02 c
14696.4 2726.02 14686 2722.5 14676.8 2715.55 c
14667.7 2708.55 14661.1 2698.95 14657.1 2686.64 c
14651.3 2667.89 14648.4 2647.42 14648.4 2625.23 c
14648.4 2462.34 l
h
14796.3 2891.72 52.8125 -60.5859 re
14796.3 2773.32 52.8125 -310.98 re
14977.8 2462.34 m
14928.9 2462.34 l
14928.9 2891.72 l
14981.7 2891.72 l
14981.7 2738.52 l
15004 2766.41 15032.4 2780.35 15066.9 2780.35 c
15086 2780.35 15104.1 2776.52 15121.2 2768.79 c
15138.3 2761.09 15152.3 2750.27 15163.4 2736.33 c
15174.4 2722.34 15183.1 2705.47 15189.3 2685.7 c
15195.6 2666.02 15198.7 2645 15198.7 2622.58 c
15198.7 2569.3 15185.5 2528.05 15159.2 2498.87 c
15132.8 2469.84 15101.2 2455.31 15064.4 2455.31 c
15027.6 2455.31 14998.8 2470.62 14977.8 2501.21 c
h
14977.3 2620.23 m
14977.3 2582.97 14982.4 2556.02 14992.5 2539.34 c
15009.2 2512.27 15031.6 2498.71 15059.8 2498.71 c
15082.9 2498.71 15102.9 2508.71 15119.6 2528.71 c
15136.4 2548.71 15144.8 2578.55 15144.8 2618.2 c
15144.8 2658.83 15136.7 2688.79 15120.6 2708.05 c
15104.6 2727.42 15085.1 2737.11 15062.2 2737.11 c
15039.1 2737.11 15019.3 2727.03 15002.5 2706.95 c
14985.7 2686.95 14977.3 2658.05 14977.3 2620.23 c
h
15475.7 2562.46 m
15530.2 2555.74 l
15521.7 2523.98 15505.8 2499.3 15482.5 2481.72 c
15459.2 2464.1 15429.6 2455.31 15393.4 2455.31 c
15348 2455.31 15312 2469.3 15285.3 2497.3 c
15258.7 2525.35 15245.4 2564.65 15245.4 2615.27 c
15245.4 2667.54 15258.8 2708.09 15285.6 2736.95 c
15312.6 2765.9 15347.6 2780.35 15390.6 2780.35 c
15432.1 2780.35 15466.1 2766.21 15492.5 2737.89 c
15518.8 2709.65 15531.9 2669.8 15531.9 2618.36 c
15531.9 2615.27 15531.9 2610.59 15531.6 2604.34 c
15299.7 2604.34 l
15301.7 2570.16 15311.4 2544.02 15328.8 2525.9 c
15346.1 2507.77 15367.8 2498.71 15393.8 2498.71 c
15413.1 2498.71 15429.6 2503.79 15443.2 2513.87 c
15456.9 2524.1 15467.7 2540.27 15475.7 2562.46 c
h
15302.7 2647.73 m
15476.4 2647.73 l
15474.1 2673.87 15467.5 2693.52 15456.5 2706.64 c
15439.6 2726.95 15417.9 2737.11 15391.1 2737.11 c
15366.9 2737.11 15346.6 2728.98 15330 2712.73 c
15313.6 2696.6 15304.4 2674.92 15302.7 2647.73 c
h
15302.7 2647.73 m
f
1 1 1 RG
1 1 1 rg
7694.77 1072.42 2923.24 718.199 re
f*
0 0 0 RG
0 0 0 rg
7891.29 1308.36 m
7943.44 1316.64 l
7946.37 1295.7 7954.49 1279.65 7967.81 1268.52 c
7981.25 1257.5 8000 1251.95 8024.06 1251.95 c
8048.2 1251.95 8066.13 1256.87 8077.77 1266.64 c
8089.53 1276.56 8095.43 1288.09 8095.43 1301.33 c
8095.43 1313.32 8090.27 1322.66 8079.96 1329.45 c
8072.7 1334.14 8054.73 1340.12 8026.09 1347.42 c
7987.34 1357.19 7960.51 1365.62 7945.63 1372.7 c
7930.74 1379.8 7919.38 1389.65 7911.56 1402.23 c
7903.87 1414.84 7900.04 1428.79 7900.04 1444.1 c
7900.04 1457.93 7903.2 1470.74 7909.53 1482.54 c
7915.9 1494.37 7924.53 1504.22 7935.47 1512.03 c
7943.71 1518.09 7954.88 1523.2 7969.06 1527.34 c
7983.24 1531.52 7998.44 1533.59 8014.69 1533.59 c
8039.02 1533.59 8060.43 1530.08 8078.87 1522.97 c
8097.3 1516.02 8110.9 1506.52 8119.65 1494.53 c
8128.48 1482.58 8134.57 1466.52 8137.93 1446.45 c
8086.37 1439.41 l
8083.98 1455.35 8077.15 1467.77 8065.9 1476.76 c
8054.77 1485.82 8038.95 1490.35 8018.44 1490.35 c
7994.14 1490.35 7976.88 1486.33 7966.56 1478.32 c
7956.25 1470.27 7951.09 1460.9 7951.09 1450.2 c
7951.09 1443.32 7953.24 1437.19 7957.5 1431.76 c
7961.76 1426.02 7968.48 1421.33 7977.66 1417.7 c
7982.97 1415.7 7998.48 1411.25 8024.22 1404.26 c
8061.6 1394.26 8087.62 1386.09 8102.3 1379.73 c
8117.07 1373.4 8128.63 1364.18 8136.99 1352.11 c
8145.43 1340 8149.65 1324.96 8149.65 1306.95 c
8149.65 1289.34 8144.49 1272.81 8134.18 1257.27 c
8123.95 1241.76 8109.18 1229.73 8089.8 1221.21 c
8070.55 1212.77 8048.67 1208.55 8024.22 1208.55 c
7983.79 1208.55 7952.97 1216.91 7931.72 1233.71 c
7910.59 1250.55 7897.11 1275.47 7891.29 1308.36 c
h
8416.09 1215.59 m
8416.09 1261.33 l
8391.95 1226.13 8359.06 1208.55 8317.38 1208.55 c
8299.06 1208.55 8281.95 1212.03 8266.02 1219.02 c
8250.08 1226.09 8238.24 1234.96 8230.55 1245.55 c
8222.85 1256.17 8217.42 1269.26 8214.3 1284.77 c
8212.23 1295.08 8211.17 1311.48 8211.17 1333.98 c
8211.17 1526.56 l
8263.83 1526.56 l
8263.83 1354.14 l
8263.83 1326.64 8264.92 1308.09 8267.11 1298.52 c
8270.43 1284.65 8277.46 1273.79 8288.16 1265.86 c
8298.91 1257.97 8312.19 1253.98 8328.01 1253.98 c
8343.83 1253.98 8358.67 1258.01 8372.54 1266.02 c
8386.37 1274.14 8396.17 1285.2 8401.91 1299.14 c
8407.73 1313.09 8410.66 1333.36 8410.66 1359.92 c
8410.66 1526.56 l
8463.28 1526.56 l
8463.28 1215.59 l
h
8594.45 1215.59 m
8545.55 1215.59 l
8545.55 1644.96 l
8598.36 1644.96 l
8598.36 1491.76 l
8620.63 1519.65 8649.02 1533.59 8683.48 1533.59 c
8702.62 1533.59 8720.74 1529.77 8737.81 1522.03 c
8754.92 1514.34 8768.98 1503.52 8780 1489.57 c
8791.05 1475.59 8799.69 1458.71 8805.94 1438.95 c
8812.19 1419.26 8815.31 1398.24 8815.31 1375.82 c
8815.31 1322.5 8802.15 1281.29 8775.78 1252.11 c
8749.45 1223.09 8717.85 1208.55 8680.98 1208.55 c
8644.22 1208.55 8615.35 1223.87 8594.45 1254.45 c
h
8593.98 1373.48 m
8593.98 1336.21 8599.02 1309.26 8609.1 1292.58 c
8625.78 1265.51 8648.24 1251.95 8676.45 1251.95 c
8699.57 1251.95 8719.49 1261.95 8736.29 1281.95 c
8753.05 1301.95 8761.41 1331.8 8761.41 1371.45 c
8761.41 1412.07 8753.36 1442.03 8737.19 1461.29 c
8721.17 1480.66 8701.68 1490.35 8678.79 1490.35 c
8655.78 1490.35 8635.9 1480.27 8619.1 1460.2 c
8602.34 1440.2 8593.98 1411.29 8593.98 1373.48 c
h
8858.36 1308.36 m
8910.55 1316.64 l
8913.44 1295.7 8921.56 1279.65 8934.88 1268.52 c
8948.32 1257.5 8967.07 1251.95 8991.13 1251.95 c
9015.27 1251.95 9033.2 1256.87 9044.88 1266.64 c
9056.64 1276.56 9062.5 1288.09 9062.5 1301.33 c
9062.5 1313.32 9057.38 1322.66 9047.07 1329.45 c
9039.77 1334.14 9021.8 1340.12 8993.16 1347.42 c
8954.41 1357.19 8927.62 1365.62 8912.73 1372.7 c
8897.81 1379.8 8886.48 1389.65 8878.67 1402.23 c
8870.98 1414.84 8867.11 1428.79 8867.11 1444.1 c
8867.11 1457.93 8870.27 1470.74 8876.64 1482.54 c
8883.01 1494.37 8891.64 1504.22 8902.58 1512.03 c
8910.78 1518.09 8921.99 1523.2 8936.13 1527.34 c
8950.31 1531.52 8965.51 1533.59 8981.76 1533.59 c
9006.13 1533.59 9027.54 1530.08 9045.98 1522.97 c
9064.38 1516.02 9077.97 1506.52 9086.72 1494.53 c
9095.59 1482.58 9101.68 1466.52 9105 1446.45 c
9053.48 1439.41 l
9051.05 1455.35 9044.26 1467.77 9033.01 1476.76 c
9021.84 1485.82 9006.02 1490.35 8985.51 1490.35 c
8961.25 1490.35 8943.95 1486.33 8933.63 1478.32 c
8923.36 1470.27 8918.2 1460.9 8918.2 1450.2 c
8918.2 1443.32 8920.31 1437.19 8924.61 1431.76 c
8928.87 1426.02 8935.59 1421.33 8944.73 1417.7 c
8950.04 1415.7 8965.59 1411.25 8991.29 1404.26 c
9028.67 1394.26 9054.73 1386.09 9069.38 1379.73 c
9084.18 1373.4 9095.74 1364.18 9104.06 1352.11 c
9112.5 1340 9116.72 1324.96 9116.72 1306.95 c
9116.72 1289.34 9111.56 1272.81 9101.25 1257.27 c
9091.05 1241.76 9076.25 1229.73 9056.91 1221.21 c
9037.62 1212.77 9015.74 1208.55 8991.29 1208.55 c
8950.9 1208.55 8920.08 1216.91 8898.83 1233.71 c
8877.7 1250.55 8864.18 1275.47 8858.36 1308.36 c
h
9382.42 1329.45 m
9434.14 1322.73 l
9428.52 1286.99 9414.02 1259.06 9390.7 1238.83 c
9367.38 1218.63 9338.75 1208.55 9304.8 1208.55 c
9262.19 1208.55 9227.93 1222.46 9201.99 1250.23 c
9176.17 1278.05 9163.28 1317.93 9163.28 1369.88 c
9163.28 1403.55 9168.83 1432.89 9180 1458.01 c
9191.13 1483.2 9208.05 1502.11 9230.74 1514.69 c
9253.55 1527.3 9278.32 1533.59 9305.12 1533.59 c
9338.83 1533.59 9366.45 1525.08 9387.89 1507.97 c
9409.34 1490.9 9423.13 1466.64 9429.3 1435.2 c
9377.89 1427.38 l
9373.09 1448.2 9364.45 1463.87 9351.95 1474.41 c
9339.57 1485.04 9324.61 1490.35 9307.15 1490.35 c
9280.59 1490.35 9258.98 1480.82 9242.3 1461.76 c
9225.74 1442.7 9217.46 1412.58 9217.46 1371.45 c
9217.46 1329.61 9225.43 1299.18 9241.37 1280.23 c
9257.42 1261.41 9278.32 1251.95 9304.18 1251.95 c
9324.88 1251.95 9342.19 1258.28 9356.02 1270.86 c
9369.88 1283.55 9378.67 1303.09 9382.42 1329.45 c
h
9478.63 1215.59 m
9478.63 1526.56 l
9526.13 1526.56 l
9526.13 1479.41 l
9538.2 1501.48 9549.34 1516.02 9559.57 1522.97 c
9569.88 1530.08 9581.17 1533.59 9593.44 1533.59 c
9611.25 1533.59 9629.34 1527.97 9647.66 1516.72 c
9629.53 1467.7 l
9616.6 1475.39 9603.75 1479.26 9590.94 1479.26 c
9579.38 1479.26 9569.02 1475.74 9559.88 1468.79 c
9550.7 1461.8 9544.14 1452.15 9540.2 1439.88 c
9534.34 1421.13 9531.45 1400.66 9531.45 1378.48 c
9531.45 1215.59 l
h
9679.34 1644.96 52.7695 -60.5898 re
9679.34 1526.56 52.7695 -310.973 re
9860.86 1215.59 m
9811.95 1215.59 l
9811.95 1644.96 l
9864.77 1644.96 l
9864.77 1491.76 l
9887.03 1519.65 9915.43 1533.59 9949.88 1533.59 c
9969.06 1533.59 9987.15 1529.77 10004.3 1522.03 c
10021.3 1514.34 10035.4 1503.52 10046.4 1489.57 c
10057.5 1475.59 10066.1 1458.71 10072.3 1438.95 c
10078.6 1419.26 10081.7 1398.24 10081.7 1375.82 c
10081.7 1322.5 10068.6 1281.29 10042.2 1252.11 c
10015.9 1223.09 9984.26 1208.55 9947.38 1208.55 c
9910.63 1208.55 9881.8 1223.87 9860.86 1254.45 c
h
9860.39 1373.48 m
9860.39 1336.21 9865.43 1309.26 9875.55 1292.58 c
9892.19 1265.51 9914.65 1251.95 9942.85 1251.95 c
9965.98 1251.95 9985.9 1261.95 10002.7 1281.95 c
10019.4 1301.95 10027.8 1331.8 10027.8 1371.45 c
10027.8 1412.07 10019.8 1442.03 10003.6 1461.29 c
9987.58 1480.66 9968.13 1490.35 9945.2 1490.35 c
9922.19 1490.35 9902.3 1480.27 9885.55 1460.2 c
9868.75 1440.2 9860.39 1411.29 9860.39 1373.48 c
h
10358.8 1315.7 m
10413.3 1308.98 l
10404.7 1277.23 10388.8 1252.54 10365.5 1234.96 c
10342.3 1217.34 10312.6 1208.55 10276.4 1208.55 c
10231.1 1208.55 10195 1222.54 10168.4 1250.55 c
10141.7 1278.59 10128.4 1317.89 10128.4 1368.48 c
10128.4 1420.78 10141.8 1461.33 10168.7 1490.2 c
10195.6 1519.14 10230.6 1533.59 10273.6 1533.59 c
10315.2 1533.59 10349.1 1519.45 10375.5 1491.13 c
10401.8 1462.89 10415 1423.05 10415 1371.6 c
10415 1368.48 10414.9 1363.83 10414.7 1357.58 c
10182.7 1357.58 l
10184.7 1323.4 10194.4 1297.27 10211.8 1279.14 c
10229.2 1261.02 10250.8 1251.95 10276.8 1251.95 c
10296.1 1251.95 10312.6 1257.03 10326.3 1267.11 c
10339.9 1277.34 10350.7 1293.52 10358.8 1315.7 c
h
10185.7 1400.98 m
10359.4 1400.98 l
10357.1 1427.11 10350.5 1446.76 10339.6 1459.88 c
10322.7 1480.2 10300.9 1490.35 10274.1 1490.35 c
10250 1490.35 10229.6 1482.23 10213.1 1465.98 c
10196.6 1449.84 10187.5 1428.16 10185.7 1400.98 c
h
10185.7 1400.98 m
f
1 j
0.349121 0.349121 0.349121 rg
0.349121 0.349121 0.349121 RG
5490.2 6792.07 m
11682.3 6792.07 l
S
11682.3 6659.96 m
12045.3 6792.07 l
11682.3 6924.14 l
h
11682.3 6659.96 m
f*
0 j
11682.3 6659.96 m
12045.3 6792.07 l
11682.3 6924.14 l
h
11682.3 6659.96 m
S
1 j
5956.02 5480.27 m
12148.2 5480.27 l
S
5956.02 5612.38 m
5593.09 5480.27 l
5956.02 5348.16 l
h
5956.02 5612.38 m
f*
0 j
5956.02 5612.38 m
5593.09 5480.27 l
5956.02 5348.16 l
h
5956.02 5612.38 m
S
1 1 1 RG
1 1 1 rg
7270.66 6991.17 2923.2 718.199 re
f*
0 0 0 RG
0 0 0 rg
7770.82 7043.59 m
7770.82 7354.57 l
7818.32 7354.57 l
7818.32 7307.42 l
7830.39 7329.49 7841.52 7344.02 7851.76 7351.02 c
7862.07 7358.09 7873.36 7361.6 7885.63 7361.6 c
7903.44 7361.6 7921.52 7355.98 7939.84 7344.77 c
7921.72 7295.7 l
7908.79 7303.4 7895.94 7307.27 7883.13 7307.27 c
7871.56 7307.27 7861.21 7303.79 7852.07 7296.8 c
7842.89 7289.8 7836.33 7280.2 7832.38 7267.89 c
7826.52 7249.14 7823.63 7228.67 7823.63 7206.52 c
7823.63 7043.59 l
h
8184.1 7143.71 m
8238.63 7136.99 l
8230.08 7105.23 8214.14 7080.55 8190.82 7062.97 c
8167.58 7045.35 8137.93 7036.56 8101.8 7036.56 c
8056.37 7036.56 8020.35 7050.59 7993.67 7078.59 c
7967.03 7106.6 7953.71 7145.9 7953.71 7196.52 c
7953.71 7248.79 7967.15 7289.34 7993.98 7318.2 c
8020.98 7347.15 8055.98 7361.6 8098.98 7361.6 c
8140.51 7361.6 8174.45 7347.46 8200.82 7319.14 c
8227.15 7290.9 8240.35 7251.09 8240.35 7199.65 c
8240.35 7196.52 8240.23 7191.84 8240.04 7185.59 c
8008.05 7185.59 l
8010.04 7151.41 8019.73 7125.27 8037.11 7107.15 c
8054.49 7089.06 8076.17 7080 8102.11 7080 c
8121.48 7080 8137.97 7085.04 8151.6 7095.12 c
8165.23 7105.35 8176.09 7121.52 8184.1 7143.71 c
h
8011.02 7228.98 m
8184.73 7228.98 l
8182.42 7255.16 8175.82 7274.77 8164.88 7287.89 c
8148.01 7308.2 8126.21 7318.36 8099.45 7318.36 c
8075.27 7318.36 8054.92 7310.23 8038.36 7293.98 c
8021.91 7277.85 8012.81 7256.17 8011.02 7228.98 c
h
8503.16 6924.41 m
8503.16 7076.72 l
8494.92 7065.16 8483.44 7055.55 8468.63 7047.97 c
8453.95 7040.35 8438.28 7036.56 8421.64 7036.56 c
8384.77 7036.56 8353.01 7051.29 8326.33 7080.78 c
8299.69 7110.23 8286.37 7150.62 8286.37 7201.99 c
8286.37 7233.2 8291.76 7261.25 8302.62 7286.02 c
8313.44 7310.9 8329.14 7329.69 8349.77 7342.42 c
8370.39 7355.2 8393.01 7361.6 8417.58 7361.6 c
8455.98 7361.6 8486.25 7345.43 8508.32 7313.05 c
8508.32 7354.57 l
8555.82 7354.57 l
8555.82 6924.41 l
h
8340.55 7199.96 m
8340.55 7159.96 8348.95 7129.96 8365.7 7109.96 c
8382.46 7090 8402.58 7080 8426.02 7080 c
8448.48 7080 8467.81 7089.45 8483.95 7108.4 c
8500.2 7127.46 8508.32 7156.41 8508.32 7195.27 c
8508.32 7236.72 8499.77 7267.85 8482.7 7288.67 c
8465.63 7309.61 8445.59 7320.08 8422.58 7320.08 c
8399.77 7320.08 8380.39 7310.31 8364.45 7290.86 c
8348.52 7271.48 8340.55 7241.17 8340.55 7199.96 c
h
8842.23 7043.59 m
8842.23 7089.37 l
8818.05 7054.14 8785.16 7036.56 8743.52 7036.56 c
8725.16 7036.56 8708.05 7040.04 8692.11 7047.03 c
8676.17 7054.1 8664.38 7062.97 8656.64 7073.59 c
8648.95 7084.22 8643.52 7097.27 8640.39 7112.77 c
8638.32 7123.09 8637.27 7139.49 8637.27 7161.99 c
8637.27 7354.57 l
8689.92 7354.57 l
8689.92 7182.15 l
8689.92 7154.65 8691.02 7136.13 8693.2 7126.52 c
8696.52 7112.7 8703.55 7101.8 8714.3 7093.91 c
8725 7085.98 8738.28 7082.03 8754.14 7082.03 c
8769.96 7082.03 8784.8 7086.02 8798.63 7094.06 c
8812.5 7102.15 8822.27 7113.2 8828.01 7127.15 c
8833.83 7141.09 8836.76 7161.37 8836.76 7187.93 c
8836.76 7354.57 l
8889.41 7354.57 l
8889.41 7043.59 l
h
9184.88 7143.71 m
9239.38 7136.99 l
9230.86 7105.23 9214.92 7080.55 9191.6 7062.97 c
9168.36 7045.35 9138.67 7036.56 9102.54 7036.56 c
9057.15 7036.56 9021.13 7050.59 8994.45 7078.59 c
8967.81 7106.6 8954.49 7145.9 8954.49 7196.52 c
8954.49 7248.79 8967.89 7289.34 8994.77 7318.2 c
9021.76 7347.15 9056.72 7361.6 9099.73 7361.6 c
9141.29 7361.6 9175.23 7347.46 9201.6 7319.14 c
9227.93 7290.9 9241.09 7251.09 9241.09 7199.65 c
9241.09 7196.52 9241.02 7191.84 9240.78 7185.59 c
9008.83 7185.59 l
9010.82 7151.41 9020.51 7125.27 9037.89 7107.15 c
9055.27 7089.06 9076.95 7080 9102.85 7080 c
9122.23 7080 9138.75 7085.04 9152.38 7095.12 c
9166.02 7105.35 9176.84 7121.52 9184.88 7143.71 c
h
9011.8 7228.98 m
9185.51 7228.98 l
9183.2 7255.16 9176.6 7274.77 9165.66 7287.89 c
9148.79 7308.2 9126.99 7318.36 9100.2 7318.36 c
9076.05 7318.36 9055.7 7310.23 9039.14 7293.98 c
9022.7 7277.85 9013.55 7256.17 9011.8 7228.98 c
h
9284.45 7136.37 m
9336.64 7144.65 l
9339.57 7123.71 9347.7 7107.7 9361.02 7096.52 c
9374.45 7085.51 9393.2 7080 9417.23 7080 c
9441.41 7080 9459.3 7084.88 9470.98 7094.65 c
9482.73 7104.57 9488.63 7116.13 9488.63 7129.34 c
9488.63 7141.33 9483.48 7150.7 9473.16 7157.46 c
9465.86 7162.15 9447.93 7168.12 9419.26 7175.43 c
9380.55 7185.2 9353.71 7193.63 9338.83 7200.74 c
9323.95 7207.81 9312.58 7217.66 9304.77 7230.23 c
9297.07 7242.85 9293.2 7256.8 9293.2 7272.11 c
9293.2 7285.98 9296.41 7298.79 9302.73 7310.55 c
9309.1 7322.42 9317.73 7332.27 9328.67 7340.08 c
9336.91 7346.09 9348.09 7351.21 9362.27 7355.35 c
9376.41 7359.53 9391.64 7361.6 9407.85 7361.6 c
9432.23 7361.6 9453.63 7358.09 9472.07 7351.02 c
9490.51 7344.02 9504.1 7334.53 9512.85 7322.58 c
9521.68 7310.59 9527.77 7294.57 9531.13 7274.45 c
9479.57 7267.42 l
9477.19 7283.36 9470.35 7295.82 9459.1 7304.77 c
9447.97 7313.83 9432.15 7318.36 9411.6 7318.36 c
9387.34 7318.36 9370.08 7314.34 9359.77 7306.33 c
9349.45 7298.32 9344.3 7288.95 9344.3 7278.2 c
9344.3 7271.33 9346.45 7265.2 9350.7 7259.77 c
9354.96 7254.06 9361.68 7249.37 9370.86 7245.7 c
9376.17 7243.75 9391.68 7239.26 9417.38 7232.27 c
9454.77 7222.3 9480.82 7214.1 9495.51 7207.77 c
9510.27 7201.41 9521.84 7192.19 9530.2 7180.12 c
9538.59 7168.05 9542.81 7152.97 9542.81 7134.96 c
9542.81 7117.38 9537.66 7100.82 9527.38 7085.31 c
9517.15 7069.77 9502.38 7057.73 9483.01 7049.22 c
9463.75 7040.78 9441.88 7036.56 9417.38 7036.56 c
9376.99 7036.56 9346.17 7044.96 9324.92 7061.72 c
9303.79 7078.59 9290.31 7103.48 9284.45 7136.37 c
h
9720.59 7090.78 m
9728.24 7044.22 l
9713.36 7041.09 9700.08 7039.53 9688.4 7039.53 c
9669.26 7039.53 9654.41 7042.54 9643.91 7048.59 c
9633.36 7054.61 9625.94 7062.54 9621.56 7072.34 c
9617.3 7082.23 9615.16 7103.01 9615.16 7134.65 c
9615.16 7313.67 l
9576.56 7313.67 l
9576.56 7354.57 l
9615.16 7354.57 l
9615.16 7431.6 l
9667.62 7463.32 l
9667.62 7354.57 l
9720.59 7354.57 l
9720.59 7313.67 l
9667.62 7313.67 l
9667.62 7131.68 l
9667.62 7116.68 9668.52 7107.07 9670.27 7102.77 c
9672.15 7098.52 9675.2 7095.08 9679.34 7092.5 c
9683.63 7090 9689.65 7088.75 9697.46 7088.75 c
9703.32 7088.75 9711.02 7089.41 9720.59 7090.78 c
h
9720.59 7090.78 m
f
1 1 1 RG
1 1 1 rg
7270.74 5651.25 2923.2 718.199 re
f*
0 0 0 RG
0 0 0 rg
7537.5 5703.67 m
7537.5 6014.65 l
7584.96 6014.65 l
7584.96 5967.5 l
7597.03 5989.57 7608.2 6004.1 7618.4 6011.05 c
7628.71 6018.12 7640 6021.68 7652.3 6021.68 c
7670.12 6021.68 7688.16 6016.05 7706.48 6004.8 c
7688.36 5955.78 l
7675.47 5963.48 7662.62 5967.34 7649.8 5967.34 c
7638.24 5967.34 7627.89 5963.83 7618.71 5956.87 c
7609.53 5949.88 7602.97 5940.23 7599.02 5927.97 c
7593.2 5909.22 7590.27 5888.75 7590.27 5866.56 c
7590.27 5703.67 l
h
7950.74 5803.79 m
8005.27 5797.07 l
7996.72 5765.31 7980.78 5740.62 7957.46 5723.01 c
7934.26 5705.43 7904.57 5696.64 7868.44 5696.64 c
7823.05 5696.64 7786.99 5710.62 7760.35 5738.63 c
7733.67 5766.64 7720.35 5805.98 7720.35 5856.56 c
7720.35 5908.87 7733.79 5949.41 7760.66 5978.24 c
7787.62 6007.23 7822.62 6021.68 7865.63 6021.68 c
7907.19 6021.68 7941.13 6007.54 7967.46 5979.18 c
7993.83 5950.98 8006.99 5911.13 8006.99 5859.69 c
8006.99 5856.56 8006.88 5851.87 8006.68 5845.62 c
7774.73 5845.62 l
7776.68 5811.48 7786.37 5785.35 7803.75 5767.23 c
7821.17 5749.1 7842.81 5740.04 7868.75 5740.04 c
7888.13 5740.04 7904.61 5745.12 7918.28 5755.2 c
7931.91 5765.39 7942.73 5781.6 7950.74 5803.79 c
h
7777.7 5889.06 m
7951.37 5889.06 l
7949.1 5915.2 7942.46 5934.84 7931.52 5947.97 c
7914.69 5968.28 7892.85 5978.4 7866.09 5978.4 c
7841.95 5978.4 7821.56 5970.31 7805 5954.06 c
7788.55 5937.89 7779.45 5916.25 7777.7 5889.06 c
h
8050.35 5796.45 m
8102.54 5804.73 l
8105.43 5783.79 8113.55 5767.73 8126.88 5756.6 c
8140.31 5745.59 8159.06 5740.04 8183.13 5740.04 c
8207.3 5740.04 8225.2 5744.96 8236.88 5754.73 c
8248.63 5764.61 8254.49 5776.17 8254.49 5789.41 c
8254.49 5801.41 8249.38 5810.74 8239.06 5817.54 c
8231.76 5822.23 8213.79 5828.2 8185.16 5835.51 c
8146.41 5845.27 8119.61 5853.71 8104.73 5860.78 c
8089.8 5867.89 8078.48 5877.73 8070.66 5890.31 c
8062.97 5902.93 8059.1 5916.87 8059.1 5932.19 c
8059.1 5946.02 8062.27 5958.83 8068.63 5970.62 c
8075 5982.46 8083.63 5992.3 8094.57 6000.12 c
8102.77 6006.17 8113.98 6011.29 8128.13 6015.43 c
8142.3 6019.61 8157.5 6021.68 8173.75 6021.68 c
8198.13 6021.68 8219.53 6018.12 8237.97 6011.05 c
8256.37 6004.1 8269.96 5994.61 8278.71 5982.62 c
8287.58 5970.66 8293.67 5954.61 8296.99 5934.53 c
8245.47 5927.5 l
8243.05 5943.44 8236.25 5955.86 8225 5964.84 c
8213.83 5973.87 8198.01 5978.4 8177.5 5978.4 c
8153.24 5978.4 8135.94 5974.41 8125.63 5966.41 c
8115.35 5958.36 8110.2 5948.98 8110.2 5938.28 c
8110.2 5931.41 8112.3 5925.27 8116.6 5919.84 c
8120.86 5914.1 8127.58 5909.41 8136.72 5905.78 c
8142.03 5903.79 8157.58 5899.34 8183.28 5892.34 c
8220.66 5882.34 8246.72 5874.18 8261.37 5867.81 c
8276.17 5861.48 8287.73 5852.27 8296.05 5840.2 c
8304.49 5828.09 8308.71 5813.05 8308.71 5795.04 c
8308.71 5777.42 8303.55 5760.86 8293.24 5745.35 c
8283.05 5729.84 8268.24 5717.81 8248.91 5709.3 c
8229.61 5700.86 8207.77 5696.64 8183.28 5696.64 c
8142.89 5696.64 8112.07 5705 8090.82 5721.76 c
8069.69 5738.63 8056.17 5763.52 8050.35 5796.45 c
h
8371.37 5584.49 m
8371.37 6014.65 l
8419.45 6014.65 l
8419.45 5974.34 l
8430.7 5990.08 8443.48 6001.91 8457.73 6009.8 c
8471.99 6017.73 8489.3 6021.68 8509.57 6021.68 c
8536.13 6021.68 8559.57 6014.88 8579.88 6001.21 c
8600.2 5987.58 8615.51 5968.32 8625.82 5943.44 c
8636.21 5918.55 8641.41 5891.25 8641.41 5861.56 c
8641.41 5829.73 8635.7 5801.02 8624.26 5775.51 c
8612.89 5750.12 8596.29 5730.59 8574.41 5716.91 c
8552.66 5703.4 8529.8 5696.64 8505.86 5696.64 c
8488.24 5696.64 8472.46 5700.31 8458.52 5707.73 c
8444.57 5715.23 8433.09 5724.57 8424.14 5735.82 c
8424.14 5584.49 l
h
8419.14 5857.34 m
8419.14 5817.38 8427.23 5787.81 8443.36 5768.63 c
8459.61 5749.57 8479.22 5740.04 8502.27 5740.04 c
8525.66 5740.04 8545.74 5749.96 8562.38 5769.73 c
8579.14 5789.53 8587.54 5820.23 8587.54 5861.87 c
8587.54 5901.45 8579.38 5931.09 8563.01 5950.78 c
8546.76 5970.55 8527.3 5980.43 8504.61 5980.43 c
8482.19 5980.43 8462.38 5969.92 8445.08 5948.91 c
8427.77 5927.97 8419.14 5897.46 8419.14 5857.34 c
h
8685.43 5859.22 m
8685.43 5916.84 8701.41 5959.45 8733.36 5987.15 c
8760.12 6010.2 8792.73 6021.68 8831.13 6021.68 c
8873.95 6021.68 8908.91 6007.7 8935.98 5979.65 c
8963.13 5951.64 8976.72 5912.97 8976.72 5863.59 c
8976.72 5823.52 8970.74 5792.03 8958.75 5769.1 c
8946.8 5746.21 8929.3 5728.4 8906.29 5715.7 c
8883.36 5702.97 8858.32 5696.64 8831.13 5696.64 c
8787.62 5696.64 8752.42 5710.59 8725.55 5738.48 c
8698.79 5766.41 8685.43 5806.64 8685.43 5859.22 c
h
8739.45 5859.22 m
8739.45 5819.34 8748.16 5789.53 8765.55 5769.73 c
8782.93 5749.96 8804.8 5740.04 8831.13 5740.04 c
8857.38 5740.04 8879.14 5750 8896.45 5769.88 c
8913.83 5789.77 8922.54 5820.12 8922.54 5860.94 c
8922.54 5899.37 8913.79 5928.48 8896.29 5948.28 c
8878.91 5968.16 8857.19 5978.09 8831.13 5978.09 c
8804.8 5978.09 8782.93 5968.2 8765.55 5948.44 c
8748.16 5928.75 8739.45 5899.02 8739.45 5859.22 c
h
9038.52 5703.67 m
9038.52 6014.65 l
9086.02 6014.65 l
9086.02 5970.47 l
9108.83 6004.61 9141.84 6021.68 9185.04 6021.68 c
9203.79 6021.68 9221.02 6018.28 9236.76 6011.52 c
9252.46 6004.88 9264.26 5996.05 9272.07 5985.12 c
9279.84 5974.18 9285.31 5961.25 9288.44 5946.25 c
9290.31 5936.45 9291.25 5919.34 9291.25 5894.84 c
9291.25 5703.67 l
9238.63 5703.67 l
9238.63 5892.81 l
9238.63 5914.37 9236.52 5930.47 9232.38 5941.09 c
9228.32 5951.72 9221.02 5960.2 9210.51 5966.56 c
9200.08 5972.89 9187.85 5976.05 9173.79 5976.05 c
9151.41 5976.05 9132.03 5968.95 9115.7 5954.69 c
9099.45 5940.39 9091.33 5913.4 9091.33 5873.59 c
9091.33 5703.67 l
h
9351.02 5796.45 m
9403.2 5804.73 l
9406.13 5783.79 9414.26 5767.73 9427.58 5756.6 c
9441.02 5745.59 9459.77 5740.04 9483.79 5740.04 c
9507.97 5740.04 9525.86 5744.96 9537.54 5754.73 c
9549.3 5764.61 9555.2 5776.17 9555.2 5789.41 c
9555.2 5801.41 9550.04 5810.74 9539.73 5817.54 c
9532.42 5822.23 9514.45 5828.2 9485.82 5835.51 c
9447.11 5845.27 9420.27 5853.71 9405.39 5860.78 c
9390.51 5867.89 9379.14 5877.73 9371.33 5890.31 c
9363.63 5902.93 9359.77 5916.87 9359.77 5932.19 c
9359.77 5946.02 9362.97 5958.83 9369.3 5970.62 c
9375.66 5982.46 9384.3 5992.3 9395.23 6000.12 c
9403.48 6006.17 9414.65 6011.29 9428.83 6015.43 c
9442.97 6019.61 9458.2 6021.68 9474.41 6021.68 c
9498.79 6021.68 9520.2 6018.12 9538.63 6011.05 c
9557.07 6004.1 9570.66 5994.61 9579.41 5982.62 c
9588.24 5970.66 9594.34 5954.61 9597.7 5934.53 c
9546.13 5927.5 l
9543.75 5943.44 9536.91 5955.86 9525.66 5964.84 c
9514.53 5973.87 9498.71 5978.4 9478.16 5978.4 c
9453.91 5978.4 9436.64 5974.41 9426.33 5966.41 c
9416.02 5958.36 9410.86 5948.98 9410.86 5938.28 c
9410.86 5931.41 9413.01 5925.27 9417.27 5919.84 c
9421.52 5914.1 9428.24 5909.41 9437.42 5905.78 c
9442.73 5903.79 9458.24 5899.34 9483.95 5892.34 c
9521.33 5882.34 9547.38 5874.18 9562.07 5867.81 c
9576.84 5861.48 9588.4 5852.27 9596.76 5840.2 c
9605.16 5828.09 9609.38 5813.05 9609.38 5795.04 c
9609.38 5777.42 9604.22 5760.86 9593.95 5745.35 c
9583.71 5729.84 9568.95 5717.81 9549.57 5709.3 c
9530.31 5700.86 9508.44 5696.64 9483.95 5696.64 c
9443.55 5696.64 9412.73 5705 9391.48 5721.76 c
9370.35 5738.63 9356.88 5763.52 9351.02 5796.45 c
h
9884.92 5803.79 m
9939.45 5797.07 l
9930.9 5765.31 9914.96 5740.62 9891.64 5723.01 c
9868.44 5705.43 9838.75 5696.64 9802.62 5696.64 c
9757.23 5696.64 9721.17 5710.62 9694.53 5738.63 c
9667.85 5766.64 9654.53 5805.98 9654.53 5856.56 c
9654.53 5908.87 9667.97 5949.41 9694.84 5978.24 c
9721.8 6007.23 9756.8 6021.68 9799.8 6021.68 c
9841.37 6021.68 9875.31 6007.54 9901.64 5979.18 c
9928.01 5950.98 9941.17 5911.13 9941.17 5859.69 c
9941.17 5856.56 9941.05 5851.87 9940.86 5845.62 c
9708.91 5845.62 l
9710.86 5811.48 9720.55 5785.35 9737.93 5767.23 c
9755.35 5749.1 9776.99 5740.04 9802.93 5740.04 c
9822.3 5740.04 9838.79 5745.12 9852.46 5755.2 c
9866.09 5765.39 9876.91 5781.6 9884.92 5803.79 c
h
9711.88 5889.06 m
9885.55 5889.06 l
9883.28 5915.2 9876.64 5934.84 9865.7 5947.97 c
9848.87 5968.28 9827.03 5978.4 9800.27 5978.4 c
9776.09 5978.4 9755.74 5970.31 9739.18 5954.06 c
9722.73 5937.89 9713.63 5916.25 9711.88 5889.06 c
h
9711.88 5889.06 m
f
7474.73 4173.32 m
7544.22 4177.54 l
7544.22 4157.66 7547.3 4140.62 7553.44 4126.48 c
7559.57 4112.42 7570.9 4100.9 7587.34 4091.95 c
7603.91 4083.01 7623.16 4078.52 7645.12 4078.52 c
7675.86 4078.52 7698.87 4084.65 7714.18 4096.95 c
7729.57 4109.22 7737.3 4123.71 7737.3 4140.35 c
7737.3 4152.34 7732.7 4163.75 7723.55 4174.57 c
7714.06 4185.31 7690.94 4198.52 7654.18 4214.26 c
7617.42 4229.96 7593.95 4241.05 7583.75 4247.54 c
7566.56 4257.93 7553.59 4270.23 7544.84 4284.37 c
7536.21 4298.63 7531.88 4315 7531.88 4333.44 c
7531.88 4365.7 7544.69 4393.36 7570.31 4416.37 c
7595.94 4439.37 7631.76 4450.9 7677.77 4450.9 c
7729.02 4450.9 7768.01 4439.06 7794.77 4415.43 c
7821.52 4391.8 7835.39 4360.66 7836.33 4322.03 c
7768.36 4317.34 l
7767.34 4341.91 7758.63 4361.33 7742.3 4375.62 c
7725.94 4389.96 7702.77 4397.15 7672.77 4397.15 c
7648.71 4397.15 7630.04 4391.64 7616.72 4380.62 c
7603.48 4369.69 7596.88 4357.81 7596.88 4345 c
7596.88 4332.19 7602.58 4320.94 7614.06 4311.25 c
7621.76 4304.57 7641.6 4294.34 7673.55 4280.47 c
7726.76 4257.46 7760.31 4239.3 7774.14 4225.98 c
7796.21 4204.73 7807.27 4178.83 7807.27 4148.32 c
7807.27 4128.12 7801.02 4108.28 7788.52 4088.83 c
7776.13 4069.45 7757.19 4053.95 7731.68 4042.27 c
7706.25 4030.62 7676.25 4024.77 7641.68 4024.77 c
7594.61 4024.77 7554.57 4036.45 7521.56 4059.77 c
7488.55 4083.01 7472.93 4120.86 7474.73 4173.32 c
h
8160.74 4172.54 m
8228.4 4165.66 l
8218.71 4132.15 8196.37 4100.27 8161.37 4070.08 c
8126.48 4039.88 8084.84 4024.77 8036.41 4024.77 c
8006.21 4024.77 7978.52 4031.76 7953.32 4045.7 c
7928.13 4059.65 7908.91 4079.92 7895.66 4106.48 c
7882.54 4133.12 7875.98 4163.48 7875.98 4197.54 c
7875.98 4242.11 7886.25 4285.31 7906.76 4327.19 c
7927.38 4369.06 7954.1 4400.12 7986.91 4420.43 c
8019.69 4440.74 8055.16 4450.9 8093.28 4450.9 c
8141.91 4450.9 8180.74 4435.78 8209.8 4405.59 c
8238.87 4375.39 8253.4 4334.22 8253.4 4282.03 c
8253.4 4262.03 8251.56 4241.6 8247.93 4220.66 c
7947.7 4220.66 l
7946.64 4212.62 7946.13 4205.47 7946.13 4199.1 c
7946.13 4160.98 7954.88 4131.87 7972.38 4111.8 c
7989.96 4091.68 8011.41 4081.64 8036.72 4081.64 c
8060.59 4081.64 8084.02 4089.45 8107.03 4105.08 c
8130.04 4120.7 8147.93 4143.16 8160.74 4172.54 c
h
7958.79 4273.59 m
8187.62 4273.59 l
8187.93 4280.78 8188.09 4285.9 8188.09 4288.91 c
8188.09 4323.71 8179.38 4350.35 8161.99 4368.91 c
8144.61 4387.54 8122.23 4396.84 8094.84 4396.84 c
8065.04 4396.84 8037.93 4386.6 8013.44 4366.09 c
7989.1 4345.66 7970.86 4314.84 7958.79 4273.59 c
h
8298.63 4033.98 m
8383.91 4441.68 l
8445.31 4441.68 l
8427.97 4358.44 l
8448.98 4389.88 8469.57 4413.16 8489.65 4428.24 c
8509.77 4443.36 8530.31 4450.9 8551.37 4450.9 c
8565.12 4450.9 8582.07 4445.94 8602.3 4436.05 c
8574.02 4371.56 l
8561.91 4380.2 8548.71 4384.49 8534.34 4384.49 c
8510.08 4384.49 8485.12 4370.94 8459.53 4343.75 c
8433.91 4316.68 8413.79 4267.93 8399.22 4197.54 c
8364.69 4033.98 l
h
8663.4 4033.98 m
8596.56 4441.68 l
8664.18 4441.68 l
8699.02 4217.07 l
8702.89 4192.58 8707.62 4152.54 8713.24 4096.95 c
8726.56 4125.9 8743.59 4159.06 8764.34 4196.45 c
8900.7 4441.68 l
8973.95 4441.68 l
8740.59 4033.98 l
h
9052.34 4518.2 m
9068.91 4596.8 l
9137.97 4596.8 l
9121.41 4518.2 l
h
8950.98 4033.98 m
9036.29 4441.68 l
9105.78 4441.68 l
9020.51 4033.98 l
h
9409.8 4182.54 m
9479.34 4175.35 l
9461.95 4124.34 9437.15 4086.48 9404.96 4061.8 c
9372.89 4037.11 9336.33 4024.77 9295.31 4024.77 c
9251.05 4024.77 9215.2 4039.1 9187.7 4067.73 c
9160.2 4096.48 9146.45 4136.56 9146.45 4188.01 c
9146.45 4232.46 9155.27 4276.21 9172.85 4319.22 c
9190.55 4362.23 9215.86 4394.92 9248.75 4417.3 c
9281.68 4439.69 9319.22 4450.9 9361.41 4450.9 c
9405.12 4450.9 9439.8 4438.55 9465.43 4413.87 c
9491.05 4389.18 9503.87 4356.48 9503.87 4315.78 c
9435.59 4311.25 l
9435.27 4337.07 9427.73 4357.27 9412.93 4371.87 c
9398.24 4386.45 9378.87 4393.71 9354.84 4393.71 c
9326.91 4393.71 9302.7 4384.88 9282.19 4367.19 c
9261.8 4349.57 9245.74 4322.77 9234.1 4286.72 c
9222.42 4250.82 9216.6 4216.21 9216.6 4183.01 c
9216.6 4148.12 9224.26 4121.99 9239.57 4104.61 c
9254.96 4087.19 9273.98 4078.52 9296.56 4078.52 c
9319.06 4078.52 9340.63 4087.11 9361.25 4104.3 c
9381.84 4121.48 9398.05 4147.54 9409.8 4182.54 c
h
9820.94 4172.54 m
9888.59 4165.66 l
9878.91 4132.15 9856.56 4100.27 9821.56 4070.08 c
9786.68 4039.88 9745.04 4024.77 9696.6 4024.77 c
9666.41 4024.77 9638.71 4031.76 9613.52 4045.7 c
9588.32 4059.65 9569.1 4079.92 9555.86 4106.48 c
9542.73 4133.12 9536.17 4163.48 9536.17 4197.54 c
9536.17 4242.11 9546.45 4285.31 9566.95 4327.19 c
9587.58 4369.06 9614.3 4400.12 9647.07 4420.43 c
9679.88 4440.74 9715.35 4450.9 9753.48 4450.9 c
9802.11 4450.9 9840.94 4435.78 9870 4405.59 c
9899.02 4375.39 9913.55 4334.22 9913.55 4282.03 c
9913.55 4262.03 9911.76 4241.6 9908.09 4220.66 c
9607.89 4220.66 l
9606.84 4212.62 9606.33 4205.47 9606.33 4199.1 c
9606.33 4160.98 9615.08 4131.87 9632.58 4111.8 c
9650.16 4091.68 9671.6 4081.64 9696.91 4081.64 c
9720.74 4081.64 9744.18 4089.45 9767.19 4105.08 c
9790.23 4120.7 9808.13 4143.16 9820.94 4172.54 c
h
9618.98 4273.59 m
9847.81 4273.59 l
9848.13 4280.78 9848.28 4285.9 9848.28 4288.91 c
9848.28 4323.71 9839.57 4350.35 9822.19 4368.91 c
9804.8 4387.54 9782.42 4396.84 9755.04 4396.84 c
9725.23 4396.84 9698.13 4386.6 9673.63 4366.09 c
9649.26 4345.66 9631.05 4314.84 9618.98 4273.59 c
h
9618.98 4273.59 m
f
Q
Q

endstream
endobj
pagesave restore
%%PageTrailer
%%Trailer
end
[/EMC pdfmark
%%EOF
